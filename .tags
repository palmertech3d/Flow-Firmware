!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	.\Firmware\src\HAL\macros.h	81;"	d
ABC	.\Firmware\src\HAL\macros.h	29;"	d
ABCE	.\Firmware\src\HAL\macros.h	27;"	d
ABS	.\Firmware\src\HAL\macros.h	/^  template <class T> static inline constexpr const T ABS(const T v) { return v >= 0 ? v : -v; }$/;"	f
ABS	.\Firmware\src\HAL\macros.h	273;"	d
ABS	.\Firmware\src\HAL\macros.h	277;"	d
ACOS	.\Firmware\src\HAL\macros.h	290;"	d
ADD0	.\Firmware\src\HAL\macros.h	464;"	d
ADD1	.\Firmware\src\HAL\macros.h	465;"	d
ADD10	.\Firmware\src\HAL\macros.h	474;"	d
ADD2	.\Firmware\src\HAL\macros.h	466;"	d
ADD3	.\Firmware\src\HAL\macros.h	467;"	d
ADD4	.\Firmware\src\HAL\macros.h	468;"	d
ADD5	.\Firmware\src\HAL\macros.h	469;"	d
ADD6	.\Firmware\src\HAL\macros.h	470;"	d
ADD7	.\Firmware\src\HAL\macros.h	471;"	d
ADD8	.\Firmware\src\HAL\macros.h	472;"	d
ADD9	.\Firmware\src\HAL\macros.h	473;"	d
ALL	.\Firmware\src\HAL\macros.h	209;"	d
ANY	.\Firmware\src\HAL\macros.h	207;"	d
ANY_BUTTON	.\Firmware\src\HAL\macros.h	223;"	d
ANY_PIN	.\Firmware\src\HAL\macros.h	218;"	d
ARRAY_N	.\Firmware\src\HAL\macros.h	259;"	d
ATAN2	.\Firmware\src\HAL\macros.h	291;"	d
AUTOMATIC	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	12;"	d
AVERAGE_THERMOCOUPLE_H	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.h	44;"	d
AccelStepper	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^AccelStepper::AccelStepper(uint8_t interface, uint8_t pin1, uint8_t pin2, uint8_t pin3, uint8_t pin4, bool enable)$/;"	f	class:AccelStepper
AccelStepper	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^AccelStepper::AccelStepper(void (*forward)(), void (*backward)())$/;"	f	class:AccelStepper
AccelStepper	.\Firmware\lib\AccelStepper\AccelStepper.h	/^class AccelStepper$/;"	c
AccelStepper_h	.\Firmware\lib\AccelStepper\AccelStepper.h	258;"	d
AverageThermocouple	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.cpp	/^AverageThermocouple::AverageThermocouple($/;"	f	class:AverageThermocouple
BOOL	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  BOOL = 1, BOOLEAN = 1,$/;"	m	class:DataType
BOOLEAN	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  BOOL = 1, BOOLEAN = 1,$/;"	m	class:DataType
BOOLEAN_GETTER	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  BOOL_GETTER = 201, BOOLEAN_GETTER = 201,$/;"	m	class:DataType
BOOL_GETTER	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  BOOL_GETTER = 201, BOOLEAN_GETTER = 201,$/;"	m	class:DataType
BOTH	.\Firmware\src\HAL\macros.h	210;"	d
BUTTONS_EXIST	.\Firmware\src\HAL\macros.h	222;"	d
BUTTON_EXISTS	.\Firmware\src\HAL\macros.h	220;"	d
BYTE_GETTER	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  UINT8_T_GETTER = 209, BYTE_GETTER = 209,$/;"	m	class:DataType
Button	.\Firmware\lib\LiquidMenu\examples\C_functions_menu\Button.h	/^	Button (uint8_t pin, bool pullup = false, uint16_t debounceDelay = 50)$/;"	f	class:Button
Button	.\Firmware\lib\LiquidMenu\examples\C_functions_menu\Button.h	/^class Button {$/;"	c
Button	.\Firmware\lib\LiquidMenu\examples\D_buttons_menu\Button.h	/^	Button (uint8_t pin, bool pullup = false, uint16_t debounceDelay = 50)$/;"	f	class:Button
Button	.\Firmware\lib\LiquidMenu\examples\D_buttons_menu\Button.h	/^class Button {$/;"	c
Button	.\Firmware\lib\LiquidMenu\examples\F_focus_menu\Button.h	/^	Button (uint8_t pin, bool pullup = false, uint16_t debounceDelay = 50)$/;"	f	class:Button
Button	.\Firmware\lib\LiquidMenu\examples\F_focus_menu\Button.h	/^class Button {$/;"	c
Button	.\Firmware\lib\LiquidMenu\examples\H_system_menu\Button.h	/^	Button (uint8_t pin, bool pullup = false, uint16_t debounceDelay = 50)$/;"	f	class:Button
Button	.\Firmware\lib\LiquidMenu\examples\H_system_menu\Button.h	/^class Button {$/;"	c
Button	.\Firmware\lib\LiquidMenu\examples\J_scrolling_menu\Button.h	/^	Button (uint8_t pin, bool pullup = false, uint16_t debounceDelay = 50)$/;"	f	class:Button
Button	.\Firmware\lib\LiquidMenu\examples\J_scrolling_menu\Button.h	/^class Button {$/;"	c
CALL_IF_EXISTS	.\Firmware\src\HAL\macros.h	366;"	d
CALL_IF_EXISTS_IMPL	.\Firmware\src\HAL\macros.h	360;"	d
CAT	.\Firmware\src\HAL\macros.h	175;"	d
CBI	.\Firmware\src\HAL\macros.h	93;"	d
CBI32	.\Firmware\src\HAL\macros.h	99;"	d
CEIL	.\Firmware\src\HAL\macros.h	295;"	d
CEILING	.\Firmware\src\HAL\macros.h	271;"	d
CHAR	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  CHAR = 60,$/;"	m	class:DataType
CHAR_GETTER	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  CHAR_GETTER = 250,$/;"	m	class:DataType
CHAR_PTR	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  CHAR_PTR = 61,$/;"	m	class:DataType
CHAR_PTR_GETTER	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  CHAR_PTR_GETTER = 251,$/;"	m	class:DataType
CIRCLE_AREA	.\Firmware\src\HAL\macros.h	108;"	d
CIRCLE_CIRC	.\Firmware\src\HAL\macros.h	109;"	d
CONST_CHAR_PTR	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  CONST_CHAR_PTR = 62,$/;"	m	class:DataType
CONST_CHAR_PTR_GETTER	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  CONST_CHAR_PTR_GETTER = 252$/;"	m	class:DataType
COPY	.\Firmware\src\HAL\macros.h	234;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	107;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	10;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	116;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	125;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	130;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	135;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	141;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	148;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	206;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	223;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	257;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	291;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	37;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	43;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	53;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	79;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	88;"	d
CORE_INT0_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	95;"	d
CORE_INT10_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	158;"	d
CORE_INT10_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	267;"	d
CORE_INT10_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	301;"	d
CORE_INT10_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	325;"	d
CORE_INT10_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	63;"	d
CORE_INT11_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	159;"	d
CORE_INT11_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	268;"	d
CORE_INT11_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	302;"	d
CORE_INT11_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	326;"	d
CORE_INT11_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	64;"	d
CORE_INT12_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	160;"	d
CORE_INT12_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	214;"	d
CORE_INT12_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	231;"	d
CORE_INT12_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	269;"	d
CORE_INT12_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	303;"	d
CORE_INT12_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	327;"	d
CORE_INT12_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	65;"	d
CORE_INT13_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	161;"	d
CORE_INT13_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	215;"	d
CORE_INT13_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	232;"	d
CORE_INT13_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	270;"	d
CORE_INT13_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	304;"	d
CORE_INT13_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	328;"	d
CORE_INT13_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	66;"	d
CORE_INT14_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	162;"	d
CORE_INT14_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	216;"	d
CORE_INT14_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	233;"	d
CORE_INT14_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	271;"	d
CORE_INT14_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	305;"	d
CORE_INT14_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	67;"	d
CORE_INT15_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	163;"	d
CORE_INT15_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	217;"	d
CORE_INT15_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	234;"	d
CORE_INT15_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	272;"	d
CORE_INT15_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	306;"	d
CORE_INT15_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	68;"	d
CORE_INT16_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	164;"	d
CORE_INT16_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	235;"	d
CORE_INT16_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	273;"	d
CORE_INT16_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	307;"	d
CORE_INT16_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	69;"	d
CORE_INT17_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	165;"	d
CORE_INT17_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	236;"	d
CORE_INT17_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	274;"	d
CORE_INT17_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	308;"	d
CORE_INT17_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	70;"	d
CORE_INT18_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	166;"	d
CORE_INT18_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	237;"	d
CORE_INT18_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	275;"	d
CORE_INT18_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	309;"	d
CORE_INT18_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	71;"	d
CORE_INT19_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	167;"	d
CORE_INT19_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	238;"	d
CORE_INT19_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	276;"	d
CORE_INT19_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	310;"	d
CORE_INT19_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	72;"	d
CORE_INT1_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	108;"	d
CORE_INT1_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	117;"	d
CORE_INT1_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	136;"	d
CORE_INT1_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	13;"	d
CORE_INT1_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	142;"	d
CORE_INT1_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	149;"	d
CORE_INT1_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	207;"	d
CORE_INT1_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	224;"	d
CORE_INT1_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	258;"	d
CORE_INT1_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	292;"	d
CORE_INT1_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	38;"	d
CORE_INT1_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	44;"	d
CORE_INT1_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	54;"	d
CORE_INT1_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	80;"	d
CORE_INT1_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	89;"	d
CORE_INT1_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	96;"	d
CORE_INT20_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	168;"	d
CORE_INT20_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	277;"	d
CORE_INT20_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	311;"	d
CORE_INT20_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	73;"	d
CORE_INT21_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	169;"	d
CORE_INT21_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	239;"	d
CORE_INT21_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	278;"	d
CORE_INT21_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	312;"	d
CORE_INT21_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	74;"	d
CORE_INT22_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	170;"	d
CORE_INT22_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	240;"	d
CORE_INT22_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	279;"	d
CORE_INT22_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	313;"	d
CORE_INT23_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	171;"	d
CORE_INT23_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	241;"	d
CORE_INT23_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	280;"	d
CORE_INT23_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	314;"	d
CORE_INT24_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	172;"	d
CORE_INT24_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	281;"	d
CORE_INT24_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	315;"	d
CORE_INT25_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	173;"	d
CORE_INT25_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	242;"	d
CORE_INT25_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	282;"	d
CORE_INT25_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	316;"	d
CORE_INT26_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	174;"	d
CORE_INT26_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	243;"	d
CORE_INT26_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	283;"	d
CORE_INT27_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	175;"	d
CORE_INT27_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	244;"	d
CORE_INT27_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	284;"	d
CORE_INT28_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	176;"	d
CORE_INT28_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	285;"	d
CORE_INT29_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	177;"	d
CORE_INT29_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	286;"	d
CORE_INT2_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	109;"	d
CORE_INT2_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	118;"	d
CORE_INT2_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	150;"	d
CORE_INT2_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	16;"	d
CORE_INT2_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	208;"	d
CORE_INT2_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	225;"	d
CORE_INT2_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	259;"	d
CORE_INT2_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	293;"	d
CORE_INT2_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	321;"	d
CORE_INT2_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	45;"	d
CORE_INT2_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	55;"	d
CORE_INT2_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	81;"	d
CORE_INT2_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	90;"	d
CORE_INT2_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	97;"	d
CORE_INT30_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	178;"	d
CORE_INT30_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	287;"	d
CORE_INT31_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	179;"	d
CORE_INT32_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	180;"	d
CORE_INT32_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	245;"	d
CORE_INT33_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	181;"	d
CORE_INT33_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	246;"	d
CORE_INT34_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	182;"	d
CORE_INT34_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	247;"	d
CORE_INT35_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	183;"	d
CORE_INT35_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	248;"	d
CORE_INT36_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	184;"	d
CORE_INT36_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	249;"	d
CORE_INT37_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	185;"	d
CORE_INT38_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	186;"	d
CORE_INT39_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	187;"	d
CORE_INT39_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	250;"	d
CORE_INT3_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	110;"	d
CORE_INT3_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	119;"	d
CORE_INT3_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	151;"	d
CORE_INT3_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	19;"	d
CORE_INT3_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	209;"	d
CORE_INT3_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	226;"	d
CORE_INT3_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	260;"	d
CORE_INT3_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	294;"	d
CORE_INT3_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	46;"	d
CORE_INT3_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	56;"	d
CORE_INT3_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	82;"	d
CORE_INT3_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	98;"	d
CORE_INT40_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	188;"	d
CORE_INT41_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	189;"	d
CORE_INT42_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	190;"	d
CORE_INT43_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	191;"	d
CORE_INT44_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	192;"	d
CORE_INT45_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	193;"	d
CORE_INT46_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	194;"	d
CORE_INT47_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	195;"	d
CORE_INT48_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	196;"	d
CORE_INT49_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	197;"	d
CORE_INT4_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	111;"	d
CORE_INT4_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	120;"	d
CORE_INT4_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	152;"	d
CORE_INT4_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	210;"	d
CORE_INT4_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	227;"	d
CORE_INT4_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	22;"	d
CORE_INT4_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	261;"	d
CORE_INT4_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	295;"	d
CORE_INT4_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	47;"	d
CORE_INT4_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	57;"	d
CORE_INT4_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	83;"	d
CORE_INT4_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	99;"	d
CORE_INT50_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	198;"	d
CORE_INT51_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	199;"	d
CORE_INT52_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	200;"	d
CORE_INT53_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	201;"	d
CORE_INT5_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	100;"	d
CORE_INT5_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	153;"	d
CORE_INT5_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	211;"	d
CORE_INT5_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	228;"	d
CORE_INT5_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	25;"	d
CORE_INT5_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	262;"	d
CORE_INT5_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	296;"	d
CORE_INT5_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	322;"	d
CORE_INT5_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	48;"	d
CORE_INT5_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	58;"	d
CORE_INT6_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	101;"	d
CORE_INT6_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	154;"	d
CORE_INT6_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	263;"	d
CORE_INT6_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	28;"	d
CORE_INT6_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	297;"	d
CORE_INT6_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	59;"	d
CORE_INT7_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	102;"	d
CORE_INT7_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	155;"	d
CORE_INT7_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	264;"	d
CORE_INT7_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	298;"	d
CORE_INT7_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	31;"	d
CORE_INT7_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	323;"	d
CORE_INT7_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	60;"	d
CORE_INT8_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	156;"	d
CORE_INT8_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	265;"	d
CORE_INT8_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	299;"	d
CORE_INT8_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	324;"	d
CORE_INT8_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	61;"	d
CORE_INT9_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	157;"	d
CORE_INT9_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	266;"	d
CORE_INT9_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	300;"	d
CORE_INT9_PIN	.\Firmware\lib\Encoder\utility\interrupt_pins.h	62;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	106;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	115;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	124;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	129;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	134;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	140;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	147;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	205;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	222;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	256;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	290;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	320;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	36;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	42;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	52;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	78;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	87;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	8;"	d
CORE_NUM_INTERRUPT	.\Firmware\lib\Encoder\utility\interrupt_pins.h	94;"	d
COUNT	.\Firmware\src\HAL\macros.h	232;"	d
COUNT_ENABLED	.\Firmware\src\HAL\macros.h	187;"	d
CS_pin	.\Firmware\lib\MAX6675_Thermocouple\src\MAX6675_Thermocouple.h	/^		int CS_pin;$/;"	m	class:final
CUSTOM	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  CUSTOM = 3,$/;"	m	class:DataType::Position
CYCLES_PER_MICROSECOND	.\Firmware\src\HAL\macros.h	71;"	d
Cancel	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.cpp	/^void PID_ATune::Cancel()$/;"	f	class:PID_ATune
CompileTimeString	.\Firmware\src\HAL\macros.h	/^  namespace CompileTimeString {$/;"	n
Compute	.\Firmware\lib\Arduino-PID-Library\PID_v1.cpp	/^bool PID::Compute()$/;"	f	class:PID
DEBUG	.\Firmware\lib\LiquidMenu\src\LiquidMenu_debug.h	11;"	d
DEBUG	.\Firmware\lib\LiquidMenu\src\LiquidMenu_debug.h	16;"	d
DEBUG	.\Firmware\lib\LiquidMenu\src\LiquidMenu_debug.h	23;"	d
DEBUG2	.\Firmware\lib\LiquidMenu\src\LiquidMenu_debug.h	13;"	d
DEBUG2	.\Firmware\lib\LiquidMenu\src\LiquidMenu_debug.h	18;"	d
DEBUG2	.\Firmware\lib\LiquidMenu\src\LiquidMenu_debug.h	27;"	d
DEBUGLN	.\Firmware\lib\LiquidMenu\src\LiquidMenu_debug.h	12;"	d
DEBUGLN	.\Firmware\lib\LiquidMenu\src\LiquidMenu_debug.h	17;"	d
DEBUGLN	.\Firmware\lib\LiquidMenu\src\LiquidMenu_debug.h	25;"	d
DEBUGLN2	.\Firmware\lib\LiquidMenu\src\LiquidMenu_debug.h	14;"	d
DEBUGLN2	.\Firmware\lib\LiquidMenu\src\LiquidMenu_debug.h	19;"	d
DEBUGLN2	.\Firmware\lib\LiquidMenu\src\LiquidMenu_debug.h	29;"	d
DECIMAL	.\Firmware\src\HAL\macros.h	228;"	d
DECIMAL_SIGNED	.\Firmware\src\HAL\macros.h	231;"	d
DECREMENT	.\Firmware\src\HAL\macros.h	494;"	d
DECREMENT_	.\Firmware\src\HAL\macros.h	493;"	d
DEC_0	.\Firmware\src\HAL\macros.h	477;"	d
DEC_1	.\Firmware\src\HAL\macros.h	478;"	d
DEC_10	.\Firmware\src\HAL\macros.h	487;"	d
DEC_11	.\Firmware\src\HAL\macros.h	488;"	d
DEC_12	.\Firmware\src\HAL\macros.h	489;"	d
DEC_13	.\Firmware\src\HAL\macros.h	490;"	d
DEC_14	.\Firmware\src\HAL\macros.h	491;"	d
DEC_15	.\Firmware\src\HAL\macros.h	492;"	d
DEC_2	.\Firmware\src\HAL\macros.h	479;"	d
DEC_3	.\Firmware\src\HAL\macros.h	480;"	d
DEC_4	.\Firmware\src\HAL\macros.h	481;"	d
DEC_5	.\Firmware\src\HAL\macros.h	482;"	d
DEC_6	.\Firmware\src\HAL\macros.h	483;"	d
DEC_7	.\Firmware\src\HAL\macros.h	484;"	d
DEC_8	.\Firmware\src\HAL\macros.h	485;"	d
DEC_9	.\Firmware\src\HAL\macros.h	486;"	d
DEFAULT_DELAY_TIME	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.h	/^    static const int DEFAULT_DELAY_TIME = 1;$/;"	m	class:final
DEFAULT_READINGS_NUMBER	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.h	/^    static const int DEFAULT_READINGS_NUMBER = 10;$/;"	m	class:final
DEFER	.\Firmware\src\HAL\macros.h	517;"	d
DEFER2	.\Firmware\src\HAL\macros.h	518;"	d
DEFER3	.\Firmware\src\HAL\macros.h	519;"	d
DEFER4	.\Firmware\src\HAL\macros.h	520;"	d
DEGREES	.\Firmware\src\HAL\macros.h	104;"	d
DESCRAMBLE_INT_ORDER	.\Firmware\lib\Encoder\utility\interrupt_config.h	12;"	d
DESCRAMBLE_INT_ORDER	.\Firmware\lib\Encoder\utility\interrupt_config.h	9;"	d
DIFF_TERN	.\Firmware\src\HAL\macros.h	202;"	d
DIO0_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	62;"	d
DIO0_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	14;"	d
DIO0_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	59;"	d
DIO0_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	11;"	d
DIO0_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	63;"	d
DIO0_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	15;"	d
DIO0_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	60;"	d
DIO0_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	12;"	d
DIO0_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	61;"	d
DIO0_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	13;"	d
DIO10_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	122;"	d
DIO10_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	74;"	d
DIO10_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	119;"	d
DIO10_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	71;"	d
DIO10_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	123;"	d
DIO10_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	75;"	d
DIO10_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	120;"	d
DIO10_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	72;"	d
DIO10_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	121;"	d
DIO10_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	73;"	d
DIO11_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	128;"	d
DIO11_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	80;"	d
DIO11_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	125;"	d
DIO11_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	77;"	d
DIO11_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	129;"	d
DIO11_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	81;"	d
DIO11_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	126;"	d
DIO11_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	78;"	d
DIO11_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	127;"	d
DIO11_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	79;"	d
DIO12_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	134;"	d
DIO12_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	86;"	d
DIO12_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	131;"	d
DIO12_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	83;"	d
DIO12_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	135;"	d
DIO12_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	87;"	d
DIO12_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	132;"	d
DIO12_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	84;"	d
DIO12_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	133;"	d
DIO12_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	85;"	d
DIO13_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	140;"	d
DIO13_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	92;"	d
DIO13_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	137;"	d
DIO13_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	89;"	d
DIO13_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	141;"	d
DIO13_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	93;"	d
DIO13_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	138;"	d
DIO13_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	90;"	d
DIO13_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	139;"	d
DIO13_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	91;"	d
DIO14_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	146;"	d
DIO14_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	98;"	d
DIO14_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	143;"	d
DIO14_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	95;"	d
DIO14_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	147;"	d
DIO14_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	99;"	d
DIO14_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	144;"	d
DIO14_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	96;"	d
DIO14_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	145;"	d
DIO14_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	97;"	d
DIO15_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	152;"	d
DIO15_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	104;"	d
DIO15_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	149;"	d
DIO15_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	101;"	d
DIO15_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	153;"	d
DIO15_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	105;"	d
DIO15_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	150;"	d
DIO15_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	102;"	d
DIO15_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	151;"	d
DIO15_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	103;"	d
DIO16_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	158;"	d
DIO16_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	110;"	d
DIO16_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	155;"	d
DIO16_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	107;"	d
DIO16_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	159;"	d
DIO16_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	111;"	d
DIO16_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	156;"	d
DIO16_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	108;"	d
DIO16_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	157;"	d
DIO16_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	109;"	d
DIO17_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	164;"	d
DIO17_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	116;"	d
DIO17_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	161;"	d
DIO17_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	113;"	d
DIO17_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	165;"	d
DIO17_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	117;"	d
DIO17_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	162;"	d
DIO17_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	114;"	d
DIO17_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	163;"	d
DIO17_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	115;"	d
DIO18_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	170;"	d
DIO18_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	122;"	d
DIO18_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	167;"	d
DIO18_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	119;"	d
DIO18_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	171;"	d
DIO18_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	123;"	d
DIO18_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	168;"	d
DIO18_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	120;"	d
DIO18_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	169;"	d
DIO18_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	121;"	d
DIO19_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	176;"	d
DIO19_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	128;"	d
DIO19_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	173;"	d
DIO19_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	125;"	d
DIO19_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	177;"	d
DIO19_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	129;"	d
DIO19_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	174;"	d
DIO19_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	126;"	d
DIO19_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	175;"	d
DIO19_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	127;"	d
DIO1_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	68;"	d
DIO1_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	20;"	d
DIO1_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	65;"	d
DIO1_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	17;"	d
DIO1_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	69;"	d
DIO1_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	21;"	d
DIO1_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	66;"	d
DIO1_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	18;"	d
DIO1_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	67;"	d
DIO1_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	19;"	d
DIO20_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	182;"	d
DIO20_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	134;"	d
DIO20_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	179;"	d
DIO20_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	131;"	d
DIO20_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	183;"	d
DIO20_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	135;"	d
DIO20_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	180;"	d
DIO20_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	132;"	d
DIO20_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	181;"	d
DIO20_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	133;"	d
DIO21_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	188;"	d
DIO21_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	140;"	d
DIO21_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	185;"	d
DIO21_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	137;"	d
DIO21_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	189;"	d
DIO21_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	141;"	d
DIO21_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	186;"	d
DIO21_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	138;"	d
DIO21_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	187;"	d
DIO21_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	139;"	d
DIO22_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	194;"	d
DIO22_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	146;"	d
DIO22_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	191;"	d
DIO22_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	143;"	d
DIO22_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	195;"	d
DIO22_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	147;"	d
DIO22_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	192;"	d
DIO22_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	144;"	d
DIO22_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	193;"	d
DIO22_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	145;"	d
DIO23_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	200;"	d
DIO23_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	152;"	d
DIO23_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	197;"	d
DIO23_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	149;"	d
DIO23_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	201;"	d
DIO23_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	153;"	d
DIO23_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	198;"	d
DIO23_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	150;"	d
DIO23_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	199;"	d
DIO23_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	151;"	d
DIO24_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	206;"	d
DIO24_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	158;"	d
DIO24_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	203;"	d
DIO24_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	155;"	d
DIO24_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	207;"	d
DIO24_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	159;"	d
DIO24_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	204;"	d
DIO24_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	156;"	d
DIO24_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	205;"	d
DIO24_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	157;"	d
DIO25_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	212;"	d
DIO25_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	164;"	d
DIO25_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	209;"	d
DIO25_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	161;"	d
DIO25_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	213;"	d
DIO25_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	165;"	d
DIO25_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	210;"	d
DIO25_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	162;"	d
DIO25_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	211;"	d
DIO25_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	163;"	d
DIO26_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	218;"	d
DIO26_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	170;"	d
DIO26_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	215;"	d
DIO26_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	167;"	d
DIO26_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	219;"	d
DIO26_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	171;"	d
DIO26_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	216;"	d
DIO26_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	168;"	d
DIO26_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	217;"	d
DIO26_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	169;"	d
DIO27_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	224;"	d
DIO27_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	176;"	d
DIO27_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	221;"	d
DIO27_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	173;"	d
DIO27_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	225;"	d
DIO27_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	177;"	d
DIO27_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	222;"	d
DIO27_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	174;"	d
DIO27_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	223;"	d
DIO27_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	175;"	d
DIO28_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	230;"	d
DIO28_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	182;"	d
DIO28_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	227;"	d
DIO28_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	179;"	d
DIO28_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	231;"	d
DIO28_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	183;"	d
DIO28_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	228;"	d
DIO28_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	180;"	d
DIO28_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	229;"	d
DIO28_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	181;"	d
DIO29_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	236;"	d
DIO29_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	188;"	d
DIO29_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	233;"	d
DIO29_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	185;"	d
DIO29_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	237;"	d
DIO29_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	189;"	d
DIO29_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	234;"	d
DIO29_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	186;"	d
DIO29_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	235;"	d
DIO29_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	187;"	d
DIO2_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	74;"	d
DIO2_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	26;"	d
DIO2_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	71;"	d
DIO2_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	23;"	d
DIO2_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	75;"	d
DIO2_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	27;"	d
DIO2_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	72;"	d
DIO2_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	24;"	d
DIO2_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	73;"	d
DIO2_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	25;"	d
DIO30_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	242;"	d
DIO30_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	194;"	d
DIO30_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	239;"	d
DIO30_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	191;"	d
DIO30_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	243;"	d
DIO30_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	195;"	d
DIO30_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	240;"	d
DIO30_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	192;"	d
DIO30_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	241;"	d
DIO30_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	193;"	d
DIO31_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	248;"	d
DIO31_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	200;"	d
DIO31_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	245;"	d
DIO31_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	197;"	d
DIO31_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	249;"	d
DIO31_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	201;"	d
DIO31_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	246;"	d
DIO31_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	198;"	d
DIO31_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	247;"	d
DIO31_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	199;"	d
DIO32_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	254;"	d
DIO32_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	206;"	d
DIO32_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	251;"	d
DIO32_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	203;"	d
DIO32_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	255;"	d
DIO32_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	207;"	d
DIO32_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	252;"	d
DIO32_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	204;"	d
DIO32_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	253;"	d
DIO32_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	205;"	d
DIO33_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	260;"	d
DIO33_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	212;"	d
DIO33_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	257;"	d
DIO33_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	209;"	d
DIO33_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	261;"	d
DIO33_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	213;"	d
DIO33_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	258;"	d
DIO33_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	210;"	d
DIO33_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	259;"	d
DIO33_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	211;"	d
DIO34_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	266;"	d
DIO34_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	218;"	d
DIO34_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	263;"	d
DIO34_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	215;"	d
DIO34_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	267;"	d
DIO34_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	219;"	d
DIO34_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	264;"	d
DIO34_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	216;"	d
DIO34_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	265;"	d
DIO34_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	217;"	d
DIO35_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	272;"	d
DIO35_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	224;"	d
DIO35_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	269;"	d
DIO35_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	221;"	d
DIO35_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	273;"	d
DIO35_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	225;"	d
DIO35_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	270;"	d
DIO35_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	222;"	d
DIO35_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	271;"	d
DIO35_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	223;"	d
DIO36_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	278;"	d
DIO36_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	230;"	d
DIO36_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	275;"	d
DIO36_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	227;"	d
DIO36_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	279;"	d
DIO36_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	231;"	d
DIO36_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	276;"	d
DIO36_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	228;"	d
DIO36_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	277;"	d
DIO36_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	229;"	d
DIO37_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	284;"	d
DIO37_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	236;"	d
DIO37_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	281;"	d
DIO37_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	233;"	d
DIO37_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	285;"	d
DIO37_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	237;"	d
DIO37_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	282;"	d
DIO37_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	234;"	d
DIO37_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	283;"	d
DIO37_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	235;"	d
DIO38_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	290;"	d
DIO38_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	242;"	d
DIO38_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	287;"	d
DIO38_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	239;"	d
DIO38_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	291;"	d
DIO38_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	243;"	d
DIO38_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	288;"	d
DIO38_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	240;"	d
DIO38_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	289;"	d
DIO38_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	241;"	d
DIO39_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	296;"	d
DIO39_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	248;"	d
DIO39_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	293;"	d
DIO39_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	245;"	d
DIO39_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	297;"	d
DIO39_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	249;"	d
DIO39_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	294;"	d
DIO39_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	246;"	d
DIO39_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	295;"	d
DIO39_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	247;"	d
DIO3_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	80;"	d
DIO3_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	32;"	d
DIO3_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	77;"	d
DIO3_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	29;"	d
DIO3_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	81;"	d
DIO3_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	33;"	d
DIO3_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	78;"	d
DIO3_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	30;"	d
DIO3_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	79;"	d
DIO3_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	31;"	d
DIO40_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	302;"	d
DIO40_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	254;"	d
DIO40_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	299;"	d
DIO40_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	251;"	d
DIO40_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	303;"	d
DIO40_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	255;"	d
DIO40_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	300;"	d
DIO40_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	252;"	d
DIO40_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	301;"	d
DIO40_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	253;"	d
DIO41_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	308;"	d
DIO41_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	260;"	d
DIO41_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	305;"	d
DIO41_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	257;"	d
DIO41_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	309;"	d
DIO41_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	261;"	d
DIO41_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	306;"	d
DIO41_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	258;"	d
DIO41_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	307;"	d
DIO41_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	259;"	d
DIO42_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	314;"	d
DIO42_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	266;"	d
DIO42_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	311;"	d
DIO42_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	263;"	d
DIO42_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	315;"	d
DIO42_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	267;"	d
DIO42_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	312;"	d
DIO42_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	264;"	d
DIO42_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	313;"	d
DIO42_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	265;"	d
DIO43_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	320;"	d
DIO43_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	272;"	d
DIO43_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	317;"	d
DIO43_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	269;"	d
DIO43_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	321;"	d
DIO43_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	273;"	d
DIO43_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	318;"	d
DIO43_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	270;"	d
DIO43_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	319;"	d
DIO43_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	271;"	d
DIO44_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	326;"	d
DIO44_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	278;"	d
DIO44_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	323;"	d
DIO44_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	275;"	d
DIO44_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	327;"	d
DIO44_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	279;"	d
DIO44_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	324;"	d
DIO44_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	276;"	d
DIO44_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	325;"	d
DIO44_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	277;"	d
DIO45_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	332;"	d
DIO45_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	284;"	d
DIO45_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	329;"	d
DIO45_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	281;"	d
DIO45_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	333;"	d
DIO45_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	285;"	d
DIO45_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	330;"	d
DIO45_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	282;"	d
DIO45_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	331;"	d
DIO45_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	283;"	d
DIO46_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	338;"	d
DIO46_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	290;"	d
DIO46_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	335;"	d
DIO46_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	287;"	d
DIO46_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	339;"	d
DIO46_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	291;"	d
DIO46_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	336;"	d
DIO46_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	288;"	d
DIO46_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	337;"	d
DIO46_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	289;"	d
DIO47_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	344;"	d
DIO47_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	296;"	d
DIO47_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	341;"	d
DIO47_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	293;"	d
DIO47_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	345;"	d
DIO47_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	297;"	d
DIO47_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	342;"	d
DIO47_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	294;"	d
DIO47_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	343;"	d
DIO47_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	295;"	d
DIO48_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	350;"	d
DIO48_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	302;"	d
DIO48_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	347;"	d
DIO48_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	299;"	d
DIO48_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	351;"	d
DIO48_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	303;"	d
DIO48_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	348;"	d
DIO48_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	300;"	d
DIO48_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	349;"	d
DIO48_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	301;"	d
DIO49_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	356;"	d
DIO49_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	308;"	d
DIO49_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	353;"	d
DIO49_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	305;"	d
DIO49_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	357;"	d
DIO49_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	309;"	d
DIO49_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	354;"	d
DIO49_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	306;"	d
DIO49_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	355;"	d
DIO49_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	307;"	d
DIO4_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	86;"	d
DIO4_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	38;"	d
DIO4_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	83;"	d
DIO4_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	35;"	d
DIO4_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	87;"	d
DIO4_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	39;"	d
DIO4_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	84;"	d
DIO4_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	36;"	d
DIO4_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	85;"	d
DIO4_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	37;"	d
DIO50_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	362;"	d
DIO50_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	314;"	d
DIO50_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	359;"	d
DIO50_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	311;"	d
DIO50_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	363;"	d
DIO50_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	315;"	d
DIO50_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	360;"	d
DIO50_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	312;"	d
DIO50_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	361;"	d
DIO50_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	313;"	d
DIO51_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	368;"	d
DIO51_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	320;"	d
DIO51_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	365;"	d
DIO51_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	317;"	d
DIO51_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	369;"	d
DIO51_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	321;"	d
DIO51_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	366;"	d
DIO51_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	318;"	d
DIO51_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	367;"	d
DIO51_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	319;"	d
DIO52_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	374;"	d
DIO52_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	326;"	d
DIO52_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	371;"	d
DIO52_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	323;"	d
DIO52_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	375;"	d
DIO52_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	327;"	d
DIO52_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	372;"	d
DIO52_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	324;"	d
DIO52_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	373;"	d
DIO52_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	325;"	d
DIO53_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	380;"	d
DIO53_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	332;"	d
DIO53_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	377;"	d
DIO53_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	329;"	d
DIO53_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	381;"	d
DIO53_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	333;"	d
DIO53_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	378;"	d
DIO53_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	330;"	d
DIO53_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	379;"	d
DIO53_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	331;"	d
DIO54_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	386;"	d
DIO54_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	338;"	d
DIO54_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	383;"	d
DIO54_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	335;"	d
DIO54_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	387;"	d
DIO54_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	339;"	d
DIO54_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	384;"	d
DIO54_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	336;"	d
DIO54_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	385;"	d
DIO54_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	337;"	d
DIO55_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	392;"	d
DIO55_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	344;"	d
DIO55_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	389;"	d
DIO55_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	341;"	d
DIO55_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	393;"	d
DIO55_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	345;"	d
DIO55_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	390;"	d
DIO55_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	342;"	d
DIO55_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	391;"	d
DIO55_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	343;"	d
DIO56_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	398;"	d
DIO56_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	350;"	d
DIO56_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	395;"	d
DIO56_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	347;"	d
DIO56_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	399;"	d
DIO56_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	351;"	d
DIO56_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	396;"	d
DIO56_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	348;"	d
DIO56_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	397;"	d
DIO56_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	349;"	d
DIO57_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	404;"	d
DIO57_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	356;"	d
DIO57_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	401;"	d
DIO57_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	353;"	d
DIO57_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	405;"	d
DIO57_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	357;"	d
DIO57_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	402;"	d
DIO57_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	354;"	d
DIO57_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	403;"	d
DIO57_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	355;"	d
DIO58_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	410;"	d
DIO58_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	362;"	d
DIO58_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	407;"	d
DIO58_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	359;"	d
DIO58_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	411;"	d
DIO58_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	363;"	d
DIO58_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	408;"	d
DIO58_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	360;"	d
DIO58_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	409;"	d
DIO58_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	361;"	d
DIO59_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	416;"	d
DIO59_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	368;"	d
DIO59_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	413;"	d
DIO59_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	365;"	d
DIO59_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	417;"	d
DIO59_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	369;"	d
DIO59_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	414;"	d
DIO59_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	366;"	d
DIO59_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	415;"	d
DIO59_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	367;"	d
DIO5_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	92;"	d
DIO5_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	44;"	d
DIO5_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	89;"	d
DIO5_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	41;"	d
DIO5_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	93;"	d
DIO5_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	45;"	d
DIO5_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	90;"	d
DIO5_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	42;"	d
DIO5_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	91;"	d
DIO5_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	43;"	d
DIO60_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	422;"	d
DIO60_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	374;"	d
DIO60_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	419;"	d
DIO60_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	371;"	d
DIO60_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	423;"	d
DIO60_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	375;"	d
DIO60_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	420;"	d
DIO60_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	372;"	d
DIO60_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	421;"	d
DIO60_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	373;"	d
DIO61_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	428;"	d
DIO61_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	380;"	d
DIO61_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	425;"	d
DIO61_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	377;"	d
DIO61_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	429;"	d
DIO61_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	381;"	d
DIO61_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	426;"	d
DIO61_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	378;"	d
DIO61_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	427;"	d
DIO61_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	379;"	d
DIO62_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	434;"	d
DIO62_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	386;"	d
DIO62_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	431;"	d
DIO62_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	383;"	d
DIO62_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	435;"	d
DIO62_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	387;"	d
DIO62_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	432;"	d
DIO62_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	384;"	d
DIO62_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	433;"	d
DIO62_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	385;"	d
DIO63_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	440;"	d
DIO63_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	392;"	d
DIO63_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	437;"	d
DIO63_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	389;"	d
DIO63_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	441;"	d
DIO63_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	393;"	d
DIO63_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	438;"	d
DIO63_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	390;"	d
DIO63_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	439;"	d
DIO63_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	391;"	d
DIO64_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	446;"	d
DIO64_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	398;"	d
DIO64_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	443;"	d
DIO64_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	395;"	d
DIO64_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	447;"	d
DIO64_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	399;"	d
DIO64_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	444;"	d
DIO64_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	396;"	d
DIO64_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	445;"	d
DIO64_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	397;"	d
DIO65_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	452;"	d
DIO65_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	404;"	d
DIO65_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	449;"	d
DIO65_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	401;"	d
DIO65_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	453;"	d
DIO65_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	405;"	d
DIO65_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	450;"	d
DIO65_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	402;"	d
DIO65_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	451;"	d
DIO65_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	403;"	d
DIO66_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	458;"	d
DIO66_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	410;"	d
DIO66_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	455;"	d
DIO66_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	407;"	d
DIO66_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	459;"	d
DIO66_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	411;"	d
DIO66_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	456;"	d
DIO66_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	408;"	d
DIO66_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	457;"	d
DIO66_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	409;"	d
DIO67_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	464;"	d
DIO67_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	416;"	d
DIO67_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	461;"	d
DIO67_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	413;"	d
DIO67_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	465;"	d
DIO67_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	417;"	d
DIO67_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	462;"	d
DIO67_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	414;"	d
DIO67_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	463;"	d
DIO67_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	415;"	d
DIO68_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	470;"	d
DIO68_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	422;"	d
DIO68_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	467;"	d
DIO68_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	419;"	d
DIO68_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	471;"	d
DIO68_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	423;"	d
DIO68_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	468;"	d
DIO68_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	420;"	d
DIO68_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	469;"	d
DIO68_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	421;"	d
DIO69_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	476;"	d
DIO69_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	428;"	d
DIO69_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	473;"	d
DIO69_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	425;"	d
DIO69_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	477;"	d
DIO69_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	429;"	d
DIO69_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	474;"	d
DIO69_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	426;"	d
DIO69_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	475;"	d
DIO69_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	427;"	d
DIO6_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	98;"	d
DIO6_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	50;"	d
DIO6_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	95;"	d
DIO6_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	47;"	d
DIO6_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	99;"	d
DIO6_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	51;"	d
DIO6_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	96;"	d
DIO6_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	48;"	d
DIO6_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	97;"	d
DIO6_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	49;"	d
DIO70_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	485;"	d
DIO70_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	437;"	d
DIO70_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	482;"	d
DIO70_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	434;"	d
DIO70_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	486;"	d
DIO70_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	438;"	d
DIO70_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	483;"	d
DIO70_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	435;"	d
DIO70_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	484;"	d
DIO70_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	436;"	d
DIO71_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	491;"	d
DIO71_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	443;"	d
DIO71_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	488;"	d
DIO71_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	440;"	d
DIO71_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	492;"	d
DIO71_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	444;"	d
DIO71_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	489;"	d
DIO71_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	441;"	d
DIO71_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	490;"	d
DIO71_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	442;"	d
DIO72_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	497;"	d
DIO72_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	449;"	d
DIO72_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	494;"	d
DIO72_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	446;"	d
DIO72_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	498;"	d
DIO72_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	450;"	d
DIO72_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	495;"	d
DIO72_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	447;"	d
DIO72_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	496;"	d
DIO72_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	448;"	d
DIO73_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	503;"	d
DIO73_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	455;"	d
DIO73_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	500;"	d
DIO73_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	452;"	d
DIO73_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	504;"	d
DIO73_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	456;"	d
DIO73_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	501;"	d
DIO73_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	453;"	d
DIO73_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	502;"	d
DIO73_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	454;"	d
DIO74_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	509;"	d
DIO74_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	461;"	d
DIO74_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	506;"	d
DIO74_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	458;"	d
DIO74_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	510;"	d
DIO74_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	462;"	d
DIO74_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	507;"	d
DIO74_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	459;"	d
DIO74_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	508;"	d
DIO74_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	460;"	d
DIO75_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	515;"	d
DIO75_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	467;"	d
DIO75_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	512;"	d
DIO75_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	464;"	d
DIO75_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	516;"	d
DIO75_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	468;"	d
DIO75_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	513;"	d
DIO75_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	465;"	d
DIO75_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	514;"	d
DIO75_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	466;"	d
DIO76_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	521;"	d
DIO76_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	473;"	d
DIO76_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	518;"	d
DIO76_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	470;"	d
DIO76_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	522;"	d
DIO76_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	474;"	d
DIO76_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	519;"	d
DIO76_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	471;"	d
DIO76_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	520;"	d
DIO76_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	472;"	d
DIO77_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	527;"	d
DIO77_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	479;"	d
DIO77_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	524;"	d
DIO77_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	476;"	d
DIO77_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	528;"	d
DIO77_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	480;"	d
DIO77_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	525;"	d
DIO77_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	477;"	d
DIO77_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	526;"	d
DIO77_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	478;"	d
DIO78_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	533;"	d
DIO78_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	485;"	d
DIO78_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	530;"	d
DIO78_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	482;"	d
DIO78_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	534;"	d
DIO78_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	486;"	d
DIO78_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	531;"	d
DIO78_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	483;"	d
DIO78_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	532;"	d
DIO78_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	484;"	d
DIO79_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	539;"	d
DIO79_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	491;"	d
DIO79_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	536;"	d
DIO79_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	488;"	d
DIO79_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	540;"	d
DIO79_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	492;"	d
DIO79_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	537;"	d
DIO79_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	489;"	d
DIO79_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	538;"	d
DIO79_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	490;"	d
DIO7_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	104;"	d
DIO7_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	56;"	d
DIO7_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	101;"	d
DIO7_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	53;"	d
DIO7_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	105;"	d
DIO7_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	57;"	d
DIO7_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	102;"	d
DIO7_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	54;"	d
DIO7_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	103;"	d
DIO7_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	55;"	d
DIO80_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	545;"	d
DIO80_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	497;"	d
DIO80_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	542;"	d
DIO80_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	494;"	d
DIO80_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	546;"	d
DIO80_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	498;"	d
DIO80_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	543;"	d
DIO80_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	495;"	d
DIO80_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	544;"	d
DIO80_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	496;"	d
DIO81_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	551;"	d
DIO81_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	503;"	d
DIO81_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	548;"	d
DIO81_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	500;"	d
DIO81_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	552;"	d
DIO81_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	504;"	d
DIO81_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	549;"	d
DIO81_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	501;"	d
DIO81_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	550;"	d
DIO81_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	502;"	d
DIO82_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	557;"	d
DIO82_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	509;"	d
DIO82_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	554;"	d
DIO82_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	506;"	d
DIO82_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	558;"	d
DIO82_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	510;"	d
DIO82_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	555;"	d
DIO82_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	507;"	d
DIO82_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	556;"	d
DIO82_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	508;"	d
DIO83_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	563;"	d
DIO83_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	515;"	d
DIO83_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	560;"	d
DIO83_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	512;"	d
DIO83_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	564;"	d
DIO83_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	516;"	d
DIO83_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	561;"	d
DIO83_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	513;"	d
DIO83_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	562;"	d
DIO83_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	514;"	d
DIO84_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	569;"	d
DIO84_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	521;"	d
DIO84_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	566;"	d
DIO84_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	518;"	d
DIO84_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	570;"	d
DIO84_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	522;"	d
DIO84_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	567;"	d
DIO84_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	519;"	d
DIO84_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	568;"	d
DIO84_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	520;"	d
DIO85_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	575;"	d
DIO85_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	527;"	d
DIO85_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	572;"	d
DIO85_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	524;"	d
DIO85_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	576;"	d
DIO85_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	528;"	d
DIO85_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	573;"	d
DIO85_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	525;"	d
DIO85_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	574;"	d
DIO85_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	526;"	d
DIO8_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	110;"	d
DIO8_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	62;"	d
DIO8_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	107;"	d
DIO8_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	59;"	d
DIO8_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	111;"	d
DIO8_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	63;"	d
DIO8_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	108;"	d
DIO8_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	60;"	d
DIO8_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	109;"	d
DIO8_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	61;"	d
DIO9_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	116;"	d
DIO9_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	68;"	d
DIO9_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	113;"	d
DIO9_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	65;"	d
DIO9_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	117;"	d
DIO9_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	69;"	d
DIO9_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	114;"	d
DIO9_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	66;"	d
DIO9_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	115;"	d
DIO9_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	67;"	d
DIRECT	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	14;"	d
DIRECTION_CCW	.\Firmware\lib\AccelStepper\AccelStepper.h	/^	DIRECTION_CCW = 0,  \/\/\/< Counter-Clockwise$/;"	e	enum:AccelStepper::__anon2
DIRECTION_CW	.\Firmware\lib\AccelStepper\AccelStepper.h	/^        DIRECTION_CW  = 1   \/\/\/< Clockwise$/;"	e	enum:AccelStepper::__anon2
DIRECT_PIN_READ	.\Firmware\lib\Encoder\utility\direct_pin_read.h	100;"	d
DIRECT_PIN_READ	.\Firmware\lib\Encoder\utility\direct_pin_read.h	16;"	d
DIRECT_PIN_READ	.\Firmware\lib\Encoder\utility\direct_pin_read.h	23;"	d
DIRECT_PIN_READ	.\Firmware\lib\Encoder\utility\direct_pin_read.h	30;"	d
DIRECT_PIN_READ	.\Firmware\lib\Encoder\utility\direct_pin_read.h	37;"	d
DIRECT_PIN_READ	.\Firmware\lib\Encoder\utility\direct_pin_read.h	45;"	d
DIRECT_PIN_READ	.\Firmware\lib\Encoder\utility\direct_pin_read.h	53;"	d
DIRECT_PIN_READ	.\Firmware\lib\Encoder\utility\direct_pin_read.h	60;"	d
DIRECT_PIN_READ	.\Firmware\lib\Encoder\utility\direct_pin_read.h	67;"	d
DIRECT_PIN_READ	.\Firmware\lib\Encoder\utility\direct_pin_read.h	74;"	d
DIRECT_PIN_READ	.\Firmware\lib\Encoder\utility\direct_pin_read.h	9;"	d
DISABLED	.\Firmware\src\HAL\macros.h	186;"	d
DIVISION_LINE_LENGTH	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^const uint8_t DIVISION_LINE_LENGTH = 40; \/\/\/< Sets the length of the division line.$/;"	v
DO	.\Firmware\src\HAL\macros.h	171;"	d
DOUBLE	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  FLOAT = 50, DOUBLE = 50,$/;"	m	class:DataType
DOUBLE_GETTER	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  FLOAT_GETTER = 240, DOUBLE_GETTER = 240,$/;"	m	class:DataType
DRIVER	.\Firmware\lib\AccelStepper\AccelStepper.h	/^	DRIVER    = 1, \/\/\/< Stepper Driver, 2 driver pins required$/;"	e	enum:AccelStepper::__anon1
DataType	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^enum class DataType : uint8_t {$/;"	c
Direction	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    } Direction;$/;"	t	class:AccelStepper	typeref:enum:AccelStepper::__anon2
DisplayClass	.\Firmware\lib\LiquidMenu\src\LiquidMenu_config.h	35;"	d
EITHER	.\Firmware\src\HAL\macros.h	211;"	d
EMPTY	.\Firmware\src\HAL\macros.h	516;"	d
ENABLED	.\Firmware\src\HAL\macros.h	185;"	d
ENCODER_ARGLIST_SIZE	.\Firmware\lib\Encoder\Encoder.h	45;"	d
ENCODER_ARGLIST_SIZE	.\Firmware\lib\Encoder\Encoder.h	51;"	d
ENCODER_OPTIMIZE_INTERRUPTS	.\Firmware\lib\Encoder\utility\interrupt_config.h	78;"	d
ENCODER_OPTIMIZE_INTERRUPTS	.\Firmware\lib\Encoder\utility\interrupt_config.h	84;"	d
ENCODER_USE_INTERRUPTS	.\Firmware\lib\Encoder\Encoder.h	44;"	d
ENUM_FLAGS	.\Firmware\src\HAL\macros.h	328;"	d
EVAL	.\Firmware\src\HAL\macros.h	523;"	d
EVAL1	.\Firmware\src\HAL\macros.h	534;"	d
EVAL1024	.\Firmware\src\HAL\macros.h	524;"	d
EVAL128	.\Firmware\src\HAL\macros.h	527;"	d
EVAL16	.\Firmware\src\HAL\macros.h	530;"	d
EVAL2	.\Firmware\src\HAL\macros.h	533;"	d
EVAL256	.\Firmware\src\HAL\macros.h	526;"	d
EVAL32	.\Firmware\src\HAL\macros.h	529;"	d
EVAL4	.\Firmware\src\HAL\macros.h	532;"	d
EVAL512	.\Firmware\src\HAL\macros.h	525;"	d
EVAL64	.\Firmware\src\HAL\macros.h	528;"	d
EVAL8	.\Firmware\src\HAL\macros.h	531;"	d
EXT_PORT_OFFSET_SOC	.\Firmware\lib\Encoder\utility\direct_pin_read.h	85;"	d
EXT_PORT_OFFSET_SS	.\Firmware\lib\Encoder\utility\direct_pin_read.h	84;"	d
Encoder	.\Firmware\lib\Encoder\Encoder.h	/^	Encoder(uint8_t pin1, uint8_t pin2) {$/;"	f	class:Encoder
Encoder	.\Firmware\lib\Encoder\Encoder.h	/^class Encoder$/;"	c
Encoder_h_	.\Firmware\lib\Encoder\Encoder.h	30;"	d
Encoder_internal_state_t	.\Firmware\lib\Encoder\Encoder.h	/^} Encoder_internal_state_t;$/;"	t	typeref:struct:__anon3
FAN	.\Firmware\src\HAL\megaatmega2560\user_pins.h	4;"	d
FIRST	.\Firmware\src\HAL\macros.h	511;"	d
FIXFLOAT	.\Firmware\src\HAL\macros.h	285;"	d
FLOAT	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  FLOAT = 50, DOUBLE = 50,$/;"	m	class:DataType
FLOAT_GETTER	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  FLOAT_GETTER = 240, DOUBLE_GETTER = 240,$/;"	m	class:DataType
FLOOR	.\Firmware\src\HAL\macros.h	296;"	d
FMOD	.\Firmware\src\HAL\macros.h	299;"	d
FORCE_INLINE	.\Firmware\src\HAL\macros.h	54;"	d
FULL2WIRE	.\Firmware\lib\AccelStepper\AccelStepper.h	/^	FULL2WIRE = 2, \/\/\/< 2 wire stepper, 2 motor pins required$/;"	e	enum:AccelStepper::__anon1
FULL3WIRE	.\Firmware\lib\AccelStepper\AccelStepper.h	/^	FULL3WIRE = 3, \/\/\/< 3 wire stepper, such as HDD spindle, 3 motor pins required$/;"	e	enum:AccelStepper::__anon1
FULL4WIRE	.\Firmware\lib\AccelStepper\AccelStepper.h	/^        FULL4WIRE = 4, \/\/\/< 4 wire full stepper, 4 motor pins required$/;"	e	enum:AccelStepper::__anon1
FUNCTION	.\Firmware\lib\AccelStepper\AccelStepper.h	/^	FUNCTION  = 0, \/\/\/< Use the functional interface, implementing your own driver functions (internal use only)$/;"	e	enum:AccelStepper::__anon1
FinishUp	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.cpp	/^void PID_ATune::FinishUp()$/;"	f	class:PID_ATune
GET_COM	.\Firmware\src\HAL\megaatmega2560\fastio.h	162;"	d
GET_COMA	.\Firmware\src\HAL\megaatmega2560\fastio.h	163;"	d
GET_COMB	.\Firmware\src\HAL\megaatmega2560\fastio.h	164;"	d
GET_COMC	.\Firmware\src\HAL\megaatmega2560\fastio.h	165;"	d
GET_CS	.\Firmware\src\HAL\megaatmega2560\fastio.h	161;"	d
GET_FOC	.\Firmware\src\HAL\megaatmega2560\fastio.h	168;"	d
GET_FOCA	.\Firmware\src\HAL\megaatmega2560\fastio.h	169;"	d
GET_FOCB	.\Firmware\src\HAL\megaatmega2560\fastio.h	170;"	d
GET_FOCC	.\Firmware\src\HAL\megaatmega2560\fastio.h	171;"	d
GET_ICES	.\Firmware\src\HAL\megaatmega2560\fastio.h	167;"	d
GET_ICNC	.\Firmware\src\HAL\megaatmega2560\fastio.h	166;"	d
GET_WGM	.\Firmware\src\HAL\megaatmega2560\fastio.h	160;"	d
GLYPH	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  GLYPH = 70,$/;"	m	class:DataType
GPIO_BASE	.\Firmware\lib\Encoder\utility\direct_pin_read.h	83;"	d
GPIO_ID	.\Firmware\lib\Encoder\utility\direct_pin_read.h	81;"	d
GPIO_TYPE	.\Firmware\lib\Encoder\utility\direct_pin_read.h	82;"	d
GetControlType	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.cpp	/^int PID_ATune::GetControlType()$/;"	f	class:PID_ATune
GetDirection	.\Firmware\lib\Arduino-PID-Library\PID_v1.cpp	/^int PID::GetDirection(){ return controllerDirection;}$/;"	f	class:PID
GetKd	.\Firmware\lib\Arduino-PID-Library\PID_v1.cpp	/^double PID::GetKd(){ return  dispKd;}$/;"	f	class:PID
GetKd	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.cpp	/^double PID_ATune::GetKd()$/;"	f	class:PID_ATune
GetKi	.\Firmware\lib\Arduino-PID-Library\PID_v1.cpp	/^double PID::GetKi(){ return  dispKi;}$/;"	f	class:PID
GetKi	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.cpp	/^double PID_ATune::GetKi()$/;"	f	class:PID_ATune
GetKp	.\Firmware\lib\Arduino-PID-Library\PID_v1.cpp	/^double PID::GetKp(){ return  dispKp; }$/;"	f	class:PID
GetKp	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.cpp	/^double PID_ATune::GetKp()$/;"	f	class:PID_ATune
GetLookbackSec	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.cpp	/^int PID_ATune::GetLookbackSec()$/;"	f	class:PID_ATune
GetMode	.\Firmware\lib\Arduino-PID-Library\PID_v1.cpp	/^int PID::GetMode(){ return  inAuto ? AUTOMATIC : MANUAL;}$/;"	f	class:PID
GetNoiseBand	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.cpp	/^double PID_ATune::GetNoiseBand()$/;"	f	class:PID_ATune
GetOutputStep	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.cpp	/^double PID_ATune::GetOutputStep()$/;"	f	class:PID_ATune
HAL	.\Firmware\src\HAL\megaatmega2560\megaatmega2560.cpp	/^namespace HAL{$/;"	n	file:
HAL	.\Firmware\src\HAL\megaatmega2560\megaatmega2560.h	/^namespace HAL{$/;"	n
HALF3WIRE	.\Firmware\lib\AccelStepper\AccelStepper.h	/^	HALF3WIRE = 6, \/\/\/< 3 wire half stepper, such as HDD spindle, 3 motor pins required$/;"	e	enum:AccelStepper::__anon1
HALF4WIRE	.\Firmware\lib\AccelStepper\AccelStepper.h	/^	HALF4WIRE = 8  \/\/\/< 4 wire half stepper, 4 motor pins required$/;"	e	enum:AccelStepper::__anon1
HAL_MEGAATMEGA2560	.\Firmware\src\HAL\megaatmega2560\megaatmega2560.h	2;"	d
HAS_ARGS	.\Firmware\src\HAL\macros.h	551;"	d
HAS_MEMBER_IMPL	.\Firmware\src\HAL\macros.h	350;"	d
HEATER	.\Firmware\src\HAL\megaatmega2560\user_pins.h	5;"	d
HEXCHR	.\Firmware\src\HAL\macros.h	229;"	d
HYPOT	.\Firmware\src\HAL\macros.h	300;"	d
HYPOT2	.\Firmware\src\HAL\macros.h	105;"	d
IF	.\Firmware\src\HAL\macros.h	556;"	d
IF_0	.\Firmware\src\HAL\macros.h	557;"	d
IF_1	.\Firmware\src\HAL\macros.h	558;"	d
IF_DISABLED	.\Firmware\src\HAL\macros.h	205;"	d
IF_ELSE	.\Firmware\src\HAL\macros.h	542;"	d
IF_ENABLED	.\Firmware\src\HAL\macros.h	204;"	d
INCREMENT	.\Firmware\src\HAL\macros.h	462;"	d
INCREMENT_	.\Firmware\src\HAL\macros.h	461;"	d
INC_0	.\Firmware\src\HAL\macros.h	445;"	d
INC_1	.\Firmware\src\HAL\macros.h	446;"	d
INC_10	.\Firmware\src\HAL\macros.h	455;"	d
INC_11	.\Firmware\src\HAL\macros.h	456;"	d
INC_12	.\Firmware\src\HAL\macros.h	457;"	d
INC_13	.\Firmware\src\HAL\macros.h	458;"	d
INC_14	.\Firmware\src\HAL\macros.h	459;"	d
INC_15	.\Firmware\src\HAL\macros.h	460;"	d
INC_2	.\Firmware\src\HAL\macros.h	447;"	d
INC_3	.\Firmware\src\HAL\macros.h	448;"	d
INC_4	.\Firmware\src\HAL\macros.h	449;"	d
INC_5	.\Firmware\src\HAL\macros.h	450;"	d
INC_6	.\Firmware\src\HAL\macros.h	451;"	d
INC_7	.\Firmware\src\HAL\macros.h	452;"	d
INC_8	.\Firmware\src\HAL\macros.h	453;"	d
INC_9	.\Firmware\src\HAL\macros.h	454;"	d
INT16_T	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  INT16_T = 16,$/;"	m	class:DataType
INT16_T_GETTER	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  INT16_T_GETTER = 216,$/;"	m	class:DataType
INT32_T	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  INT32_T = 32,$/;"	m	class:DataType
INT32_T_GETTER	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  INT32_T_GETTER = 232,$/;"	m	class:DataType
INT8_T	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  INT8_T = 8,$/;"	m	class:DataType
INT8_T_GETTER	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  INT8_T_GETTER = 208,$/;"	m	class:DataType
IO_REG_TYPE	.\Firmware\lib\Encoder\utility\direct_pin_read.h	13;"	d
IO_REG_TYPE	.\Firmware\lib\Encoder\utility\direct_pin_read.h	20;"	d
IO_REG_TYPE	.\Firmware\lib\Encoder\utility\direct_pin_read.h	27;"	d
IO_REG_TYPE	.\Firmware\lib\Encoder\utility\direct_pin_read.h	34;"	d
IO_REG_TYPE	.\Firmware\lib\Encoder\utility\direct_pin_read.h	42;"	d
IO_REG_TYPE	.\Firmware\lib\Encoder\utility\direct_pin_read.h	50;"	d
IO_REG_TYPE	.\Firmware\lib\Encoder\utility\direct_pin_read.h	57;"	d
IO_REG_TYPE	.\Firmware\lib\Encoder\utility\direct_pin_read.h	64;"	d
IO_REG_TYPE	.\Firmware\lib\Encoder\utility\direct_pin_read.h	6;"	d
IO_REG_TYPE	.\Firmware\lib\Encoder\utility\direct_pin_read.h	71;"	d
IO_REG_TYPE	.\Firmware\lib\Encoder\utility\direct_pin_read.h	88;"	d
ISEOL	.\Firmware\src\HAL\macros.h	226;"	d
ISR	.\Firmware\lib\Encoder\Encoder.h	/^ISR(INT0_vect) { Encoder::update(Encoder::interruptArgs[SCRAMBLE_INT_ORDER(0)]); }$/;"	f
ISR	.\Firmware\lib\Encoder\Encoder.h	/^ISR(INT1_vect) { Encoder::update(Encoder::interruptArgs[SCRAMBLE_INT_ORDER(1)]); }$/;"	f
ISR	.\Firmware\lib\Encoder\Encoder.h	/^ISR(INT2_vect) { Encoder::update(Encoder::interruptArgs[SCRAMBLE_INT_ORDER(2)]); }$/;"	f
ISR	.\Firmware\lib\Encoder\Encoder.h	/^ISR(INT3_vect) { Encoder::update(Encoder::interruptArgs[SCRAMBLE_INT_ORDER(3)]); }$/;"	f
ISR	.\Firmware\lib\Encoder\Encoder.h	/^ISR(INT4_vect) { Encoder::update(Encoder::interruptArgs[SCRAMBLE_INT_ORDER(4)]); }$/;"	f
ISR	.\Firmware\lib\Encoder\Encoder.h	/^ISR(INT5_vect) { Encoder::update(Encoder::interruptArgs[SCRAMBLE_INT_ORDER(5)]); }$/;"	f
ISR	.\Firmware\lib\Encoder\Encoder.h	/^ISR(INT6_vect) { Encoder::update(Encoder::interruptArgs[SCRAMBLE_INT_ORDER(6)]); }$/;"	f
ISR	.\Firmware\lib\Encoder\Encoder.h	/^ISR(INT7_vect) { Encoder::update(Encoder::interruptArgs[SCRAMBLE_INT_ORDER(7)]); }$/;"	f
IS_CONSTEXPR	.\Firmware\src\HAL\macros.h	63;"	d
IS_INPUT	.\Firmware\src\HAL\megaatmega2560\fastio.h	85;"	d
IS_OUTPUT	.\Firmware\src\HAL\megaatmega2560\fastio.h	86;"	d
IS_POWER_OF_2	.\Firmware\src\HAL\macros.h	112;"	d
IS_PROBE	.\Firmware\src\HAL\macros.h	536;"	d
Initialize	.\Firmware\lib\Arduino-PID-Library\PID_v1.cpp	/^void PID::Initialize()$/;"	f	class:PID
JOIN_N	.\Firmware\src\HAL\macros.h	262;"	d
Kd	.\Firmware\src\main.cpp	/^double Kp = 2.16, Ki =0.08 , Kd = 15.28;$/;"	v
Ki	.\Firmware\src\main.cpp	/^double Kp = 2.16, Ki =0.08 , Kd = 15.28;$/;"	v
Kp	.\Firmware\src\main.cpp	/^double Kp = 2.16, Ki =0.08 , Kd = 15.28;$/;"	v
Ku	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	double Ku, Pu;$/;"	m	class:PID_ATune
L	.\Firmware\src\HAL\macros.h	82;"	d
LCD_1LINE	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	41;"	d
LCD_2LINE	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	40;"	d
LCD_4BITMODE	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	39;"	d
LCD_5x10DOTS	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	42;"	d
LCD_5x8DOTS	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	43;"	d
LCD_8BITMODE	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	38;"	d
LCD_BLINKOFF	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	29;"	d
LCD_BLINKON	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	28;"	d
LCD_CLEARDISPLAY	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	8;"	d
LCD_CURSORMOVE	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	33;"	d
LCD_CURSOROFF	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	27;"	d
LCD_CURSORON	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	26;"	d
LCD_CURSORSHIFT	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	12;"	d
LCD_DISPLAYCONTROL	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	11;"	d
LCD_DISPLAYMOVE	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	32;"	d
LCD_DISPLAYOFF	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	25;"	d
LCD_DISPLAYON	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	24;"	d
LCD_ENTRYLEFT	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	19;"	d
LCD_ENTRYMODESET	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	10;"	d
LCD_ENTRYRIGHT	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	18;"	d
LCD_ENTRYSHIFTDECREMENT	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	21;"	d
LCD_ENTRYSHIFTINCREMENT	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	20;"	d
LCD_FUNCTIONSET	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	13;"	d
LCD_MOVELEFT	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	35;"	d
LCD_MOVERIGHT	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	34;"	d
LCD_RETURNHOME	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	9;"	d
LCD_SETCGRAMADDR	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	14;"	d
LCD_SETDDRAMADDR	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	15;"	d
LEFT	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  LEFT = 2,$/;"	m	class:DataType::Position
LIBRARY_VERSION	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	3;"	d
LIBRARY_VERSION	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	3;"	d
LIMIT	.\Firmware\src\HAL\macros.h	/^  template <class V, class N1, class N2> static inline constexpr void LIMIT(V& v, const N1 n1, const N2 n2) {$/;"	f
LIMIT	.\Firmware\src\HAL\macros.h	143;"	d
LIQUIDMENU_DEBUG	.\Firmware\lib\LiquidMenu\src\LiquidMenu_config.h	76;"	d
LIQUIDMENU_LIBRARY	.\Firmware\lib\LiquidMenu\src\LiquidMenu_config.h	33;"	d
LIQUIDMENU_VERSION	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^const char LIQUIDMENU_VERSION[] = "1.5"; \/\/\/< The version of the library.$/;"	v
LIST_1	.\Firmware\src\HAL\macros.h	255;"	d
LIST_10	.\Firmware\src\HAL\macros.h	246;"	d
LIST_11	.\Firmware\src\HAL\macros.h	245;"	d
LIST_12	.\Firmware\src\HAL\macros.h	244;"	d
LIST_13	.\Firmware\src\HAL\macros.h	243;"	d
LIST_14	.\Firmware\src\HAL\macros.h	242;"	d
LIST_15	.\Firmware\src\HAL\macros.h	241;"	d
LIST_16	.\Firmware\src\HAL\macros.h	240;"	d
LIST_2	.\Firmware\src\HAL\macros.h	254;"	d
LIST_3	.\Firmware\src\HAL\macros.h	253;"	d
LIST_4	.\Firmware\src\HAL\macros.h	252;"	d
LIST_5	.\Firmware\src\HAL\macros.h	251;"	d
LIST_6	.\Firmware\src\HAL\macros.h	250;"	d
LIST_7	.\Firmware\src\HAL\macros.h	249;"	d
LIST_8	.\Firmware\src\HAL\macros.h	248;"	d
LIST_9	.\Firmware\src\HAL\macros.h	247;"	d
LIST_N	.\Firmware\src\HAL\macros.h	258;"	d
LOOP_LE_N	.\Firmware\src\HAL\macros.h	266;"	d
LOOP_L_N	.\Firmware\src\HAL\macros.h	267;"	d
LOOP_S_LE_N	.\Firmware\src\HAL\macros.h	264;"	d
LOOP_S_L_N	.\Firmware\src\HAL\macros.h	265;"	d
LROUND	.\Firmware\src\HAL\macros.h	298;"	d
LiquidCrystal	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^LiquidCrystal::LiquidCrystal(uint8_t rs,  uint8_t enable,$/;"	f	class:LiquidCrystal
LiquidCrystal	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^LiquidCrystal::LiquidCrystal(uint8_t rs, uint8_t enable,$/;"	f	class:LiquidCrystal
LiquidCrystal	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^LiquidCrystal::LiquidCrystal(uint8_t rs, uint8_t rw, uint8_t enable,$/;"	f	class:LiquidCrystal
LiquidCrystal	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	/^class LiquidCrystal : public Print {$/;"	c
LiquidCrystal_I2C_LIBRARY	.\Firmware\lib\LiquidMenu\src\LiquidMenu_config.h	17;"	d
LiquidCrystal_LIBRARY	.\Firmware\lib\LiquidMenu\src\LiquidMenu_config.h	16;"	d
LiquidCrystal_h	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	2;"	d
LiquidLine	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  LiquidLine(uint8_t column, uint8_t row)$/;"	f	class:DataType::LiquidLine
LiquidLine	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  LiquidLine(uint8_t column, uint8_t row, A &variableA)$/;"	f	class:DataType::LiquidLine
LiquidLine	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  LiquidLine(uint8_t column, uint8_t row,$/;"	f	class:DataType::LiquidLine
LiquidLine	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^class LiquidLine {$/;"	c	class:DataType
LiquidMenu	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^LiquidMenu::LiquidMenu(DisplayClass &liquidCrystal, LiquidScreen &liquidScreen,$/;"	f	class:LiquidMenu
LiquidMenu	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^LiquidMenu::LiquidMenu(DisplayClass &liquidCrystal, LiquidScreen &liquidScreen1,$/;"	f	class:LiquidMenu
LiquidMenu	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^LiquidMenu::LiquidMenu(DisplayClass &liquidCrystal, uint8_t startingScreen)$/;"	f	class:LiquidMenu
LiquidMenu	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^class LiquidMenu {$/;"	c	class:DataType::LiquidLine
LiquidScreen	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^class LiquidScreen {$/;"	c	class:DataType::LiquidLine
LiquidScreen	.\Firmware\lib\LiquidMenu\src\LiquidScreen.cpp	/^LiquidScreen::LiquidScreen()$/;"	f	class:LiquidScreen
LiquidScreen	.\Firmware\lib\LiquidMenu\src\LiquidScreen.cpp	/^LiquidScreen::LiquidScreen(LiquidLine &liquidLine)$/;"	f	class:LiquidScreen
LiquidScreen	.\Firmware\lib\LiquidMenu\src\LiquidScreen.cpp	/^LiquidScreen::LiquidScreen(LiquidLine &liquidLine1, LiquidLine &liquidLine2)$/;"	f	class:LiquidScreen
LiquidScreen	.\Firmware\lib\LiquidMenu\src\LiquidScreen.cpp	/^LiquidScreen::LiquidScreen(LiquidLine &liquidLine1, LiquidLine &liquidLine2,$/;"	f	class:LiquidScreen
LiquidSystem	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^class LiquidSystem {$/;"	c	class:DataType::LiquidLine
LiquidSystem	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^LiquidSystem::LiquidSystem(LiquidMenu &liquidMenu1, LiquidMenu &liquidMenu2,$/;"	f	class:LiquidSystem
LiquidSystem	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^LiquidSystem::LiquidSystem(uint8_t startingMenu)$/;"	f	class:LiquidSystem
MANUAL	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	13;"	d
MANY	.\Firmware\src\HAL\macros.h	212;"	d
MAP	.\Firmware\src\HAL\macros.h	615;"	d
MAP0	.\Firmware\src\HAL\macros.h	613;"	d
MAP1	.\Firmware\src\HAL\macros.h	614;"	d
MAP_END	.\Firmware\src\HAL\macros.h	608;"	d
MAP_GET_END	.\Firmware\src\HAL\macros.h	609;"	d
MAP_NEXT	.\Firmware\src\HAL\macros.h	612;"	d
MAP_NEXT0	.\Firmware\src\HAL\macros.h	610;"	d
MAP_NEXT1	.\Firmware\src\HAL\macros.h	611;"	d
MAP_OUT	.\Firmware\src\HAL\macros.h	607;"	d
MAX6675_THERMOCOUPLE_H	.\Firmware\lib\MAX6675_Thermocouple\src\MAX6675_Thermocouple.h	39;"	d
MAX6675_Thermocouple	.\Firmware\lib\MAX6675_Thermocouple\src\MAX6675_Thermocouple.cpp	/^MAX6675_Thermocouple::MAX6675_Thermocouple($/;"	f	class:MAX6675_Thermocouple
MAX_10	.\Firmware\src\HAL\macros.h	437;"	d
MAX_2	.\Firmware\src\HAL\macros.h	429;"	d
MAX_3	.\Firmware\src\HAL\macros.h	430;"	d
MAX_4	.\Firmware\src\HAL\macros.h	431;"	d
MAX_5	.\Firmware\src\HAL\macros.h	432;"	d
MAX_6	.\Firmware\src\HAL\macros.h	433;"	d
MAX_7	.\Firmware\src\HAL\macros.h	434;"	d
MAX_8	.\Firmware\src\HAL\macros.h	435;"	d
MAX_9	.\Firmware\src\HAL\macros.h	436;"	d
MAX_FUNCTIONS	.\Firmware\lib\LiquidMenu\src\LiquidMenu_config.h	/^const uint8_t MAX_FUNCTIONS = 8; \/\/\/< @note Default: 8$/;"	v
MAX_LINES	.\Firmware\lib\LiquidMenu\src\LiquidMenu_config.h	/^const uint8_t MAX_LINES = 12; \/\/\/< @note Default: 12$/;"	v
MAX_MENUS	.\Firmware\lib\LiquidMenu\src\LiquidMenu_config.h	/^const uint8_t MAX_MENUS = 8; \/\/\/< @note Default: 8$/;"	v
MAX_SCREENS	.\Firmware\lib\LiquidMenu\src\LiquidMenu_config.h	/^const uint8_t MAX_SCREENS = 14; \/\/\/< @note Default: 14$/;"	v
MAX_VARIABLES	.\Firmware\lib\LiquidMenu\src\LiquidMenu_config.h	/^const uint8_t MAX_VARIABLES = 5; \/\/\/< @note Default: 5$/;"	v
MINUS_TERN0	.\Firmware\src\HAL\macros.h	200;"	d
MIN_10	.\Firmware\src\HAL\macros.h	424;"	d
MIN_2	.\Firmware\src\HAL\macros.h	416;"	d
MIN_3	.\Firmware\src\HAL\macros.h	417;"	d
MIN_4	.\Firmware\src\HAL\macros.h	418;"	d
MIN_5	.\Firmware\src\HAL\macros.h	419;"	d
MIN_6	.\Firmware\src\HAL\macros.h	420;"	d
MIN_7	.\Firmware\src\HAL\macros.h	421;"	d
MIN_8	.\Firmware\src\HAL\macros.h	422;"	d
MIN_9	.\Firmware\src\HAL\macros.h	423;"	d
MIN_SMOOTHING_FACTOR	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.h	/^    static const int MIN_SMOOTHING_FACTOR = 2;$/;"	m	class:final
MULTISTEPPER_MAX_STEPPERS	.\Firmware\lib\AccelStepper\MultiStepper.h	14;"	d
M_EXTRUDER_DIR	.\Firmware\src\HAL\megaatmega2560\user_pins.h	16;"	d
M_EXTRUDER_STEP	.\Firmware\src\HAL\megaatmega2560\user_pins.h	15;"	d
M_LEVEL_DIR	.\Firmware\src\HAL\megaatmega2560\user_pins.h	22;"	d
M_LEVEL_STEP	.\Firmware\src\HAL\megaatmega2560\user_pins.h	21;"	d
M_ROLLER_DIR	.\Firmware\src\HAL\megaatmega2560\user_pins.h	19;"	d
M_ROLLER_STEP	.\Firmware\src\HAL\megaatmega2560\user_pins.h	18;"	d
M_WINDER_DIR	.\Firmware\src\HAL\megaatmega2560\user_pins.h	25;"	d
M_WINDER_STEP	.\Firmware\src\HAL\megaatmega2560\user_pins.h	24;"	d
MotorInterfaceType	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    } MotorInterfaceType;$/;"	t	class:AccelStepper	typeref:enum:AccelStepper::__anon1
MultiStepper	.\Firmware\lib\AccelStepper\MultiStepper.cpp	/^MultiStepper::MultiStepper()$/;"	f	class:MultiStepper
MultiStepper	.\Firmware\lib\AccelStepper\MultiStepper.h	/^class MultiStepper$/;"	c
MultiStepper_h	.\Firmware\lib\AccelStepper\MultiStepper.h	4;"	d
NANOSECONDS_PER_CYCLE	.\Firmware\src\HAL\macros.h	75;"	d
NEAR	.\Firmware\src\HAL\macros.h	282;"	d
NEAR_ZERO	.\Firmware\src\HAL\macros.h	281;"	d
NOLESS	.\Firmware\src\HAL\macros.h	/^  template <class V, class N> static inline constexpr void NOLESS(V& v, const N n) {$/;"	f
NOLESS	.\Firmware\src\HAL\macros.h	131;"	d
NOMORE	.\Firmware\src\HAL\macros.h	/^  template <class V, class N> static inline constexpr void NOMORE(V& v, const N n) {$/;"	f
NOMORE	.\Firmware\src\HAL\macros.h	137;"	d
NONE	.\Firmware\src\HAL\macros.h	208;"	d
NOOP	.\Firmware\src\HAL\macros.h	269;"	d
NORMAL	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  RIGHT = 1, NORMAL = 1,$/;"	m	class:DataType::Position
NORMSQ	.\Firmware\src\HAL\macros.h	106;"	d
NOT	.\Firmware\src\HAL\macros.h	539;"	d
NOT_USED	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  NOT_USED = 0,$/;"	m	class:DataType
NO_INLINE	.\Firmware\src\HAL\macros.h	55;"	d
NUMERIC	.\Firmware\src\HAL\macros.h	227;"	d
NUMERIC_SIGNED	.\Firmware\src\HAL\macros.h	230;"	d
NUM_ARGS	.\Firmware\src\HAL\macros.h	304;"	d
OC0A	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	40;"	d
OC0B	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	41;"	d
OC1A	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	42;"	d
OC1B	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	43;"	d
OC2A	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	44;"	d
OC2B	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	45;"	d
OC3A	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	46;"	d
OC3B	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	47;"	d
OC3C	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	48;"	d
OC4A	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	49;"	d
OC4B	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	50;"	d
OC4C	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	51;"	d
OC5A	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	52;"	d
OC5B	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	53;"	d
OC5C	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	54;"	d
ONBOARD_LED	.\Firmware\src\HAL\megaatmega2560\user_pins.h	11;"	d
ONLY_FILENAME	.\Firmware\src\HAL\macros.h	401;"	d
OUT_WRITE	.\Firmware\src\HAL\megaatmega2560\fastio.h	88;"	d
PA0	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	578;"	d
PA0	.\Firmware\src\HAL\megaatmega2560\pins.h	530;"	d
PA0_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	582;"	d
PA0_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	534;"	d
PA0_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	579;"	d
PA0_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	531;"	d
PA0_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	583;"	d
PA0_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	535;"	d
PA0_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	580;"	d
PA0_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	532;"	d
PA0_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	581;"	d
PA0_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	533;"	d
PA1	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	584;"	d
PA1	.\Firmware\src\HAL\megaatmega2560\pins.h	536;"	d
PA1_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	588;"	d
PA1_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	540;"	d
PA1_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	585;"	d
PA1_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	537;"	d
PA1_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	589;"	d
PA1_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	541;"	d
PA1_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	586;"	d
PA1_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	538;"	d
PA1_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	587;"	d
PA1_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	539;"	d
PA2	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	590;"	d
PA2	.\Firmware\src\HAL\megaatmega2560\pins.h	542;"	d
PA2_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	594;"	d
PA2_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	546;"	d
PA2_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	591;"	d
PA2_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	543;"	d
PA2_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	595;"	d
PA2_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	547;"	d
PA2_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	592;"	d
PA2_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	544;"	d
PA2_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	593;"	d
PA2_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	545;"	d
PA3	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	596;"	d
PA3	.\Firmware\src\HAL\megaatmega2560\pins.h	548;"	d
PA3_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	600;"	d
PA3_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	552;"	d
PA3_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	597;"	d
PA3_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	549;"	d
PA3_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	601;"	d
PA3_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	553;"	d
PA3_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	598;"	d
PA3_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	550;"	d
PA3_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	599;"	d
PA3_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	551;"	d
PA4	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	602;"	d
PA4	.\Firmware\src\HAL\megaatmega2560\pins.h	554;"	d
PA4_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	606;"	d
PA4_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	558;"	d
PA4_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	603;"	d
PA4_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	555;"	d
PA4_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	607;"	d
PA4_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	559;"	d
PA4_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	604;"	d
PA4_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	556;"	d
PA4_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	605;"	d
PA4_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	557;"	d
PA5	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	608;"	d
PA5	.\Firmware\src\HAL\megaatmega2560\pins.h	560;"	d
PA5_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	612;"	d
PA5_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	564;"	d
PA5_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	609;"	d
PA5_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	561;"	d
PA5_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	613;"	d
PA5_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	565;"	d
PA5_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	610;"	d
PA5_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	562;"	d
PA5_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	611;"	d
PA5_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	563;"	d
PA6	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	614;"	d
PA6	.\Firmware\src\HAL\megaatmega2560\pins.h	566;"	d
PA6_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	618;"	d
PA6_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	570;"	d
PA6_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	615;"	d
PA6_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	567;"	d
PA6_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	619;"	d
PA6_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	571;"	d
PA6_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	616;"	d
PA6_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	568;"	d
PA6_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	617;"	d
PA6_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	569;"	d
PA7	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	620;"	d
PA7	.\Firmware\src\HAL\megaatmega2560\pins.h	572;"	d
PA7_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	624;"	d
PA7_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	576;"	d
PA7_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	621;"	d
PA7_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	573;"	d
PA7_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	625;"	d
PA7_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	577;"	d
PA7_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	622;"	d
PA7_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	574;"	d
PA7_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	623;"	d
PA7_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	575;"	d
PB0	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	627;"	d
PB0	.\Firmware\src\HAL\megaatmega2560\pins.h	579;"	d
PB0_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	631;"	d
PB0_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	583;"	d
PB0_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	628;"	d
PB0_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	580;"	d
PB0_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	632;"	d
PB0_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	584;"	d
PB0_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	629;"	d
PB0_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	581;"	d
PB0_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	630;"	d
PB0_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	582;"	d
PB1	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	633;"	d
PB1	.\Firmware\src\HAL\megaatmega2560\pins.h	585;"	d
PB1_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	637;"	d
PB1_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	589;"	d
PB1_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	634;"	d
PB1_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	586;"	d
PB1_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	638;"	d
PB1_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	590;"	d
PB1_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	635;"	d
PB1_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	587;"	d
PB1_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	636;"	d
PB1_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	588;"	d
PB2	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	639;"	d
PB2	.\Firmware\src\HAL\megaatmega2560\pins.h	591;"	d
PB2_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	643;"	d
PB2_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	595;"	d
PB2_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	640;"	d
PB2_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	592;"	d
PB2_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	644;"	d
PB2_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	596;"	d
PB2_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	641;"	d
PB2_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	593;"	d
PB2_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	642;"	d
PB2_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	594;"	d
PB3	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	645;"	d
PB3	.\Firmware\src\HAL\megaatmega2560\pins.h	597;"	d
PB3_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	649;"	d
PB3_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	601;"	d
PB3_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	646;"	d
PB3_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	598;"	d
PB3_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	650;"	d
PB3_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	602;"	d
PB3_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	647;"	d
PB3_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	599;"	d
PB3_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	648;"	d
PB3_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	600;"	d
PB4	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	651;"	d
PB4	.\Firmware\src\HAL\megaatmega2560\pins.h	603;"	d
PB4_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	655;"	d
PB4_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	607;"	d
PB4_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	652;"	d
PB4_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	604;"	d
PB4_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	656;"	d
PB4_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	608;"	d
PB4_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	653;"	d
PB4_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	605;"	d
PB4_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	654;"	d
PB4_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	606;"	d
PB5	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	657;"	d
PB5	.\Firmware\src\HAL\megaatmega2560\pins.h	609;"	d
PB5_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	661;"	d
PB5_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	613;"	d
PB5_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	658;"	d
PB5_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	610;"	d
PB5_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	662;"	d
PB5_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	614;"	d
PB5_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	659;"	d
PB5_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	611;"	d
PB5_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	660;"	d
PB5_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	612;"	d
PB6	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	663;"	d
PB6	.\Firmware\src\HAL\megaatmega2560\pins.h	615;"	d
PB6_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	667;"	d
PB6_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	619;"	d
PB6_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	664;"	d
PB6_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	616;"	d
PB6_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	668;"	d
PB6_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	620;"	d
PB6_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	665;"	d
PB6_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	617;"	d
PB6_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	666;"	d
PB6_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	618;"	d
PB7	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	669;"	d
PB7	.\Firmware\src\HAL\megaatmega2560\pins.h	621;"	d
PB7_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	673;"	d
PB7_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	625;"	d
PB7_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	670;"	d
PB7_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	622;"	d
PB7_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	674;"	d
PB7_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	626;"	d
PB7_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	671;"	d
PB7_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	623;"	d
PB7_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	672;"	d
PB7_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	624;"	d
PC0	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	676;"	d
PC0	.\Firmware\src\HAL\megaatmega2560\pins.h	628;"	d
PC0_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	680;"	d
PC0_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	632;"	d
PC0_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	677;"	d
PC0_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	629;"	d
PC0_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	681;"	d
PC0_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	633;"	d
PC0_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	678;"	d
PC0_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	630;"	d
PC0_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	679;"	d
PC0_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	631;"	d
PC1	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	682;"	d
PC1	.\Firmware\src\HAL\megaatmega2560\pins.h	634;"	d
PC1_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	686;"	d
PC1_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	638;"	d
PC1_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	683;"	d
PC1_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	635;"	d
PC1_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	687;"	d
PC1_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	639;"	d
PC1_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	684;"	d
PC1_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	636;"	d
PC1_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	685;"	d
PC1_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	637;"	d
PC2	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	688;"	d
PC2	.\Firmware\src\HAL\megaatmega2560\pins.h	640;"	d
PC2_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	692;"	d
PC2_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	644;"	d
PC2_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	689;"	d
PC2_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	641;"	d
PC2_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	693;"	d
PC2_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	645;"	d
PC2_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	690;"	d
PC2_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	642;"	d
PC2_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	691;"	d
PC2_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	643;"	d
PC3	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	694;"	d
PC3	.\Firmware\src\HAL\megaatmega2560\pins.h	646;"	d
PC3_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	698;"	d
PC3_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	650;"	d
PC3_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	695;"	d
PC3_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	647;"	d
PC3_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	699;"	d
PC3_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	651;"	d
PC3_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	696;"	d
PC3_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	648;"	d
PC3_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	697;"	d
PC3_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	649;"	d
PC4	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	700;"	d
PC4	.\Firmware\src\HAL\megaatmega2560\pins.h	652;"	d
PC4_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	704;"	d
PC4_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	656;"	d
PC4_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	701;"	d
PC4_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	653;"	d
PC4_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	705;"	d
PC4_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	657;"	d
PC4_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	702;"	d
PC4_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	654;"	d
PC4_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	703;"	d
PC4_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	655;"	d
PC5	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	706;"	d
PC5	.\Firmware\src\HAL\megaatmega2560\pins.h	658;"	d
PC5_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	710;"	d
PC5_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	662;"	d
PC5_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	707;"	d
PC5_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	659;"	d
PC5_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	711;"	d
PC5_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	663;"	d
PC5_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	708;"	d
PC5_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	660;"	d
PC5_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	709;"	d
PC5_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	661;"	d
PC6	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	712;"	d
PC6	.\Firmware\src\HAL\megaatmega2560\pins.h	664;"	d
PC6_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	716;"	d
PC6_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	668;"	d
PC6_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	713;"	d
PC6_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	665;"	d
PC6_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	717;"	d
PC6_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	669;"	d
PC6_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	714;"	d
PC6_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	666;"	d
PC6_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	715;"	d
PC6_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	667;"	d
PC7	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	718;"	d
PC7	.\Firmware\src\HAL\megaatmega2560\pins.h	670;"	d
PC7_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	722;"	d
PC7_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	674;"	d
PC7_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	719;"	d
PC7_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	671;"	d
PC7_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	723;"	d
PC7_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	675;"	d
PC7_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	720;"	d
PC7_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	672;"	d
PC7_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	721;"	d
PC7_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	673;"	d
PD0	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	725;"	d
PD0	.\Firmware\src\HAL\megaatmega2560\pins.h	677;"	d
PD0_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	729;"	d
PD0_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	681;"	d
PD0_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	726;"	d
PD0_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	678;"	d
PD0_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	730;"	d
PD0_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	682;"	d
PD0_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	727;"	d
PD0_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	679;"	d
PD0_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	728;"	d
PD0_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	680;"	d
PD1	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	731;"	d
PD1	.\Firmware\src\HAL\megaatmega2560\pins.h	683;"	d
PD1_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	735;"	d
PD1_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	687;"	d
PD1_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	732;"	d
PD1_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	684;"	d
PD1_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	736;"	d
PD1_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	688;"	d
PD1_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	733;"	d
PD1_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	685;"	d
PD1_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	734;"	d
PD1_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	686;"	d
PD2	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	737;"	d
PD2	.\Firmware\src\HAL\megaatmega2560\pins.h	689;"	d
PD2_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	741;"	d
PD2_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	693;"	d
PD2_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	738;"	d
PD2_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	690;"	d
PD2_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	742;"	d
PD2_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	694;"	d
PD2_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	739;"	d
PD2_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	691;"	d
PD2_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	740;"	d
PD2_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	692;"	d
PD3	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	743;"	d
PD3	.\Firmware\src\HAL\megaatmega2560\pins.h	695;"	d
PD3_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	747;"	d
PD3_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	699;"	d
PD3_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	744;"	d
PD3_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	696;"	d
PD3_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	748;"	d
PD3_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	700;"	d
PD3_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	745;"	d
PD3_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	697;"	d
PD3_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	746;"	d
PD3_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	698;"	d
PD4	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	749;"	d
PD4	.\Firmware\src\HAL\megaatmega2560\pins.h	701;"	d
PD4_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	753;"	d
PD4_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	705;"	d
PD4_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	750;"	d
PD4_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	702;"	d
PD4_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	754;"	d
PD4_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	706;"	d
PD4_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	751;"	d
PD4_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	703;"	d
PD4_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	752;"	d
PD4_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	704;"	d
PD5	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	755;"	d
PD5	.\Firmware\src\HAL\megaatmega2560\pins.h	707;"	d
PD5_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	759;"	d
PD5_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	711;"	d
PD5_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	756;"	d
PD5_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	708;"	d
PD5_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	760;"	d
PD5_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	712;"	d
PD5_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	757;"	d
PD5_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	709;"	d
PD5_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	758;"	d
PD5_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	710;"	d
PD6	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	761;"	d
PD6	.\Firmware\src\HAL\megaatmega2560\pins.h	713;"	d
PD6_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	765;"	d
PD6_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	717;"	d
PD6_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	762;"	d
PD6_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	714;"	d
PD6_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	766;"	d
PD6_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	718;"	d
PD6_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	763;"	d
PD6_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	715;"	d
PD6_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	764;"	d
PD6_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	716;"	d
PD7	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	767;"	d
PD7	.\Firmware\src\HAL\megaatmega2560\pins.h	719;"	d
PD7_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	771;"	d
PD7_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	723;"	d
PD7_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	768;"	d
PD7_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	720;"	d
PD7_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	772;"	d
PD7_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	724;"	d
PD7_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	769;"	d
PD7_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	721;"	d
PD7_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	770;"	d
PD7_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	722;"	d
PE0	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	774;"	d
PE0	.\Firmware\src\HAL\megaatmega2560\pins.h	726;"	d
PE0_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	778;"	d
PE0_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	730;"	d
PE0_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	775;"	d
PE0_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	727;"	d
PE0_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	779;"	d
PE0_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	731;"	d
PE0_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	776;"	d
PE0_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	728;"	d
PE0_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	777;"	d
PE0_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	729;"	d
PE1	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	780;"	d
PE1	.\Firmware\src\HAL\megaatmega2560\pins.h	732;"	d
PE1_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	784;"	d
PE1_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	736;"	d
PE1_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	781;"	d
PE1_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	733;"	d
PE1_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	785;"	d
PE1_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	737;"	d
PE1_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	782;"	d
PE1_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	734;"	d
PE1_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	783;"	d
PE1_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	735;"	d
PE2	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	786;"	d
PE2	.\Firmware\src\HAL\megaatmega2560\pins.h	738;"	d
PE2_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	790;"	d
PE2_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	742;"	d
PE2_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	787;"	d
PE2_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	739;"	d
PE2_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	791;"	d
PE2_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	743;"	d
PE2_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	788;"	d
PE2_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	740;"	d
PE2_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	789;"	d
PE2_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	741;"	d
PE3	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	792;"	d
PE3	.\Firmware\src\HAL\megaatmega2560\pins.h	744;"	d
PE3_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	796;"	d
PE3_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	748;"	d
PE3_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	793;"	d
PE3_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	745;"	d
PE3_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	797;"	d
PE3_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	749;"	d
PE3_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	794;"	d
PE3_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	746;"	d
PE3_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	795;"	d
PE3_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	747;"	d
PE4	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	798;"	d
PE4	.\Firmware\src\HAL\megaatmega2560\pins.h	750;"	d
PE4_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	802;"	d
PE4_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	754;"	d
PE4_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	799;"	d
PE4_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	751;"	d
PE4_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	803;"	d
PE4_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	755;"	d
PE4_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	800;"	d
PE4_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	752;"	d
PE4_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	801;"	d
PE4_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	753;"	d
PE5	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	804;"	d
PE5	.\Firmware\src\HAL\megaatmega2560\pins.h	756;"	d
PE5_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	808;"	d
PE5_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	760;"	d
PE5_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	805;"	d
PE5_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	757;"	d
PE5_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	809;"	d
PE5_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	761;"	d
PE5_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	806;"	d
PE5_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	758;"	d
PE5_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	807;"	d
PE5_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	759;"	d
PE6	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	810;"	d
PE6	.\Firmware\src\HAL\megaatmega2560\pins.h	762;"	d
PE6_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	814;"	d
PE6_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	766;"	d
PE6_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	811;"	d
PE6_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	763;"	d
PE6_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	815;"	d
PE6_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	767;"	d
PE6_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	812;"	d
PE6_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	764;"	d
PE6_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	813;"	d
PE6_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	765;"	d
PE7	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	816;"	d
PE7	.\Firmware\src\HAL\megaatmega2560\pins.h	768;"	d
PE7_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	820;"	d
PE7_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	772;"	d
PE7_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	817;"	d
PE7_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	769;"	d
PE7_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	821;"	d
PE7_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	773;"	d
PE7_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	818;"	d
PE7_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	770;"	d
PE7_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	819;"	d
PE7_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	771;"	d
PF0	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	823;"	d
PF0	.\Firmware\src\HAL\megaatmega2560\pins.h	775;"	d
PF0_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	827;"	d
PF0_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	779;"	d
PF0_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	824;"	d
PF0_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	776;"	d
PF0_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	828;"	d
PF0_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	780;"	d
PF0_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	825;"	d
PF0_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	777;"	d
PF0_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	826;"	d
PF0_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	778;"	d
PF1	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	829;"	d
PF1	.\Firmware\src\HAL\megaatmega2560\pins.h	781;"	d
PF1_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	833;"	d
PF1_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	785;"	d
PF1_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	830;"	d
PF1_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	782;"	d
PF1_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	834;"	d
PF1_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	786;"	d
PF1_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	831;"	d
PF1_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	783;"	d
PF1_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	832;"	d
PF1_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	784;"	d
PF2	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	835;"	d
PF2	.\Firmware\src\HAL\megaatmega2560\pins.h	787;"	d
PF2_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	839;"	d
PF2_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	791;"	d
PF2_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	836;"	d
PF2_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	788;"	d
PF2_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	840;"	d
PF2_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	792;"	d
PF2_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	837;"	d
PF2_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	789;"	d
PF2_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	838;"	d
PF2_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	790;"	d
PF3	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	841;"	d
PF3	.\Firmware\src\HAL\megaatmega2560\pins.h	793;"	d
PF3_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	845;"	d
PF3_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	797;"	d
PF3_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	842;"	d
PF3_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	794;"	d
PF3_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	846;"	d
PF3_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	798;"	d
PF3_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	843;"	d
PF3_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	795;"	d
PF3_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	844;"	d
PF3_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	796;"	d
PF4	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	847;"	d
PF4	.\Firmware\src\HAL\megaatmega2560\pins.h	799;"	d
PF4_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	851;"	d
PF4_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	803;"	d
PF4_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	848;"	d
PF4_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	800;"	d
PF4_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	852;"	d
PF4_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	804;"	d
PF4_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	849;"	d
PF4_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	801;"	d
PF4_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	850;"	d
PF4_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	802;"	d
PF5	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	853;"	d
PF5	.\Firmware\src\HAL\megaatmega2560\pins.h	805;"	d
PF5_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	857;"	d
PF5_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	809;"	d
PF5_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	854;"	d
PF5_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	806;"	d
PF5_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	858;"	d
PF5_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	810;"	d
PF5_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	855;"	d
PF5_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	807;"	d
PF5_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	856;"	d
PF5_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	808;"	d
PF6	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	859;"	d
PF6	.\Firmware\src\HAL\megaatmega2560\pins.h	811;"	d
PF6_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	863;"	d
PF6_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	815;"	d
PF6_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	860;"	d
PF6_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	812;"	d
PF6_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	864;"	d
PF6_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	816;"	d
PF6_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	861;"	d
PF6_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	813;"	d
PF6_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	862;"	d
PF6_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	814;"	d
PF7	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	865;"	d
PF7	.\Firmware\src\HAL\megaatmega2560\pins.h	817;"	d
PF7_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	869;"	d
PF7_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	821;"	d
PF7_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	866;"	d
PF7_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	818;"	d
PF7_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	870;"	d
PF7_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	822;"	d
PF7_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	867;"	d
PF7_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	819;"	d
PF7_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	868;"	d
PF7_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	820;"	d
PG0	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	872;"	d
PG0	.\Firmware\src\HAL\megaatmega2560\pins.h	824;"	d
PG0_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	876;"	d
PG0_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	828;"	d
PG0_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	873;"	d
PG0_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	825;"	d
PG0_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	877;"	d
PG0_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	829;"	d
PG0_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	874;"	d
PG0_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	826;"	d
PG0_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	875;"	d
PG0_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	827;"	d
PG1	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	878;"	d
PG1	.\Firmware\src\HAL\megaatmega2560\pins.h	830;"	d
PG1_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	882;"	d
PG1_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	834;"	d
PG1_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	879;"	d
PG1_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	831;"	d
PG1_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	883;"	d
PG1_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	835;"	d
PG1_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	880;"	d
PG1_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	832;"	d
PG1_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	881;"	d
PG1_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	833;"	d
PG2	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	884;"	d
PG2	.\Firmware\src\HAL\megaatmega2560\pins.h	836;"	d
PG2_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	888;"	d
PG2_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	840;"	d
PG2_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	885;"	d
PG2_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	837;"	d
PG2_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	889;"	d
PG2_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	841;"	d
PG2_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	886;"	d
PG2_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	838;"	d
PG2_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	887;"	d
PG2_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	839;"	d
PG3	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	890;"	d
PG3	.\Firmware\src\HAL\megaatmega2560\pins.h	842;"	d
PG3_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	894;"	d
PG3_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	846;"	d
PG3_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	891;"	d
PG3_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	843;"	d
PG3_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	895;"	d
PG3_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	847;"	d
PG3_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	892;"	d
PG3_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	844;"	d
PG3_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	893;"	d
PG3_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	845;"	d
PG4	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	896;"	d
PG4	.\Firmware\src\HAL\megaatmega2560\pins.h	848;"	d
PG4_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	900;"	d
PG4_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	852;"	d
PG4_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	897;"	d
PG4_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	849;"	d
PG4_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	901;"	d
PG4_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	853;"	d
PG4_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	898;"	d
PG4_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	850;"	d
PG4_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	899;"	d
PG4_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	851;"	d
PG5	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	902;"	d
PG5	.\Firmware\src\HAL\megaatmega2560\pins.h	854;"	d
PG5_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	906;"	d
PG5_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	858;"	d
PG5_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	903;"	d
PG5_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	855;"	d
PG5_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	907;"	d
PG5_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	859;"	d
PG5_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	904;"	d
PG5_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	856;"	d
PG5_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	905;"	d
PG5_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	857;"	d
PH0	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	909;"	d
PH0	.\Firmware\src\HAL\megaatmega2560\pins.h	861;"	d
PH0_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	913;"	d
PH0_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	865;"	d
PH0_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	910;"	d
PH0_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	862;"	d
PH0_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	914;"	d
PH0_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	866;"	d
PH0_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	911;"	d
PH0_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	863;"	d
PH0_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	912;"	d
PH0_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	864;"	d
PH1	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	915;"	d
PH1	.\Firmware\src\HAL\megaatmega2560\pins.h	867;"	d
PH1_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	919;"	d
PH1_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	871;"	d
PH1_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	916;"	d
PH1_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	868;"	d
PH1_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	920;"	d
PH1_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	872;"	d
PH1_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	917;"	d
PH1_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	869;"	d
PH1_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	918;"	d
PH1_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	870;"	d
PH2	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	921;"	d
PH2	.\Firmware\src\HAL\megaatmega2560\pins.h	873;"	d
PH2_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	925;"	d
PH2_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	877;"	d
PH2_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	922;"	d
PH2_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	874;"	d
PH2_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	926;"	d
PH2_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	878;"	d
PH2_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	923;"	d
PH2_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	875;"	d
PH2_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	924;"	d
PH2_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	876;"	d
PH3	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	927;"	d
PH3	.\Firmware\src\HAL\megaatmega2560\pins.h	879;"	d
PH3_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	931;"	d
PH3_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	883;"	d
PH3_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	928;"	d
PH3_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	880;"	d
PH3_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	932;"	d
PH3_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	884;"	d
PH3_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	929;"	d
PH3_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	881;"	d
PH3_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	930;"	d
PH3_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	882;"	d
PH4	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	933;"	d
PH4	.\Firmware\src\HAL\megaatmega2560\pins.h	885;"	d
PH4_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	937;"	d
PH4_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	889;"	d
PH4_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	934;"	d
PH4_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	886;"	d
PH4_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	938;"	d
PH4_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	890;"	d
PH4_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	935;"	d
PH4_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	887;"	d
PH4_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	936;"	d
PH4_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	888;"	d
PH5	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	939;"	d
PH5	.\Firmware\src\HAL\megaatmega2560\pins.h	891;"	d
PH5_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	943;"	d
PH5_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	895;"	d
PH5_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	940;"	d
PH5_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	892;"	d
PH5_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	944;"	d
PH5_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	896;"	d
PH5_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	941;"	d
PH5_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	893;"	d
PH5_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	942;"	d
PH5_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	894;"	d
PH6	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	945;"	d
PH6	.\Firmware\src\HAL\megaatmega2560\pins.h	897;"	d
PH6_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	949;"	d
PH6_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	901;"	d
PH6_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	946;"	d
PH6_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	898;"	d
PH6_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	950;"	d
PH6_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	902;"	d
PH6_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	947;"	d
PH6_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	899;"	d
PH6_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	948;"	d
PH6_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	900;"	d
PH7	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	951;"	d
PH7	.\Firmware\src\HAL\megaatmega2560\pins.h	903;"	d
PH7_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	955;"	d
PH7_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	907;"	d
PH7_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	952;"	d
PH7_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	904;"	d
PH7_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	956;"	d
PH7_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	908;"	d
PH7_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	953;"	d
PH7_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	905;"	d
PH7_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	954;"	d
PH7_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	906;"	d
PID	.\Firmware\lib\Arduino-PID-Library\PID_v1.cpp	/^PID::PID(double* Input, double* Output, double* Setpoint,$/;"	f	class:PID
PID	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^class PID$/;"	c
PID_ATune	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.cpp	/^PID_ATune::PID_ATune(double* Input, double* Output)$/;"	f	class:PID_ATune
PID_ATune	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^class PID_ATune$/;"	c
PID_AutoTune_v0	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	2;"	d
PID_v1_h	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	2;"	d
PINS_EXIST	.\Firmware\src\HAL\macros.h	217;"	d
PIN_EXISTS	.\Firmware\src\HAL\macros.h	215;"	d
PIN_TO_BASEREG	.\Firmware\lib\Encoder\utility\direct_pin_read.h	14;"	d
PIN_TO_BASEREG	.\Firmware\lib\Encoder\utility\direct_pin_read.h	21;"	d
PIN_TO_BASEREG	.\Firmware\lib\Encoder\utility\direct_pin_read.h	28;"	d
PIN_TO_BASEREG	.\Firmware\lib\Encoder\utility\direct_pin_read.h	35;"	d
PIN_TO_BASEREG	.\Firmware\lib\Encoder\utility\direct_pin_read.h	43;"	d
PIN_TO_BASEREG	.\Firmware\lib\Encoder\utility\direct_pin_read.h	51;"	d
PIN_TO_BASEREG	.\Firmware\lib\Encoder\utility\direct_pin_read.h	58;"	d
PIN_TO_BASEREG	.\Firmware\lib\Encoder\utility\direct_pin_read.h	65;"	d
PIN_TO_BASEREG	.\Firmware\lib\Encoder\utility\direct_pin_read.h	72;"	d
PIN_TO_BASEREG	.\Firmware\lib\Encoder\utility\direct_pin_read.h	7;"	d
PIN_TO_BASEREG	.\Firmware\lib\Encoder\utility\direct_pin_read.h	86;"	d
PIN_TO_BITMASK	.\Firmware\lib\Encoder\utility\direct_pin_read.h	15;"	d
PIN_TO_BITMASK	.\Firmware\lib\Encoder\utility\direct_pin_read.h	22;"	d
PIN_TO_BITMASK	.\Firmware\lib\Encoder\utility\direct_pin_read.h	29;"	d
PIN_TO_BITMASK	.\Firmware\lib\Encoder\utility\direct_pin_read.h	36;"	d
PIN_TO_BITMASK	.\Firmware\lib\Encoder\utility\direct_pin_read.h	44;"	d
PIN_TO_BITMASK	.\Firmware\lib\Encoder\utility\direct_pin_read.h	52;"	d
PIN_TO_BITMASK	.\Firmware\lib\Encoder\utility\direct_pin_read.h	59;"	d
PIN_TO_BITMASK	.\Firmware\lib\Encoder\utility\direct_pin_read.h	66;"	d
PIN_TO_BITMASK	.\Firmware\lib\Encoder\utility\direct_pin_read.h	73;"	d
PIN_TO_BITMASK	.\Firmware\lib\Encoder\utility\direct_pin_read.h	87;"	d
PIN_TO_BITMASK	.\Firmware\lib\Encoder\utility\direct_pin_read.h	8;"	d
PJ0	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	958;"	d
PJ0	.\Firmware\src\HAL\megaatmega2560\pins.h	910;"	d
PJ0_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	962;"	d
PJ0_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	914;"	d
PJ0_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	959;"	d
PJ0_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	911;"	d
PJ0_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	963;"	d
PJ0_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	915;"	d
PJ0_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	960;"	d
PJ0_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	912;"	d
PJ0_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	961;"	d
PJ0_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	913;"	d
PJ1	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	964;"	d
PJ1	.\Firmware\src\HAL\megaatmega2560\pins.h	916;"	d
PJ1_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	968;"	d
PJ1_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	920;"	d
PJ1_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	965;"	d
PJ1_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	917;"	d
PJ1_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	969;"	d
PJ1_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	921;"	d
PJ1_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	966;"	d
PJ1_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	918;"	d
PJ1_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	967;"	d
PJ1_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	919;"	d
PJ2	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	970;"	d
PJ2	.\Firmware\src\HAL\megaatmega2560\pins.h	922;"	d
PJ2_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	974;"	d
PJ2_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	926;"	d
PJ2_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	971;"	d
PJ2_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	923;"	d
PJ2_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	975;"	d
PJ2_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	927;"	d
PJ2_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	972;"	d
PJ2_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	924;"	d
PJ2_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	973;"	d
PJ2_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	925;"	d
PJ3	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	976;"	d
PJ3	.\Firmware\src\HAL\megaatmega2560\pins.h	928;"	d
PJ3_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	980;"	d
PJ3_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	932;"	d
PJ3_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	977;"	d
PJ3_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	929;"	d
PJ3_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	981;"	d
PJ3_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	933;"	d
PJ3_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	978;"	d
PJ3_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	930;"	d
PJ3_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	979;"	d
PJ3_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	931;"	d
PJ4	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	982;"	d
PJ4	.\Firmware\src\HAL\megaatmega2560\pins.h	934;"	d
PJ4_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	986;"	d
PJ4_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	938;"	d
PJ4_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	983;"	d
PJ4_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	935;"	d
PJ4_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	987;"	d
PJ4_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	939;"	d
PJ4_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	984;"	d
PJ4_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	936;"	d
PJ4_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	985;"	d
PJ4_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	937;"	d
PJ5	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	988;"	d
PJ5	.\Firmware\src\HAL\megaatmega2560\pins.h	940;"	d
PJ5_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	992;"	d
PJ5_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	944;"	d
PJ5_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	989;"	d
PJ5_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	941;"	d
PJ5_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	993;"	d
PJ5_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	945;"	d
PJ5_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	990;"	d
PJ5_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	942;"	d
PJ5_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	991;"	d
PJ5_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	943;"	d
PJ6	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	994;"	d
PJ6	.\Firmware\src\HAL\megaatmega2560\pins.h	946;"	d
PJ6_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	998;"	d
PJ6_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	950;"	d
PJ6_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	995;"	d
PJ6_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	947;"	d
PJ6_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	999;"	d
PJ6_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	951;"	d
PJ6_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	996;"	d
PJ6_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	948;"	d
PJ6_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	997;"	d
PJ6_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	949;"	d
PJ7	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1000;"	d
PJ7	.\Firmware\src\HAL\megaatmega2560\pins.h	952;"	d
PJ7_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1004;"	d
PJ7_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	956;"	d
PJ7_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1001;"	d
PJ7_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	953;"	d
PJ7_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1005;"	d
PJ7_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	957;"	d
PJ7_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1002;"	d
PJ7_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	954;"	d
PJ7_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1003;"	d
PJ7_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	955;"	d
PK0	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1007;"	d
PK0	.\Firmware\src\HAL\megaatmega2560\pins.h	959;"	d
PK0_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1011;"	d
PK0_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	963;"	d
PK0_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1008;"	d
PK0_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	960;"	d
PK0_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1012;"	d
PK0_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	964;"	d
PK0_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1009;"	d
PK0_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	961;"	d
PK0_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1010;"	d
PK0_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	962;"	d
PK1	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1013;"	d
PK1	.\Firmware\src\HAL\megaatmega2560\pins.h	965;"	d
PK1_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1017;"	d
PK1_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	969;"	d
PK1_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1014;"	d
PK1_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	966;"	d
PK1_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1018;"	d
PK1_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	970;"	d
PK1_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1015;"	d
PK1_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	967;"	d
PK1_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1016;"	d
PK1_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	968;"	d
PK2	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1019;"	d
PK2	.\Firmware\src\HAL\megaatmega2560\pins.h	971;"	d
PK2_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1023;"	d
PK2_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	975;"	d
PK2_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1020;"	d
PK2_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	972;"	d
PK2_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1024;"	d
PK2_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	976;"	d
PK2_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1021;"	d
PK2_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	973;"	d
PK2_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1022;"	d
PK2_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	974;"	d
PK3	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1025;"	d
PK3	.\Firmware\src\HAL\megaatmega2560\pins.h	977;"	d
PK3_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1029;"	d
PK3_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	981;"	d
PK3_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1026;"	d
PK3_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	978;"	d
PK3_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1030;"	d
PK3_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	982;"	d
PK3_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1027;"	d
PK3_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	979;"	d
PK3_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1028;"	d
PK3_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	980;"	d
PK4	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1031;"	d
PK4	.\Firmware\src\HAL\megaatmega2560\pins.h	983;"	d
PK4_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1035;"	d
PK4_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	987;"	d
PK4_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1032;"	d
PK4_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	984;"	d
PK4_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1036;"	d
PK4_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	988;"	d
PK4_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1033;"	d
PK4_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	985;"	d
PK4_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1034;"	d
PK4_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	986;"	d
PK5	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1037;"	d
PK5	.\Firmware\src\HAL\megaatmega2560\pins.h	989;"	d
PK5_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1041;"	d
PK5_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	993;"	d
PK5_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1038;"	d
PK5_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	990;"	d
PK5_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1042;"	d
PK5_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	994;"	d
PK5_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1039;"	d
PK5_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	991;"	d
PK5_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1040;"	d
PK5_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	992;"	d
PK6	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1043;"	d
PK6	.\Firmware\src\HAL\megaatmega2560\pins.h	995;"	d
PK6_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1047;"	d
PK6_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	999;"	d
PK6_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1044;"	d
PK6_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	996;"	d
PK6_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1048;"	d
PK6_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	1000;"	d
PK6_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1045;"	d
PK6_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	997;"	d
PK6_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1046;"	d
PK6_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	998;"	d
PK7	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1049;"	d
PK7	.\Firmware\src\HAL\megaatmega2560\pins.h	1001;"	d
PK7_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1053;"	d
PK7_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	1005;"	d
PK7_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1050;"	d
PK7_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	1002;"	d
PK7_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1054;"	d
PK7_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	1006;"	d
PK7_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1051;"	d
PK7_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1003;"	d
PK7_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1052;"	d
PK7_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1004;"	d
PL0	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1056;"	d
PL0	.\Firmware\src\HAL\megaatmega2560\pins.h	1008;"	d
PL0_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1060;"	d
PL0_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	1012;"	d
PL0_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1057;"	d
PL0_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	1009;"	d
PL0_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1061;"	d
PL0_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	1013;"	d
PL0_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1058;"	d
PL0_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1010;"	d
PL0_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1059;"	d
PL0_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1011;"	d
PL1	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1062;"	d
PL1	.\Firmware\src\HAL\megaatmega2560\pins.h	1014;"	d
PL1_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1066;"	d
PL1_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	1018;"	d
PL1_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1063;"	d
PL1_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	1015;"	d
PL1_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1067;"	d
PL1_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	1019;"	d
PL1_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1064;"	d
PL1_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1016;"	d
PL1_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1065;"	d
PL1_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1017;"	d
PL2	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1068;"	d
PL2	.\Firmware\src\HAL\megaatmega2560\pins.h	1020;"	d
PL2_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1072;"	d
PL2_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	1024;"	d
PL2_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1069;"	d
PL2_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	1021;"	d
PL2_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1073;"	d
PL2_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	1025;"	d
PL2_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1070;"	d
PL2_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1022;"	d
PL2_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1071;"	d
PL2_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1023;"	d
PL3	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1074;"	d
PL3	.\Firmware\src\HAL\megaatmega2560\pins.h	1026;"	d
PL3_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1078;"	d
PL3_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	1030;"	d
PL3_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1075;"	d
PL3_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	1027;"	d
PL3_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1079;"	d
PL3_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	1031;"	d
PL3_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1076;"	d
PL3_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1028;"	d
PL3_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1077;"	d
PL3_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1029;"	d
PL4	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1080;"	d
PL4	.\Firmware\src\HAL\megaatmega2560\pins.h	1032;"	d
PL4_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1084;"	d
PL4_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	1036;"	d
PL4_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1081;"	d
PL4_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	1033;"	d
PL4_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1085;"	d
PL4_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	1037;"	d
PL4_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1082;"	d
PL4_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1034;"	d
PL4_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1083;"	d
PL4_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1035;"	d
PL5	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1086;"	d
PL5	.\Firmware\src\HAL\megaatmega2560\pins.h	1038;"	d
PL5_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1090;"	d
PL5_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	1042;"	d
PL5_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1087;"	d
PL5_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	1039;"	d
PL5_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1091;"	d
PL5_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	1043;"	d
PL5_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1088;"	d
PL5_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1040;"	d
PL5_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1089;"	d
PL5_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1041;"	d
PL6	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1092;"	d
PL6	.\Firmware\src\HAL\megaatmega2560\pins.h	1044;"	d
PL6_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1096;"	d
PL6_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	1048;"	d
PL6_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1093;"	d
PL6_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	1045;"	d
PL6_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1097;"	d
PL6_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	1049;"	d
PL6_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1094;"	d
PL6_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1046;"	d
PL6_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1095;"	d
PL6_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1047;"	d
PL7	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1098;"	d
PL7	.\Firmware\src\HAL\megaatmega2560\pins.h	1050;"	d
PL7_DDR	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1102;"	d
PL7_DDR	.\Firmware\src\HAL\megaatmega2560\pins.h	1054;"	d
PL7_PIN	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1099;"	d
PL7_PIN	.\Firmware\src\HAL\megaatmega2560\pins.h	1051;"	d
PL7_PWM	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1103;"	d
PL7_PWM	.\Firmware\src\HAL\megaatmega2560\pins.h	1055;"	d
PL7_RPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1100;"	d
PL7_RPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1052;"	d
PL7_WPORT	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	1101;"	d
PL7_WPORT	.\Firmware\src\HAL\megaatmega2560\pins.h	1053;"	d
PLUS_TERN0	.\Firmware\src\HAL\macros.h	199;"	d
POW	.\Firmware\src\HAL\macros.h	292;"	d
PROBE	.\Firmware\src\HAL\macros.h	537;"	d
PROG_CONST_CHAR_PTR	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  PROG_CONST_CHAR_PTR = 65,$/;"	m	class:DataType
PWM_PIN	.\Firmware\src\HAL\megaatmega2560\fastio.h	335;"	d
P_ON_E	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	17;"	d
P_ON_M	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	16;"	d
Position	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^enum class Position : uint8_t {$/;"	c	class:DataType
Private	.\Firmware\src\HAL\macros.h	/^  namespace Private {$/;"	n
Pu	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	double Ku, Pu;$/;"	m	class:PID_ATune
RADIANS	.\Firmware\src\HAL\macros.h	103;"	d
READ	.\Firmware\src\HAL\megaatmega2560\fastio.h	75;"	d
RECIPROCAL	.\Firmware\src\HAL\macros.h	284;"	d
REPEAT	.\Firmware\src\HAL\macros.h	582;"	d
REPEAT2	.\Firmware\src\HAL\macros.h	586;"	d
REPEAT2_S	.\Firmware\src\HAL\macros.h	585;"	d
REPEAT_S	.\Firmware\src\HAL\macros.h	581;"	d
REVERSE	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	15;"	d
RIGHT	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  RIGHT = 1, NORMAL = 1,$/;"	m	class:DataType::Position
RREPEAT	.\Firmware\src\HAL\macros.h	602;"	d
RREPEAT2	.\Firmware\src\HAL\macros.h	604;"	d
RREPEAT2_S	.\Firmware\src\HAL\macros.h	603;"	d
RREPEAT_S	.\Firmware\src\HAL\macros.h	601;"	d
RSQRT	.\Firmware\src\HAL\macros.h	294;"	d
RXD	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	32;"	d
Runtime	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.cpp	/^int PID_ATune::Runtime()$/;"	f	class:PID_ATune
SBI	.\Firmware\src\HAL\macros.h	90;"	d
SBI32	.\Firmware\src\HAL\macros.h	98;"	d
SCK_pin	.\Firmware\lib\MAX6675_Thermocouple\src\MAX6675_Thermocouple.h	/^		int SCK_pin;$/;"	m	class:final
SCL	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	36;"	d
SCRAMBLE_INT_ORDER	.\Firmware\lib\Encoder\utility\interrupt_config.h	11;"	d
SCRAMBLE_INT_ORDER	.\Firmware\lib\Encoder\utility\interrupt_config.h	8;"	d
SDA	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	37;"	d
SECOND	.\Firmware\src\HAL\macros.h	512;"	d
SET_BIT_TO	.\Firmware\src\HAL\macros.h	88;"	d
SET_COM	.\Firmware\src\HAL\megaatmega2560\fastio.h	218;"	d
SET_COMA	.\Firmware\src\HAL\megaatmega2560\fastio.h	219;"	d
SET_COMB	.\Firmware\src\HAL\megaatmega2560\fastio.h	220;"	d
SET_COMC	.\Firmware\src\HAL\megaatmega2560\fastio.h	221;"	d
SET_COMS	.\Firmware\src\HAL\megaatmega2560\fastio.h	222;"	d
SET_CS	.\Firmware\src\HAL\megaatmega2560\fastio.h	209;"	d
SET_CS0	.\Firmware\src\HAL\megaatmega2560\fastio.h	199;"	d
SET_CS1	.\Firmware\src\HAL\megaatmega2560\fastio.h	200;"	d
SET_CS2	.\Firmware\src\HAL\megaatmega2560\fastio.h	202;"	d
SET_CS2	.\Firmware\src\HAL\megaatmega2560\fastio.h	204;"	d
SET_CS3	.\Firmware\src\HAL\megaatmega2560\fastio.h	206;"	d
SET_CS4	.\Firmware\src\HAL\megaatmega2560\fastio.h	207;"	d
SET_CS5	.\Firmware\src\HAL\megaatmega2560\fastio.h	208;"	d
SET_FOC	.\Firmware\src\HAL\megaatmega2560\fastio.h	250;"	d
SET_FOCA	.\Firmware\src\HAL\megaatmega2560\fastio.h	251;"	d
SET_FOCB	.\Firmware\src\HAL\megaatmega2560\fastio.h	252;"	d
SET_FOCC	.\Firmware\src\HAL\megaatmega2560\fastio.h	253;"	d
SET_ICES	.\Firmware\src\HAL\megaatmega2560\fastio.h	246;"	d
SET_ICNC	.\Firmware\src\HAL\megaatmega2560\fastio.h	242;"	d
SET_INPUT	.\Firmware\src\HAL\megaatmega2560\fastio.h	79;"	d
SET_INPUT_PULLDOWN	.\Firmware\src\HAL\megaatmega2560\fastio.h	81;"	d
SET_INPUT_PULLUP	.\Firmware\src\HAL\megaatmega2560\fastio.h	80;"	d
SET_OUTPUT	.\Firmware\src\HAL\megaatmega2560\fastio.h	82;"	d
SET_PWM	.\Firmware\src\HAL\megaatmega2560\fastio.h	83;"	d
SET_WGM	.\Firmware\src\HAL\megaatmega2560\fastio.h	179;"	d
SIGN	.\Firmware\src\HAL\macros.h	111;"	d
SMOOTH_THERMOCOUPLE_H	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.h	37;"	d
SO_pin	.\Firmware\lib\MAX6675_Thermocouple\src\MAX6675_Thermocouple.h	/^		int SO_pin;$/;"	m	class:final
SQRT	.\Firmware\src\HAL\macros.h	293;"	d
STRINGIFY	.\Firmware\src\HAL\macros.h	79;"	d
STRINGIFY_	.\Firmware\src\HAL\macros.h	78;"	d
SUB0	.\Firmware\src\HAL\macros.h	496;"	d
SUB1	.\Firmware\src\HAL\macros.h	497;"	d
SUB10	.\Firmware\src\HAL\macros.h	506;"	d
SUB2	.\Firmware\src\HAL\macros.h	498;"	d
SUB3	.\Firmware\src\HAL\macros.h	499;"	d
SUB4	.\Firmware\src\HAL\macros.h	500;"	d
SUB5	.\Firmware\src\HAL\macros.h	501;"	d
SUB6	.\Firmware\src\HAL\macros.h	502;"	d
SUB7	.\Firmware\src\HAL\macros.h	503;"	d
SUB8	.\Firmware\src\HAL\macros.h	504;"	d
SUB9	.\Firmware\src\HAL\macros.h	505;"	d
SUM_TERN	.\Firmware\src\HAL\macros.h	201;"	d
SampleTime	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^	unsigned long SampleTime;$/;"	m	class:PID
SearchBox	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^function SearchBox(name, resultsPath, inFrame, label)$/;"	c
SearchBox.Activate	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.Activate = function(isActive)$/;"	m
SearchBox.CloseResultsWindow	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.CloseResultsWindow = function()$/;"	m
SearchBox.CloseSelectionWindow	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.CloseSelectionWindow = function()$/;"	m
SearchBox.DOMPopupSearchResults	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.DOMPopupSearchResults = function()$/;"	m
SearchBox.DOMPopupSearchResultsWindow	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.DOMPopupSearchResultsWindow = function()$/;"	m
SearchBox.DOMSearchBox	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.DOMSearchBox = function()$/;"	m
SearchBox.DOMSearchClose	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.DOMSearchClose = function()$/;"	m
SearchBox.DOMSearchField	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.DOMSearchField = function()$/;"	m
SearchBox.DOMSearchSelect	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.DOMSearchSelect = function()$/;"	m
SearchBox.DOMSearchSelectWindow	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.DOMSearchSelectWindow = function()$/;"	m
SearchBox.OnSearchFieldChange	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.OnSearchFieldChange = function(evt)$/;"	m
SearchBox.OnSearchFieldFocus	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.OnSearchFieldFocus = function(isActive)$/;"	m
SearchBox.OnSearchSelectHide	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.OnSearchSelectHide = function()$/;"	m
SearchBox.OnSearchSelectKey	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.OnSearchSelectKey = function(evt)$/;"	m
SearchBox.OnSearchSelectShow	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.OnSearchSelectShow = function()$/;"	m
SearchBox.OnSelectItem	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.OnSelectItem = function(id)$/;"	m
SearchBox.Search	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.Search = function()$/;"	m
SearchBox.SelectItemCount	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.SelectItemCount = function(id)$/;"	m
SearchBox.SelectItemSet	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^  this.SelectItemSet = function(id)$/;"	m
SearchResults	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^function SearchResults(name)$/;"	c
SearchResults.FindChildElement	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^    this.FindChildElement = function(id)$/;"	m
SearchResults.Nav	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^    this.Nav = function(evt,itemIndex)$/;"	m
SearchResults.NavChild	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^    this.NavChild = function(evt,itemIndex,childIndex)$/;"	m
SearchResults.NavNext	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^    this.NavNext = function(index)$/;"	m
SearchResults.NavPrev	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^    this.NavPrev = function(index)$/;"	m
SearchResults.ProcessKeys	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^    this.ProcessKeys = function(e)$/;"	m
SearchResults.Search	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^    this.Search = function(search)$/;"	m
SearchResults.Toggle	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^    this.Toggle = function(id)$/;"	m
SetControlType	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.cpp	/^void PID_ATune::SetControlType(int Type) \/\/0=PI, 1=PID$/;"	f	class:PID_ATune
SetControllerDirection	.\Firmware\lib\Arduino-PID-Library\PID_v1.cpp	/^void PID::SetControllerDirection(int Direction)$/;"	f	class:PID
SetLookbackSec	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.cpp	/^void PID_ATune::SetLookbackSec(int value)$/;"	f	class:PID_ATune
SetMode	.\Firmware\lib\Arduino-PID-Library\PID_v1.cpp	/^void PID::SetMode(int Mode)$/;"	f	class:PID
SetNoiseBand	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.cpp	/^void PID_ATune::SetNoiseBand(double Band)$/;"	f	class:PID_ATune
SetOutputLimits	.\Firmware\lib\Arduino-PID-Library\PID_v1.cpp	/^void PID::SetOutputLimits(double Min, double Max)$/;"	f	class:PID
SetOutputStep	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.cpp	/^void PID_ATune::SetOutputStep(double Step)$/;"	f	class:PID_ATune
SetSampleTime	.\Firmware\lib\Arduino-PID-Library\PID_v1.cpp	/^void PID::SetSampleTime(int NewSampleTime)$/;"	f	class:PID
SetTunings	.\Firmware\lib\Arduino-PID-Library\PID_v1.cpp	/^void PID::SetTunings(double Kp, double Ki, double Kd){$/;"	f	class:PID
SetTunings	.\Firmware\lib\Arduino-PID-Library\PID_v1.cpp	/^void PID::SetTunings(double Kp, double Ki, double Kd, int POn)$/;"	f	class:PID
SmoothThermocouple	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.cpp	/^SmoothThermocouple::SmoothThermocouple($/;"	f	class:SmoothThermocouple
TBI	.\Firmware\src\HAL\macros.h	95;"	d
TBI32	.\Firmware\src\HAL\macros.h	100;"	d
TERN	.\Firmware\src\HAL\macros.h	189;"	d
TERN0	.\Firmware\src\HAL\macros.h	190;"	d
TERN1	.\Firmware\src\HAL\macros.h	191;"	d
TERN_	.\Firmware\src\HAL\macros.h	192;"	d
TEST	.\Firmware\src\HAL\macros.h	87;"	d
TEST32	.\Firmware\src\HAL\macros.h	97;"	d
THERMOCOUPLE_H	.\Firmware\lib\MAX6675_Thermocouple\src\Thermocouple.h	18;"	d
THERMO_CS	.\Firmware\src\HAL\megaatmega2560\user_pins.h	8;"	d
THERMO_SCK	.\Firmware\src\HAL\megaatmega2560\user_pins.h	7;"	d
THERMO_SO	.\Firmware\src\HAL\megaatmega2560\user_pins.h	9;"	d
THIRD	.\Firmware\src\HAL\macros.h	513;"	d
TOGGLE	.\Firmware\src\HAL\megaatmega2560\fastio.h	77;"	d
TRUNC	.\Firmware\src\HAL\macros.h	297;"	d
TXD	.\Firmware\src\HAL\megaatmega2560\fastio_1280.h	33;"	d
Thermocouple	.\Firmware\lib\MAX6675_Thermocouple\src\Thermocouple.h	/^class Thermocouple {$/;"	c
UINT16_T	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  UINT16_T = 17,$/;"	m	class:DataType
UINT16_T_GETTER	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  UINT16_T_GETTER = 217,$/;"	m	class:DataType
UINT32_T	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  UINT32_T = 33,$/;"	m	class:DataType
UINT32_T_GETTER	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  UINT32_T_GETTER = 233,$/;"	m	class:DataType
UINT8_T	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  UINT8_T = 9,$/;"	m	class:DataType
UINT8_T_GETTER	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  UINT8_T_GETTER = 209, BYTE_GETTER = 209,$/;"	m	class:DataType
UNEAR_ZERO	.\Firmware\src\HAL\macros.h	280;"	d
UNUSED	.\Firmware\src\HAL\macros.h	66;"	d
VERSION	.\Firmware\src\main.cpp	20;"	d	file:
WIND_LIM_SWITCH	.\Firmware\src\HAL\megaatmega2560\user_pins.h	13;"	d
WITHIN	.\Firmware\src\HAL\macros.h	225;"	d
WRITE	.\Firmware\src\HAL\megaatmega2560\fastio.h	76;"	d
XY	.\Firmware\src\HAL\macros.h	31;"	d
XYZ	.\Firmware\src\HAL\macros.h	30;"	d
XYZE	.\Firmware\src\HAL\macros.h	28;"	d
YIELD	.\Firmware\lib\AccelStepper\AccelStepper.h	274;"	d
YIELD	.\Firmware\lib\AccelStepper\AccelStepper.h	276;"	d
ZERO	.\Firmware\src\HAL\macros.h	233;"	d
_AXIS	.\Firmware\src\HAL\macros.h	33;"	d
_BOOL	.\Firmware\src\HAL\macros.h	540;"	d
_BTNEX_1	.\Firmware\src\HAL\macros.h	221;"	d
_BV	.\Firmware\src\HAL\macros.h	85;"	d
_BV	.\Firmware\src\HAL\macros.h	86;"	d
_BV32	.\Firmware\src\HAL\macros.h	96;"	d
_CAT	.\Firmware\src\HAL\macros.h	174;"	d
_DIS_1	.\Firmware\src\HAL\macros.h	184;"	d
_DO_1	.\Firmware\src\HAL\macros.h	154;"	d
_DO_10	.\Firmware\src\HAL\macros.h	163;"	d
_DO_11	.\Firmware\src\HAL\macros.h	164;"	d
_DO_12	.\Firmware\src\HAL\macros.h	165;"	d
_DO_13	.\Firmware\src\HAL\macros.h	166;"	d
_DO_14	.\Firmware\src\HAL\macros.h	167;"	d
_DO_15	.\Firmware\src\HAL\macros.h	168;"	d
_DO_2	.\Firmware\src\HAL\macros.h	155;"	d
_DO_3	.\Firmware\src\HAL\macros.h	156;"	d
_DO_4	.\Firmware\src\HAL\macros.h	157;"	d
_DO_5	.\Firmware\src\HAL\macros.h	158;"	d
_DO_6	.\Firmware\src\HAL\macros.h	159;"	d
_DO_7	.\Firmware\src\HAL\macros.h	160;"	d
_DO_8	.\Firmware\src\HAL\macros.h	161;"	d
_DO_9	.\Firmware\src\HAL\macros.h	162;"	d
_DO_N	.\Firmware\src\HAL\macros.h	170;"	d
_E0DIAG_	.\Firmware\src\HAL\macros.h	44;"	d
_E1DIAG_	.\Firmware\src\HAL\macros.h	45;"	d
_E2DIAG_	.\Firmware\src\HAL\macros.h	46;"	d
_E3DIAG_	.\Firmware\src\HAL\macros.h	47;"	d
_E4DIAG_	.\Firmware\src\HAL\macros.h	48;"	d
_E5DIAG_	.\Firmware\src\HAL\macros.h	49;"	d
_E6DIAG_	.\Firmware\src\HAL\macros.h	50;"	d
_E7DIAG_	.\Firmware\src\HAL\macros.h	51;"	d
_ENA_1	.\Firmware\src\HAL\macros.h	183;"	d
_END_OF_ARGUMENTS_	.\Firmware\src\HAL\macros.h	552;"	d
_FORCE_INLINE_	.\Firmware\src\HAL\macros.h	53;"	d
_IF_0	.\Firmware\src\HAL\macros.h	546;"	d
_IF_0_ELSE	.\Firmware\src\HAL\macros.h	549;"	d
_IF_1	.\Firmware\src\HAL\macros.h	545;"	d
_IF_1_ELSE	.\Firmware\src\HAL\macros.h	548;"	d
_IF_ELSE	.\Firmware\src\HAL\macros.h	543;"	d
_ISENA	.\Firmware\src\HAL\macros.h	181;"	d
_ISENA_	.\Firmware\src\HAL\macros.h	177;"	d
_ISENA_0x1	.\Firmware\src\HAL\macros.h	179;"	d
_ISENA_1	.\Firmware\src\HAL\macros.h	178;"	d
_ISENA_true	.\Firmware\src\HAL\macros.h	180;"	d
_IS_EXT	.\Firmware\src\HAL\megaatmega2560\fastio.cpp	35;"	d	file:
_IS_INPUT	.\Firmware\src\HAL\megaatmega2560\fastio.h	63;"	d
_IS_OUTPUT	.\Firmware\src\HAL\megaatmega2560\fastio.h	64;"	d
_JOIN_1	.\Firmware\src\HAL\macros.h	261;"	d
_LIST_N	.\Firmware\src\HAL\macros.h	257;"	d
_MAX	.\Firmware\src\HAL\macros.h	/^      template<class T, class ... Ts> static inline constexpr const T _MAX(T V, Ts... Vs) { return _MAX(V, _MAX(Vs...)); }$/;"	f
_MAX	.\Firmware\src\HAL\macros.h	440;"	d
_MAX_N	.\Firmware\src\HAL\macros.h	439;"	d
_MIN	.\Firmware\src\HAL\macros.h	/^      template<class T, class ... Ts> static inline constexpr const T _MIN(T V, Ts... Vs) { return _MIN(V, _MIN(Vs...)); }$/;"	f
_MIN	.\Firmware\src\HAL\macros.h	427;"	d
_MINMAX_H_	.\Firmware\src\HAL\macros.h	309;"	d
_MIN_N	.\Firmware\src\HAL\macros.h	426;"	d
_NOT_0	.\Firmware\src\HAL\macros.h	538;"	d
_NUM_ARGS	.\Firmware\src\HAL\macros.h	303;"	d
_O0	.\Firmware\src\HAL\macros.h	57;"	d
_O1	.\Firmware\src\HAL\macros.h	59;"	d
_O2	.\Firmware\src\HAL\macros.h	60;"	d
_O3	.\Firmware\src\HAL\macros.h	61;"	d
_Os	.\Firmware\src\HAL\macros.h	58;"	d
_PINEX_1	.\Firmware\src\HAL\macros.h	216;"	d
_RCASE	.\Firmware\src\HAL\megaatmega2560\fastio.cpp	138;"	d	file:
_READ	.\Firmware\src\HAL\megaatmega2560\fastio.h	43;"	d
_REPEAT	.\Firmware\src\HAL\macros.h	565;"	d
_REPEAT2	.\Firmware\src\HAL\macros.h	573;"	d
_RREPEAT	.\Firmware\src\HAL\macros.h	589;"	d
_RREPEAT2	.\Firmware\src\HAL\macros.h	595;"	d
_SET_COM	.\Firmware\src\HAL\megaatmega2560\fastio.h	217;"	d
_SET_COMnQ	.\Firmware\src\HAL\megaatmega2560\fastio.h	224;"	d
_SET_CS	.\Firmware\src\HAL\megaatmega2560\fastio.h	188;"	d
_SET_CS0	.\Firmware\src\HAL\megaatmega2560\fastio.h	189;"	d
_SET_CS1	.\Firmware\src\HAL\megaatmega2560\fastio.h	190;"	d
_SET_CS2	.\Firmware\src\HAL\megaatmega2560\fastio.h	192;"	d
_SET_CS2	.\Firmware\src\HAL\megaatmega2560\fastio.h	194;"	d
_SET_CS3	.\Firmware\src\HAL\megaatmega2560\fastio.h	196;"	d
_SET_CS4	.\Firmware\src\HAL\megaatmega2560\fastio.h	197;"	d
_SET_CS5	.\Firmware\src\HAL\megaatmega2560\fastio.h	198;"	d
_SET_CSn	.\Firmware\src\HAL\megaatmega2560\fastio.h	211;"	d
_SET_ICRn	.\Firmware\src\HAL\megaatmega2560\fastio.h	236;"	d
_SET_INPUT	.\Firmware\src\HAL\megaatmega2560\fastio.h	60;"	d
_SET_OCRnQ	.\Firmware\src\HAL\megaatmega2560\fastio.h	230;"	d
_SET_OUTPUT	.\Firmware\src\HAL\megaatmega2560\fastio.h	61;"	d
_SET_WGM	.\Firmware\src\HAL\megaatmega2560\fastio.h	175;"	d
_SET_WGMnQ	.\Firmware\src\HAL\megaatmega2560\fastio.h	181;"	d
_TERN	.\Firmware\src\HAL\macros.h	193;"	d
_TOGGLE	.\Firmware\src\HAL\megaatmega2560\fastio.h	58;"	d
_UNUSED	.\Firmware\src\HAL\macros.h	56;"	d
_WCASE	.\Firmware\src\HAL\megaatmega2560\fastio.cpp	38;"	d	file:
_WRITE	.\Firmware\src\HAL\megaatmega2560\fastio.h	56;"	d
_WRITE_C	.\Firmware\src\HAL\megaatmega2560\fastio.h	50;"	d
_WRITE_NC	.\Firmware\src\HAL\megaatmega2560\fastio.h	45;"	d
_XDIAG_	.\Firmware\src\HAL\macros.h	41;"	d
_XMAX_	.\Firmware\src\HAL\macros.h	38;"	d
_XMIN_	.\Firmware\src\HAL\macros.h	35;"	d
_YDIAG_	.\Firmware\src\HAL\macros.h	42;"	d
_YMAX_	.\Firmware\src\HAL\macros.h	39;"	d
_YMIN_	.\Firmware\src\HAL\macros.h	36;"	d
_ZDIAG_	.\Firmware\src\HAL\macros.h	43;"	d
_ZMAX_	.\Firmware\src\HAL\macros.h	40;"	d
_ZMIN_	.\Firmware\src\HAL\macros.h	37;"	d
__DO_N	.\Firmware\src\HAL\macros.h	169;"	d
__MAX_N	.\Firmware\src\HAL\macros.h	438;"	d
__MIN_N	.\Firmware\src\HAL\macros.h	425;"	d
__REPEAT	.\Firmware\src\HAL\macros.h	570;"	d
__REPEAT2	.\Firmware\src\HAL\macros.h	578;"	d
__RREPEAT	.\Firmware\src\HAL\macros.h	594;"	d
__RREPEAT2	.\Firmware\src\HAL\macros.h	600;"	d
__TERN	.\Firmware\src\HAL\macros.h	194;"	d
___TERN	.\Firmware\src\HAL\macros.h	195;"	d
__has_include	.\Firmware\src\HAL\macros.h	24;"	d
_a0	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_a_hello_menu_8ino-example.html	/^<div class="fragment"><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * LiquidMenu library - hello_menu.ino<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * This is the get started example demonstrating how to create<\/span><\/div><div class="line"><span class="comment"> * a menu of two screens with dynamically changing information.<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * The first screen shows some static text. The second screen<\/span><\/div><div class="line"><span class="comment"> * shows the reading of analog pin A1. To display a changing<\/span><\/div><div class="line"><span class="comment"> * variable on the LCD, simply put the variable in the LiquidLine<\/span><\/div><div class="line"><span class="comment"> * constructor. In this case the LiquidLine object is &quot;analogReading_line&quot;<\/span><\/div><div class="line"><span class="comment"> * and the variable is &quot;analogReading&quot;. This line is on the second<\/span><\/div><div class="line"><span class="comment"> * screen. The value of the analog pin is read every second and if<\/span><\/div><div class="line"><span class="comment"> * it has changed the display is updated with the new value. The<\/span><\/div><div class="line"><span class="comment"> * menu cycles through its two screens every five seconds.<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * The circuit:<\/span><\/div><div class="line"><span class="comment"> * https:\/\/github.com\/VasilKalchev\/LiquidMenu\/blob\/master\/examples\/A_hello_menu\/hello_menu.png<\/span><\/div><div class="line"><span class="comment"> * - LCD RS pin to Arduino pin 12<\/span><\/div><div class="line"><span class="comment"> * - LCD E pin to Arduino pin 11<\/span><\/div><div class="line"><span class="comment"> * - LCD D4 pin to Arduino pin 5<\/span><\/div><div class="line"><span class="comment"> * - LCD D5 pin to Arduino pin 4<\/span><\/div><div class="line"><span class="comment"> * - LCD D6 pin to Arduino pin 3<\/span><\/div><div class="line"><span class="comment"> * - LCD D7 pin to Arduino pin 2<\/span><\/div><div class="line"><span class="comment"> * - LCD R\/W pin to ground<\/span><\/div><div class="line"><span class="comment"> * - LCD VSS pin to ground<\/span><\/div><div class="line"><span class="comment"> * - LCD VDD pin to 5V<\/span><\/div><div class="line"><span class="comment"> * - 10k ohm potentiometer: ends to 5V and ground, wiper to LCD V0<\/span><\/div><div class="line"><span class="comment"> * - 150 ohm resistor from 5V to LCD Anode<\/span><\/div><div class="line"><span class="comment"> * - LCD Cathode to ground<\/span><\/div><div class="line"><span class="comment"> * - ----<\/span><\/div><div class="line"><span class="comment"> * - some analog input to Arduino pin A1 (unconnected also works)<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * Created July 24, 2016<\/span><\/div><div class="line"><span class="comment"> * by Vasil Kalchev<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * https:\/\/github.com\/VasilKalchev\/LiquidMenu<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ The LCD library<\/span><\/div><div class="line"><span class="preprocessor">#include &lt;LiquidCrystal.h&gt;<\/span><\/div><div class="line"><span class="comment">\/\/ The menu wrapper library<\/span><\/div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="_liquid_menu_8h.html">LiquidMenu.h<\/a>&gt;<\/span><\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Pin mapping for the display:<\/span><\/div><div class="line"><span class="keyword">const<\/span> byte LCD_RS = 12;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_E = 11;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D4 = 5;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D5 = 4;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D6 = 3;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D7 = 2;<\/div><div class="line"><span class="comment">\/\/LCD R\/W pin to ground<\/span><\/div><div class="line"><span class="comment">\/\/10K potentiometer wiper to VO<\/span><\/div><div class="line">LiquidCrystal lcd(LCD_RS, LCD_E, LCD_D4, LCD_D5, LCD_D6, LCD_D7);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * Variable &#39;analogReading&#39; is later configured to<\/span><\/div><div class="line"><span class="comment"> * be printed on the display. &#39;lastAnalogReading&#39;<\/span><\/div><div class="line"><span class="comment"> * is used to check if the variable has changed.<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><span class="keyword">const<\/span> byte analogPin = A1;<\/div><div class="line"><span class="keywordtype">unsigned<\/span> <span class="keywordtype">short<\/span> analogReading = 0;<\/div><div class="line"><span class="keywordtype">unsigned<\/span> <span class="keywordtype">short<\/span> lastAnalogReading = 0;<\/div><div class="line"><\/div><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * Variables used for periodic execution of code. The first one is the period<\/span><\/div><div class="line"><span class="comment"> * in milliseconds and the second one is the last time the code executed.<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> period_check = 1000;<\/div><div class="line"><span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> lastMs_check = 0;<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> period_nextScreen = 5000;<\/div><div class="line"><span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> lastMs_nextScreen = 0;<\/div><div class="line"><\/div><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * LiquidLine objects represent a single line of text and\/or variables<\/span><\/div><div class="line"><span class="comment"> * on the display. The first two parameters are the column and row from<\/span><\/div><div class="line"><span class="comment"> * which the line starts, the rest of the parameters are the text and\/or<\/span><\/div><div class="line"><span class="comment"> * variables that will be printed on the display. They can be up to four.<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><span class="comment">\/\/ Here the line is set to column 1, row 0 and will print the passed<\/span><\/div><div class="line"><span class="comment">\/\/ string and the passed variable.<\/span><\/div><div class="line"><a name="_a0"><\/a><a class="code" href="class_liquid_line.html">LiquidLine<\/a> welcome_line1(1, 0, <span class="stringliteral">&quot;LiquidMenu &quot;<\/span>, <a name="a1"><\/a><a class="code" href="_liquid_menu_8h.html#a7189c07575adbb1070c89dcd0ab5e272">LIQUIDMENU_VERSION<\/a>);<\/div><div class="line"><span class="comment">\/\/ Here the column is 3, the row is 1 and the string is &quot;Hello Menu&quot;.<\/span><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> welcome_line2(3, 1, <span class="stringliteral">&quot;Hello Menu&quot;<\/span>);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * LiquidScreen objects represent a single screen. A screen is made of<\/span><\/div><div class="line"><span class="comment"> * one or more LiquidLine objects. Up to four LiquidLine objects can<\/span><\/div><div class="line"><span class="comment"> * be inserted from here, but more can be added later in setup() using<\/span><\/div><div class="line"><span class="comment"> * welcome_screen.add_line(someLine_object);.<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><span class="comment">\/\/ Here the LiquidLine objects are the two objects from above.<\/span><\/div><div class="line"><a name="_a2"><\/a><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> welcome_screen(welcome_line1, welcome_line2);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Here there is not only a text string but also a changing integer variable.<\/span><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> analogReading_line(0, 0, <span class="stringliteral">&quot;Analog: &quot;<\/span>, analogReading);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> secondary_screen(analogReading_line);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * The LiquidMenu object combines the LiquidScreen objects to form the<\/span><\/div><div class="line"><span class="comment"> * menu. Here it is only instantiated and the screens are added later<\/span><\/div><div class="line"><span class="comment"> * using menu.add_screen(someScreen_object);. This object is used to<\/span><\/div><div class="line"><span class="comment"> * control the menu, for example: menu.next_screen(), menu.switch_focus()...<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><a name="_a3"><\/a><a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> menu(lcd);<\/div><div class="line"><\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> setup() {<\/div><div class="line">  Serial.begin(250000);<\/div><div class="line"><\/div><div class="line">  pinMode(analogPin, INPUT);<\/div><div class="line"><\/div><div class="line">  lcd.begin(16, 2);<\/div><div class="line"><\/div><div class="line">  <span class="comment">\/\/ This is the method used to add a screen object to the menu.<\/span><\/div><div class="line">  menu.add_screen(welcome_screen);<\/div><div class="line">  menu.add_screen(secondary_screen);<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> loop() {<\/div><div class="line">  <span class="comment">\/\/ Periodic reading of the analog pin.<\/span><\/div><div class="line">  <span class="keywordflow">if<\/span> (millis() - lastMs_check &gt; period_check) {<\/div><div class="line">    lastMs_check = millis();<\/div><div class="line">    analogReading = analogRead(analogPin);<\/div><div class="line">    <span class="comment">\/*<\/span><\/div><div class="line"><span class="comment">     * Check if the analog value have changed<\/span><\/div><div class="line"><span class="comment">     * and update the display if it has.<\/span><\/div><div class="line"><span class="comment">     *\/<\/span><\/div><div class="line">    <span class="keywordflow">if<\/span> (analogReading != lastAnalogReading) {<\/div><div class="line">      lastAnalogReading = analogReading;<\/div><div class="line">      menu.update();<\/div><div class="line">    }<\/div><div class="line">  }<\/div><div class="line"><\/div><div class="line">  <span class="comment">\/\/ Periodic switching to the next screen.<\/span><\/div><div class="line">  <span class="keywordflow">if<\/span> (millis() - lastMs_nextScreen &gt; period_nextScreen) {<\/div><div class="line">    lastMs_nextScreen = millis();<\/div><div class="line">    menu.next_screen();<\/div><div class="line">  }<\/div><div class="line">}<\/div><\/div><!-- fragment --> <\/div><!-- contents -->$/;"	a
_a0	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_b_serial_menu_8ino-example.html	/^<div class="fragment"><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * LiquidMenu library - serial_menu.ino<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * This example uses the serial communication to execute commands.<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * The available commands will be printed on the serial monitor.<\/span><\/div><div class="line"><span class="comment"> * This example uses attached callback functions which are explained<\/span><\/div><div class="line"><span class="comment"> * in the functions_menu.ino example.<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * The circuit:<\/span><\/div><div class="line"><span class="comment"> * https:\/\/github.com\/VasilKalchev\/LiquidMenu\/blob\/master\/examples\/B_serial_menu\/serial_menu.png<\/span><\/div><div class="line"><span class="comment"> * - LCD RS pin to Arduino pin 12<\/span><\/div><div class="line"><span class="comment"> * - LCD E pin to Arduino pin 11<\/span><\/div><div class="line"><span class="comment"> * - LCD D4 pin to Arduino pin 5<\/span><\/div><div class="line"><span class="comment"> * - LCD D5 pin to Arduino pin 4<\/span><\/div><div class="line"><span class="comment"> * - LCD D6 pin to Arduino pin 3<\/span><\/div><div class="line"><span class="comment"> * - LCD D7 pin to Arduino pin 2<\/span><\/div><div class="line"><span class="comment"> * - LCD R\/W pin to ground<\/span><\/div><div class="line"><span class="comment"> * - LCD VSS pin to ground<\/span><\/div><div class="line"><span class="comment"> * - LCD VDD pin to 5V<\/span><\/div><div class="line"><span class="comment"> * - 10k ohm potentiometer: ends to 5V and ground, wiper to LCD V0<\/span><\/div><div class="line"><span class="comment"> * - 150 ohm resistor from 5V to LCD Anode<\/span><\/div><div class="line"><span class="comment"> * - LCD Cathode to ground<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * Created July 24, 2016<\/span><\/div><div class="line"><span class="comment"> * by Vasil Kalchev<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * https:\/\/github.com\/VasilKalchev\/LiquidMenu<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><\/div><div class="line"><span class="preprocessor">#include &lt;LiquidCrystal.h&gt;<\/span><\/div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="_liquid_menu_8h.html">LiquidMenu.h<\/a>&gt;<\/span><\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Pin mapping for the display<\/span><\/div><div class="line"><span class="keyword">const<\/span> byte LCD_RS = 12;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_E = 11;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D4 = 5;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D5 = 4;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D6 = 3;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D7 = 2;<\/div><div class="line"><span class="comment">\/\/LCD R\/W pin to ground<\/span><\/div><div class="line"><span class="comment">\/\/10K potentiometer wiper to VO<\/span><\/div><div class="line">LiquidCrystal lcd(LCD_RS, LCD_E, LCD_D4, LCD_D5, LCD_D6, LCD_D7);<\/div><div class="line"><\/div><div class="line"><\/div><div class="line"><a name="_a0"><\/a><a class="code" href="class_liquid_line.html">LiquidLine<\/a> welcome_line1(1, 0, <span class="stringliteral">&quot;LiquidMenu &quot;<\/span>, <a name="a1"><\/a><a class="code" href="_liquid_menu_8h.html#a7189c07575adbb1070c89dcd0ab5e272">LIQUIDMENU_VERSION<\/a>);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> welcome_line2(1, 1, <span class="stringliteral">&quot;Serial example&quot;<\/span>);<\/div><div class="line"><a name="_a2"><\/a><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> welcome_screen(welcome_line1, welcome_line2);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line21(4, 0, <span class="stringliteral">&quot;Screen 2&quot;<\/span>);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> type_line(4, 1, <span class="stringliteral">&quot;type...&quot;<\/span>);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> screen2(line21, type_line);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line31(4, 0, <span class="stringliteral">&quot;Screen 3&quot;<\/span>);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> screen3(line31, type_line);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line41(4, 0, <span class="stringliteral">&quot;Screen 4&quot;<\/span>);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> screen4(line41, type_line);<\/div><div class="line"><\/div><div class="line"><a name="_a3"><\/a><a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> menu(lcd, welcome_screen, screen2, screen3, screen4);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * This function will be attached to one or more LiquidLine<\/span><\/div><div class="line"><span class="comment"> * objects and will be called when the line is focused and<\/span><\/div><div class="line"><span class="comment"> * bool LiquidMenu::call_function(byte number) is called with<\/span><\/div><div class="line"><span class="comment"> * number - the number specified when attaching the function.<\/span><\/div><div class="line"><span class="comment"> * More on this in the function_menu.ino example.<\/span><\/div><div class="line"><span class="comment">*\/<\/span><\/div><div class="line"><span class="keywordtype">void<\/span> callback_function() {<\/div><div class="line">  Serial.println(F(<span class="stringliteral">&quot;You called the callback function.&quot;<\/span>));<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> setup() {<\/div><div class="line">  Serial.begin(250000);<\/div><div class="line"><\/div><div class="line">  lcd.begin(16, 2);<\/div><div class="line"><\/div><div class="line">  <span class="comment">\/\/ Here we attach the function defined earlier to four LiquidLine objects.<\/span><\/div><div class="line">  line21.attach_function(1, callback_function);<\/div><div class="line">  line31.attach_function(1, callback_function);<\/div><div class="line">  line41.attach_function(1, callback_function);<\/div><div class="line">  type_line.attach_function(1, callback_function);<\/div><div class="line"><\/div><div class="line">  menu.update();<\/div><div class="line"><\/div><div class="line">  Serial.print(F(<span class="stringliteral">&quot;LiquidMenu &quot;<\/span>)); Serial.print(<a class="code" href="_liquid_menu_8h.html#a7189c07575adbb1070c89dcd0ab5e272">LIQUIDMENU_VERSION<\/a>); Serial.println(F(<span class="stringliteral">&quot; - Serial example:&quot;<\/span>));<\/div><div class="line">  Serial.println(F(<span class="stringliteral">&quot;To navigate the menu type &#39;menu.next_screen()&#39; or &#39;menu.previous_screen()&#39;.&quot;<\/span>));<\/div><div class="line">  Serial.println(F(<span class="stringliteral">&quot;To switch focus type &#39;menu.switch_focus()&#39;.&quot;<\/span>));<\/div><div class="line">  Serial.println(F(<span class="stringliteral">&quot;To call the callback function type &#39;menu.call_function(1)&#39;.&quot;<\/span>));<\/div><div class="line">  Serial.println(F(<span class="stringliteral">&quot;To adjust the focus position type &#39;menu.set_focusPosition(Position::LEFT)&#39;&quot;<\/span>));<\/div><div class="line">  Serial.println(F(<span class="stringliteral">&quot;  or &#39;menu.set_focusPosition(Position::RIGHT)&#39;.&quot;<\/span>));<\/div><div class="line">  Serial.println(F(<span class="stringliteral">&quot;To update the display type &#39;menu.update()&#39;.&quot;<\/span>)); Serial.println();<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> loop() {<\/div><div class="line">  <span class="comment">\/\/ This handles the serial input.<\/span><\/div><div class="line">  <span class="keywordflow">while<\/span> (Serial.available() &gt; 0) {<\/div><div class="line">    String command = Serial.readStringUntil(<span class="charliteral">&#39;\\0&#39;<\/span>);<\/div><div class="line">    <span class="keywordflow">if<\/span> (command == <span class="stringliteral">&quot;menu.next_screen()&quot;<\/span>) {<\/div><div class="line">      Serial.println(command);<\/div><div class="line">      menu.next_screen();<\/div><div class="line">    } <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> (command == <span class="stringliteral">&quot;menu.previous_screen()&quot;<\/span>) {<\/div><div class="line">      Serial.println(command);<\/div><div class="line">      menu.previous_screen();<\/div><div class="line">    } <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> (command == <span class="stringliteral">&quot;menu.switch_focus()&quot;<\/span>) {<\/div><div class="line">      Serial.println(command);<\/div><div class="line">      menu.switch_focus(); <span class="comment">\/\/ switches focus to the next line<\/span><\/div><div class="line">      <span class="comment">\/\/ focus is used with functions (see &#39;functions_menu&#39; example)<\/span><\/div><div class="line">    } <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> (command == <span class="stringliteral">&quot;menu.call_function(1)&quot;<\/span>) {<\/div><div class="line">      Serial.println(command);<\/div><div class="line">      <span class="comment">\/\/ The attached function is called.<\/span><\/div><div class="line">      menu.call_function(1);<\/div><div class="line">    } <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> (command == <span class="stringliteral">&quot;menu.set_focusPosition(Position::LEFT)&quot;<\/span>) {<\/div><div class="line">      Serial.println(command);<\/div><div class="line">      <span class="comment">\/\/ this function sets the focus position<\/span><\/div><div class="line">      menu.set_focusPosition(Position::LEFT);<\/div><div class="line">    } <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> (command == <span class="stringliteral">&quot;menu.set_focusPosition(Position::RIGHT)&quot;<\/span>) {<\/div><div class="line">      Serial.println(command);<\/div><div class="line">      menu.set_focusPosition(Position::RIGHT);<\/div><div class="line">    } <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> (command == <span class="stringliteral">&quot;menu.update()&quot;<\/span>) {<\/div><div class="line">      Serial.println(command);<\/div><div class="line">      menu.update();<\/div><div class="line">    } <span class="keywordflow">else<\/span> {<\/div><div class="line">      Serial.print(command); Serial.println(F(<span class="stringliteral">&quot; - unknown command&quot;<\/span>));<\/div><div class="line">    }<\/div><div class="line">    menu.update();<\/div><div class="line">  }<\/div><div class="line">}<\/div><\/div><!-- fragment --> <\/div><!-- contents -->$/;"	a
_a0	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_c_functions_menu_8ino-example.html	/^<div class="fragment"><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * LiquidMenu library - functions_menu.ino<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * This example demonstrates how to attach functions to the<\/span><\/div><div class="line"><span class="comment"> * &quot;lines&quot; in the menu.<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * Attaching functions to the different &quot;lines&quot; in the menu makes it<\/span><\/div><div class="line"><span class="comment"> * possible to execute an action through the menu (e.g. dimming an LED,<\/span><\/div><div class="line"><span class="comment"> * adjusting preferences...). To attach a function to a line you need<\/span><\/div><div class="line"><span class="comment"> * to create with signature &quot;void functionName(void)&quot;. After creating it,<\/span><\/div><div class="line"><span class="comment"> * the function is ready to be attached to a line. To dothat call bool<\/span><\/div><div class="line"><span class="comment"> * LiquidLine::attach_function(uint8_t number, void (*function)(void)).<\/span><\/div><div class="line"><span class="comment"> * LiquidLine is the line object you wish to attach the function to,<\/span><\/div><div class="line"><span class="comment"> * number is the &quot;id&quot; of the function for that line, void (*function)(void)<\/span><\/div><div class="line"><span class="comment"> * is just the name of the function without the &quot;()&quot;. The &quot;id&quot; of the function<\/span><\/div><div class="line"><span class="comment"> * makes possible attaching multiple functions to a single line. An example use<\/span><\/div><div class="line"><span class="comment"> * of multiple functions on a single line is for incrementing or decrementing<\/span><\/div><div class="line"><span class="comment"> * some value (e.g. dimming an LED). It is convenient to attach all the different<\/span><\/div><div class="line"><span class="comment"> * incrementing functions (e.g. increase_brightness(), increase_volume()) to the<\/span><\/div><div class="line"><span class="comment"> * different lines (e.g. LED brightness: 5, Sound volume: 10) using the same id<\/span><\/div><div class="line"><span class="comment"> * (e.g. 1). Same goes for the decrementing functions (e.g. LED brightness: 5 (line)<\/span><\/div><div class="line"><span class="comment"> * with attached function decrease_brightness() (function) with id 2,<\/span><\/div><div class="line"><span class="comment"> * Sound volume: 10 (line) with attached function decrease_volume() (function) with id 2).<\/span><\/div><div class="line"><span class="comment"> * Similar functions should be attached to their corresponding lines with the same &quot;id&quot;,<\/span><\/div><div class="line"><span class="comment"> * because then they can be called from the same event (e.g. pressing button &quot;UP&quot;<\/span><\/div><div class="line"><span class="comment"> * calls the incrementing function of whatever the focused line is).<\/span><\/div><div class="line"><span class="comment"> * This example has a line that shows the current PWM of the LED and lines<\/span><\/div><div class="line"><span class="comment"> * that allow a fade or blink loop to be turned ON\/OFF and configured.<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * The circuit:<\/span><\/div><div class="line"><span class="comment"> * https:\/\/github.com\/VasilKalchev\/LiquidMenu\/blob\/master\/examples\/functions_menu\/C_functions_menu.png<\/span><\/div><div class="line"><span class="comment"> * - LCD RS pin to Arduino pin 12<\/span><\/div><div class="line"><span class="comment"> * - LCD E pin to Arduino pin 11<\/span><\/div><div class="line"><span class="comment"> * - LCD D4 pin to Arduino pin 5<\/span><\/div><div class="line"><span class="comment"> * - LCD D5 pin to Arduino pin 4<\/span><\/div><div class="line"><span class="comment"> * - LCD D6 pin to Arduino pin 3<\/span><\/div><div class="line"><span class="comment"> * - LCD D7 pin to Arduino pin 2<\/span><\/div><div class="line"><span class="comment"> * - LCD R\/W pin to ground<\/span><\/div><div class="line"><span class="comment"> * - LCD VSS pin to ground<\/span><\/div><div class="line"><span class="comment"> * - LCD VDD pin to 5V<\/span><\/div><div class="line"><span class="comment"> * - 10k ohm potentiometer: ends to 5V and ground, wiper to LCD V0<\/span><\/div><div class="line"><span class="comment"> * - 150 ohm resistor from 5V to LCD Anode<\/span><\/div><div class="line"><span class="comment"> * - LCD Cathode to ground<\/span><\/div><div class="line"><span class="comment"> * - ----<\/span><\/div><div class="line"><span class="comment"> * - Button (left) to Arduino pin A0 and ground<\/span><\/div><div class="line"><span class="comment"> * - Button (right) to Arduino pin 7 and ground<\/span><\/div><div class="line"><span class="comment"> * - Button (up) to Arduino pin 8 and ground<\/span><\/div><div class="line"><span class="comment"> * - Button (down) to Arduino pin 9 and ground<\/span><\/div><div class="line"><span class="comment"> * - Button (enter) to Arduino pin 10 and ground<\/span><\/div><div class="line"><span class="comment"> * - A PWM controlled device (LED...) to Arduino pin 6<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * Created July 24, 2016<\/span><\/div><div class="line"><span class="comment"> * by Vasil Kalchev<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * https:\/\/github.com\/VasilKalchev\/LiquidMenu<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><\/div><div class="line"><span class="preprocessor">#include &lt;LiquidCrystal.h&gt;<\/span><\/div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="_liquid_menu_8h.html">LiquidMenu.h<\/a>&gt;<\/span><\/div><div class="line"><span class="preprocessor">#include &quot;Button.h&quot;<\/span><\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Pin mapping for the display<\/span><\/div><div class="line"><span class="keyword">const<\/span> byte LCD_RS = 12;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_E = 11;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D4 = 5;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D5 = 4;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D6 = 3;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D7 = 2;<\/div><div class="line"><span class="comment">\/\/LCD R\/W pin to ground<\/span><\/div><div class="line"><span class="comment">\/\/10K potentiometer wiper to VO<\/span><\/div><div class="line">LiquidCrystal lcd(LCD_RS, LCD_E, LCD_D4, LCD_D5, LCD_D6, LCD_D7);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ This variable can be passed to the LiquidMenu object to set the starting screen.<\/span><\/div><div class="line"><span class="keyword">const<\/span> byte startingScreen = 2;<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Button objects instantiation<\/span><\/div><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * The Button class is not a part of the LiquidMenu library. The first<\/span><\/div><div class="line"><span class="comment"> * parameter is the button&#39;s pin, the second enables or disables the<\/span><\/div><div class="line"><span class="comment"> * internal pullup resistor (not required) and the third is the debounce<\/span><\/div><div class="line"><span class="comment"> * time (not required).<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">bool<\/span> pullup = <span class="keyword">true<\/span>;<\/div><div class="line">Button left(A0, pullup);<\/div><div class="line">Button right(7, pullup);<\/div><div class="line">Button up(8, pullup);<\/div><div class="line">Button down(9, pullup);<\/div><div class="line">Button enter(10, pullup);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * An enumerator can be used for the callback functions. It sets the number<\/span><\/div><div class="line"><span class="comment"> * for similar functions. Later when a function is attached it can be passed<\/span><\/div><div class="line"><span class="comment"> * with this enum rather than a magic number.<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><span class="comment">\/\/ There are two types of functions for this example, one that increases some<\/span><\/div><div class="line"><span class="comment">\/\/ value and one that decreases it.<\/span><\/div><div class="line"><span class="keyword">enum<\/span> FunctionTypes {<\/div><div class="line">  increase = 1,<\/div><div class="line">  decrease = 2,<\/div><div class="line">};<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ These are the pin definitions and variables for their PWM state.<\/span><\/div><div class="line"><span class="keyword">const<\/span> byte led = 6;<\/div><div class="line">byte led_level = 0;<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Variables used for setting &quot;preferences&quot;.<\/span><\/div><div class="line"><span class="keywordtype">bool<\/span> isFading = <span class="keyword">false<\/span>;<\/div><div class="line"><span class="keywordtype">char<\/span>* isFading_text;<\/div><div class="line"><span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> fadePeriod = 100;<\/div><div class="line"><span class="keywordtype">bool<\/span> isBlinking = <span class="keyword">false<\/span>;<\/div><div class="line"><span class="keywordtype">char<\/span>* isBlinking_text;<\/div><div class="line"><span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> blinkPeriod = 1000;<\/div><div class="line"><\/div><div class="line"><\/div><div class="line"><a name="_a0"><\/a><a class="code" href="class_liquid_line.html">LiquidLine<\/a> welcome_line1(1, 0, <span class="stringliteral">&quot;LiquidMenu &quot;<\/span>, <a name="a1"><\/a><a class="code" href="_liquid_menu_8h.html#a7189c07575adbb1070c89dcd0ab5e272">LIQUIDMENU_VERSION<\/a>);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> welcome_line2(1, 1, <span class="stringliteral">&quot;Functions ex.&quot;<\/span>);<\/div><div class="line"><a name="_a2"><\/a><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> welcome_screen(welcome_line1, welcome_line2);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> ledTitleLine(6, 0, <span class="stringliteral">&quot;LED&quot;<\/span>);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> led_line(4, 1, <span class="stringliteral">&quot;Level: &quot;<\/span>, led_level);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> led_screen(ledTitleLine, led_line);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> fade_line(0, 0, <span class="stringliteral">&quot;Fade - &quot;<\/span>, isFading_text);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> fadePeriod_line(0, 1, <span class="stringliteral">&quot;Period: &quot;<\/span>, fadePeriod, <span class="stringliteral">&quot;ms&quot;<\/span>);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> fade_screen(fade_line, fadePeriod_line);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> blink_line(0, 0, <span class="stringliteral">&quot;Blink - &quot;<\/span>, isBlinking_text);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> blinkPeriod_line(0, 1, <span class="stringliteral">&quot;Period: &quot;<\/span>, blinkPeriod, <span class="stringliteral">&quot;ms&quot;<\/span>);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> blink_screen(blink_line, blinkPeriod_line);<\/div><div class="line"><\/div><div class="line"><a name="_a3"><\/a><a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> menu(lcd, startingScreen);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Callback functions<\/span><\/div><div class="line"><span class="keywordtype">void<\/span> increase_led_level() {<\/div><div class="line">  <span class="keywordflow">if<\/span> (led_level &lt; 225) {<\/div><div class="line">    led_level += 25;<\/div><div class="line">  } <span class="keywordflow">else<\/span> {<\/div><div class="line">    led_level = 0;<\/div><div class="line">  }<\/div><div class="line">  analogWrite(led, led_level);<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> decrease_led_level() {<\/div><div class="line">  <span class="keywordflow">if<\/span> (led_level &gt; 25) {<\/div><div class="line">    led_level -= 25;<\/div><div class="line">  } <span class="keywordflow">else<\/span> {<\/div><div class="line">    led_level = 250;<\/div><div class="line">  }<\/div><div class="line">  analogWrite(led, led_level);<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> fade_switch() {<\/div><div class="line">  led_off();<\/div><div class="line">  <span class="keywordflow">if<\/span> (isFading == <span class="keyword">true<\/span>) {<\/div><div class="line">    isFading = <span class="keyword">false<\/span>;<\/div><div class="line">    isFading_text = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot;OFF&quot;<\/span>;<\/div><div class="line">  } <span class="keywordflow">else<\/span> {<\/div><div class="line">    isFading = <span class="keyword">true<\/span>;<\/div><div class="line">    isFading_text = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot;ON&quot;<\/span>;<\/div><div class="line">    isBlinking = <span class="keyword">false<\/span>;<\/div><div class="line">    isBlinking_text = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot;OFF&quot;<\/span>;<\/div><div class="line">  }<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> increase_fadePeriod() {<\/div><div class="line">  <span class="keywordflow">if<\/span> (fadePeriod &lt; 3000) {<\/div><div class="line">    fadePeriod += 10;<\/div><div class="line">  }<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> decrease_fadePeriod() {<\/div><div class="line">  <span class="keywordflow">if<\/span> (fadePeriod &gt; 10) {<\/div><div class="line">    fadePeriod -= 10;<\/div><div class="line">  }<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> blink_switch() {<\/div><div class="line">  led_off();<\/div><div class="line">  <span class="keywordflow">if<\/span> (isBlinking == <span class="keyword">true<\/span>) {<\/div><div class="line">    isBlinking = <span class="keyword">false<\/span>;<\/div><div class="line">    isBlinking_text = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot;OFF&quot;<\/span>;<\/div><div class="line">  } <span class="keywordflow">else<\/span> {<\/div><div class="line">    isBlinking = <span class="keyword">true<\/span>;<\/div><div class="line">    isBlinking_text = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot;ON&quot;<\/span>;<\/div><div class="line">    isFading = <span class="keyword">false<\/span>;<\/div><div class="line">    isFading_text = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot;OFF&quot;<\/span>;<\/div><div class="line">  }<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> increase_blinkPeriod() {<\/div><div class="line">  <span class="keywordflow">if<\/span> (blinkPeriod &lt; 3000) {<\/div><div class="line">    blinkPeriod += 50;<\/div><div class="line">  }<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> decrease_blinkPeriod() {<\/div><div class="line">  <span class="keywordflow">if<\/span> (blinkPeriod &gt; 50) {<\/div><div class="line">    blinkPeriod -= 50;<\/div><div class="line">  }<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> led_off() {<\/div><div class="line">  led_level = 0;<\/div><div class="line">  analogWrite(led, led_level);<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Checks all the buttons.<\/span><\/div><div class="line"><span class="keywordtype">void<\/span> buttonsCheck() {<\/div><div class="line">  <span class="keywordflow">if<\/span> (right.check() == LOW) {<\/div><div class="line">    menu.next_screen();<\/div><div class="line">  }<\/div><div class="line">  <span class="keywordflow">if<\/span> (left.check() == LOW) {<\/div><div class="line">    menu.previous_screen();<\/div><div class="line">  }<\/div><div class="line">  <span class="keywordflow">if<\/span> (up.check() == LOW) {<\/div><div class="line">    <span class="comment">\/\/ Calls the function identified with<\/span><\/div><div class="line">    <span class="comment">\/\/ increase or 1 for the focused line.<\/span><\/div><div class="line">    menu.call_function(increase);<\/div><div class="line">  }<\/div><div class="line">  <span class="keywordflow">if<\/span> (down.check() == LOW) {<\/div><div class="line">    menu.call_function(decrease);<\/div><div class="line">  }<\/div><div class="line">  <span class="keywordflow">if<\/span> (enter.check() == LOW) {<\/div><div class="line">    <span class="comment">\/\/ Switches focus to the next line.<\/span><\/div><div class="line">    menu.switch_focus();<\/div><div class="line">  }<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ The fading function.<\/span><\/div><div class="line"><span class="keywordtype">void<\/span> fade() {<\/div><div class="line">  <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> goingUp = <span class="keyword">true<\/span>;<\/div><div class="line">  <span class="keywordflow">if<\/span> (goingUp) {<\/div><div class="line">    led_level += 25;<\/div><div class="line">  } <span class="keywordflow">else<\/span> {<\/div><div class="line">    led_level -= 25;<\/div><div class="line">  }<\/div><div class="line">  <span class="keywordflow">if<\/span> (led_level &gt; 225) {<\/div><div class="line">    goingUp = <span class="keyword">false<\/span>;<\/div><div class="line">    led_level = 250;<\/div><div class="line">  }<\/div><div class="line">  <span class="keywordflow">if<\/span> (led_level &lt; 25 &amp;&amp; goingUp == <span class="keyword">false<\/span>) {<\/div><div class="line">    goingUp = <span class="keyword">true<\/span>;<\/div><div class="line">    led_level = 0;<\/div><div class="line">  }<\/div><div class="line">  analogWrite(led, led_level);<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ The blinking function.<\/span><\/div><div class="line"><span class="keywordtype">void<\/span> blink() {<\/div><div class="line">  <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> blinkState = LOW;<\/div><div class="line">  <span class="keywordflow">if<\/span> (blinkState == LOW) {<\/div><div class="line">    blinkState = HIGH;<\/div><div class="line">    led_level = 255;<\/div><div class="line">  } <span class="keywordflow">else<\/span> {<\/div><div class="line">    blinkState = LOW;<\/div><div class="line">    led_level = 0;<\/div><div class="line">  }<\/div><div class="line">  analogWrite(led, led_level);<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> setup() {<\/div><div class="line">  Serial.begin(250000);<\/div><div class="line"><\/div><div class="line">  pinMode(led, OUTPUT);<\/div><div class="line"><\/div><div class="line">  lcd.begin(16, 2);<\/div><div class="line"><\/div><div class="line">  <span class="comment">\/\/ The increasing functions are attached with identification of 1.<\/span><\/div><div class="line">  <span class="comment">\/*<\/span><\/div><div class="line"><span class="comment">   * This function can later be called by pressing the &#39;UP&#39; button<\/span><\/div><div class="line"><span class="comment">   * when &#39;led_line&#39; is focused. If some other line is focused it&#39;s<\/span><\/div><div class="line"><span class="comment">   * corresponding function will be called.<\/span><\/div><div class="line"><span class="comment">  *\/<\/span><\/div><div class="line">  led_line.attach_function(increase, increase_led_level);<\/div><div class="line">  <span class="comment">\/\/ The decreasing functions are attached with identification of 2.<\/span><\/div><div class="line">  led_line.attach_function(decrease, decrease_led_level);<\/div><div class="line"><\/div><div class="line">  <span class="comment">\/\/ Here the same function is attached with two different identifications.<\/span><\/div><div class="line">  <span class="comment">\/\/ It will be called on &#39;UP&#39; or &#39;DOWN&#39; button press.<\/span><\/div><div class="line">  fade_line.attach_function(1, fade_switch);<\/div><div class="line">  fade_line.attach_function(2, fade_switch);<\/div><div class="line">  fadePeriod_line.attach_function(increase, increase_fadePeriod);<\/div><div class="line">  fadePeriod_line.attach_function(decrease, decrease_fadePeriod);<\/div><div class="line"><\/div><div class="line">  blink_line.attach_function(1, blink_switch);<\/div><div class="line">  blink_line.attach_function(2, blink_switch);<\/div><div class="line">  blinkPeriod_line.attach_function(increase, increase_blinkPeriod);<\/div><div class="line">  blinkPeriod_line.attach_function(decrease, decrease_blinkPeriod);<\/div><div class="line"><\/div><div class="line">  menu.add_screen(welcome_screen);<\/div><div class="line">  menu.add_screen(led_screen);<\/div><div class="line">  menu.add_screen(fade_screen);<\/div><div class="line">  menu.add_screen(blink_screen);<\/div><div class="line"><\/div><div class="line">  isFading_text = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot;OFF&quot;<\/span>;<\/div><div class="line">  isBlinking_text = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot;OFF&quot;<\/span>;<\/div><div class="line"><\/div><div class="line">  menu.update();<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> loop() {<\/div><div class="line">  buttonsCheck();<\/div><div class="line"><\/div><div class="line">  <span class="keyword">static<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> lastMillis_blink = 0;<\/div><div class="line">  <span class="keywordflow">if<\/span> ((isFading == <span class="keyword">true<\/span>) &amp;&amp; ((millis() - lastMillis_blink) &gt; fadePeriod)) {<\/div><div class="line">    lastMillis_blink = millis();<\/div><div class="line">    fade();<\/div><div class="line">    menu.update();<\/div><div class="line">  }<\/div><div class="line"><\/div><div class="line">  <span class="keyword">static<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> lastMillis_fade = 0;<\/div><div class="line">  <span class="keywordflow">if<\/span> ((isBlinking == <span class="keyword">true<\/span>) &amp;&amp; ((millis() - lastMillis_fade) &gt; blinkPeriod)) {<\/div><div class="line">    lastMillis_fade = millis();<\/div><div class="line">    blink();<\/div><div class="line">    menu.update();<\/div><div class="line">  }<\/div><div class="line"><\/div><div class="line">}<\/div><\/div><!-- fragment --> <\/div><!-- contents -->$/;"	a
_a0	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_d_buttons_menu_8ino-example.html	/^<div class="fragment"><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * LiquidMenu library - buttons_menu.ino<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * This example demonstrates how to use buttons, callback<\/span><\/div><div class="line"><span class="comment"> * functions and changing text variables.<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * It creates three screens. The first one displays static<\/span><\/div><div class="line"><span class="comment"> * information. The second displays the analog reading and the<\/span><\/div><div class="line"><span class="comment"> * state of the LED on pin 13. And the third one displays the<\/span><\/div><div class="line"><span class="comment"> * PWM value applied on pin 3. The analog value is read periodically<\/span><\/div><div class="line"><span class="comment"> * and assigned to the attached variable &quot;const short analogValue&quot;.<\/span><\/div><div class="line"><span class="comment"> * The LED on pin 13 is changing its state periodically and its<\/span><\/div><div class="line"><span class="comment"> * attached variable is changed also. The PWM output pin 3 is<\/span><\/div><div class="line"><span class="comment"> * controlled via the callback functions attached to its line:<\/span><\/div><div class="line"><span class="comment"> * &quot;void pwm_up()&quot; and &quot;void pwm_down()&quot;. To call the functions<\/span><\/div><div class="line"><span class="comment"> * navigate to the third screen using the &quot;left&quot; or &quot;right&quot; buttons,<\/span><\/div><div class="line"><span class="comment"> * focus the line using the &quot;enter&quot; button and then click the &quot;up&quot; or<\/span><\/div><div class="line"><span class="comment"> * &quot;down&quot; button.<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * The circuit:<\/span><\/div><div class="line"><span class="comment"> * https:\/\/github.com\/VasilKalchev\/LiquidMenu\/blob\/master\/examples\/D_buttons_menu\/D_buttons_menu.png<\/span><\/div><div class="line"><span class="comment"> * - LCD RS pin to Arduino pin 12<\/span><\/div><div class="line"><span class="comment"> * - LCD E pin to Arduino pin 11<\/span><\/div><div class="line"><span class="comment"> * - LCD D4 pin to Arduino pin 5<\/span><\/div><div class="line"><span class="comment"> * - LCD D5 pin to Arduino pin 4<\/span><\/div><div class="line"><span class="comment"> * - LCD D6 pin to Arduino pin 3<\/span><\/div><div class="line"><span class="comment"> * - LCD D7 pin to Arduino pin 2<\/span><\/div><div class="line"><span class="comment"> * - LCD R\/W pin to ground<\/span><\/div><div class="line"><span class="comment"> * - LCD VSS pin to ground<\/span><\/div><div class="line"><span class="comment"> * - LCD VDD pin to 5V<\/span><\/div><div class="line"><span class="comment"> * - 10k ohm potentiometer: ends to 5V and ground, wiper to LCD V0<\/span><\/div><div class="line"><span class="comment"> * - 150 ohm resistor from 5V to LCD Anode<\/span><\/div><div class="line"><span class="comment"> * - LCD Cathode to ground<\/span><\/div><div class="line"><span class="comment"> * - ----<\/span><\/div><div class="line"><span class="comment"> * - Button (left) to Arduino pin A0 and ground<\/span><\/div><div class="line"><span class="comment"> * - Button (right) to Arduino pin 7 and ground<\/span><\/div><div class="line"><span class="comment"> * - Button (up) to Arduino pin 8 and ground<\/span><\/div><div class="line"><span class="comment"> * - Button (down) to Arduino pin 9 and ground<\/span><\/div><div class="line"><span class="comment"> * - Button (enter) to Arduino pin 10 and ground<\/span><\/div><div class="line"><span class="comment"> * - A PWM controlled device (LED...) to Arduino pin 6<\/span><\/div><div class="line"><span class="comment"> * - An LED to Arduino pin 13 (optional)<\/span><\/div><div class="line"><span class="comment"> * - some analog input to Arduino pin A5 (unconnected also works)<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * Created July 24, 2016<\/span><\/div><div class="line"><span class="comment"> * by Vasil Kalchev<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * https:\/\/github.com\/VasilKalchev\/LiquidMenu<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><\/div><div class="line"><span class="preprocessor">#include &lt;LiquidCrystal.h&gt;<\/span><\/div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="_liquid_menu_8h.html">LiquidMenu.h<\/a>&gt;<\/span><\/div><div class="line"><span class="preprocessor">#include &quot;Button.h&quot;<\/span><\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Pin mapping for the display<\/span><\/div><div class="line"><span class="keyword">const<\/span> byte LCD_RS = 12;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_E = 11;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D4 = 5;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D5 = 4;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D6 = 3;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D7 = 2;<\/div><div class="line"><span class="comment">\/\/LCD R\/W pin to ground<\/span><\/div><div class="line"><span class="comment">\/\/10K potentiometer to VO<\/span><\/div><div class="line">LiquidCrystal lcd(LCD_RS, LCD_E, LCD_D4, LCD_D5, LCD_D6, LCD_D7);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * The Button class is not a part of the LiquidMenu library. The first<\/span><\/div><div class="line"><span class="comment"> * parameter is the button&#39;s pin, the second enables or disables the<\/span><\/div><div class="line"><span class="comment"> * internal pullup resistor (not required) and the third is the debounce<\/span><\/div><div class="line"><span class="comment"> * time (not required).<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><span class="comment">\/\/ Button objects instantiation<\/span><\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">bool<\/span> pullup = <span class="keyword">true<\/span>;<\/div><div class="line">Button left(A0, pullup);<\/div><div class="line">Button right(7, pullup);<\/div><div class="line">Button up(8, pullup);<\/div><div class="line">Button down(9, pullup);<\/div><div class="line">Button enter(10, pullup);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Variables used to demonstrate PWM control with callback functions.<\/span><\/div><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * Variable &#39;pwmLevel&#39; is later passed to &#39;pwm_line&#39; object to be<\/span><\/div><div class="line"><span class="comment"> * displayed and a function is attached to the same LiquidLine object.<\/span><\/div><div class="line"><span class="comment"> * Functions are attached to different LiquidLine objects with a number<\/span><\/div><div class="line"><span class="comment"> * for identification e.g. pwm_line.attach_function(2, func); then when<\/span><\/div><div class="line"><span class="comment"> * menu.call_function(2) is called on some event e.g. button press, the<\/span><\/div><div class="line"><span class="comment"> * function identified with 2 for the focused line is called. Similar<\/span><\/div><div class="line"><span class="comment"> * functions (e.g. for incrementing) can be attached to the different<\/span><\/div><div class="line"><span class="comment"> * LiquidLine objects with the same identification number and then called<\/span><\/div><div class="line"><span class="comment"> * on some event (e.g. &#39;UP&#39; button) with menu.call_function(2), that will<\/span><\/div><div class="line"><span class="comment"> * call only the function for the focused line that is identified with<\/span><\/div><div class="line"><span class="comment"> * the number 2.<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><span class="keyword">const<\/span> byte pwmPin = 6;<\/div><div class="line">byte pwmLevel = 0;<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Variables for controlling a pin and displaying the state with text.<\/span><\/div><div class="line"><span class="comment">\/\/ char* is used for adding changing text to the LiquidLine object.<\/span><\/div><div class="line"><span class="keyword">const<\/span> byte ledPin = LED_BUILTIN;<\/div><div class="line"><span class="keywordtype">bool<\/span> ledState = LOW;<\/div><div class="line"><span class="keywordtype">char<\/span>* ledState_text;<\/div><div class="line"><\/div><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * Variable &#39;analogValue&#39; is later configured to be printed on the display.<\/span><\/div><div class="line"><span class="comment"> * This time a static variable is used for holding the previous analog value.<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><span class="keyword">const<\/span> byte analogPin = A5;<\/div><div class="line"><span class="keywordtype">unsigned<\/span> <span class="keywordtype">short<\/span> analogValue = 0;<\/div><div class="line"><\/div><div class="line"><\/div><div class="line"><a name="_a0"><\/a><a class="code" href="class_liquid_line.html">LiquidLine<\/a> welcome_line1(1, 0, <span class="stringliteral">&quot;LiquidMenu &quot;<\/span>, <a name="a1"><\/a><a class="code" href="_liquid_menu_8h.html#a7189c07575adbb1070c89dcd0ab5e272">LIQUIDMENU_VERSION<\/a>);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> welcome_line2(0, 1, <span class="stringliteral">&quot;Buttons example&quot;<\/span>);<\/div><div class="line"><a name="_a2"><\/a><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> welcome_screen(welcome_line1, welcome_line2);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> analog_line(0, 0, <span class="stringliteral">&quot;Analog: &quot;<\/span>, analogValue);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> ledState_line(0, 1, <span class="stringliteral">&quot;LED is &quot;<\/span>, ledState_text);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> screen2(analog_line, ledState_line);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> pwm_line(0, 0, <span class="stringliteral">&quot;PWM level: &quot;<\/span>, pwmLevel);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> pwm_screen(pwm_line);<\/div><div class="line"><\/div><div class="line"><a name="_a3"><\/a><a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> menu(lcd);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Function to be attached to the pwm_line object.<\/span><\/div><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * This function is used for incrementing the PWM level on the<\/span><\/div><div class="line"><span class="comment"> * &#39;pwmPin&#39;. It increments the value of &#39;pwmLevel&#39; and then<\/span><\/div><div class="line"><span class="comment"> * writes it to the pin.<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><span class="keywordtype">void<\/span> pwm_up() {<\/div><div class="line">  <span class="keywordflow">if<\/span> (pwmLevel &lt; 225) {<\/div><div class="line">    pwmLevel += 25;<\/div><div class="line">  } <span class="keywordflow">else<\/span> {<\/div><div class="line">    pwmLevel = 250;<\/div><div class="line">  }<\/div><div class="line">  analogWrite(pwmPin, pwmLevel);<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Function to be attached to the pwm_line object.<\/span><\/div><div class="line"><span class="keywordtype">void<\/span> pwm_down() {<\/div><div class="line">  <span class="keywordflow">if<\/span> (pwmLevel &gt; 25) {<\/div><div class="line">    pwmLevel -= 25;<\/div><div class="line">  } <span class="keywordflow">else<\/span> {<\/div><div class="line">    pwmLevel = 0;<\/div><div class="line">  }<\/div><div class="line">  analogWrite(pwmPin, pwmLevel);<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> setup() {<\/div><div class="line">  Serial.begin(250000);<\/div><div class="line"><\/div><div class="line">  pinMode(analogPin, INPUT);<\/div><div class="line">  pinMode(ledPin, OUTPUT);<\/div><div class="line">  pinMode(pwmPin, OUTPUT);<\/div><div class="line"><\/div><div class="line">  lcd.begin(16, 2);<\/div><div class="line"><\/div><div class="line">  <span class="comment">\/\/ Function to attach functions to LiquidLine objects.<\/span><\/div><div class="line">  pwm_line.attach_function(1, pwm_up);<\/div><div class="line">  pwm_line.attach_function(2, pwm_down);<\/div><div class="line"><\/div><div class="line">  menu.add_screen(welcome_screen);<\/div><div class="line">  menu.add_screen(screen2);<\/div><div class="line">  menu.add_screen(pwm_screen);<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> loop() {<\/div><div class="line"><\/div><div class="line">  <span class="comment">\/\/ Check all the buttons<\/span><\/div><div class="line">  <span class="keywordflow">if<\/span> (right.check() == LOW) {<\/div><div class="line">    Serial.println(F(<span class="stringliteral">&quot;RIGHT button pressed&quot;<\/span>));<\/div><div class="line">    menu.next_screen();<\/div><div class="line">  }<\/div><div class="line">  <span class="keywordflow">if<\/span> (left.check() == LOW) {<\/div><div class="line">    Serial.println(F(<span class="stringliteral">&quot;LEFT button pressed&quot;<\/span>));<\/div><div class="line">    menu.previous_screen();<\/div><div class="line">  }<\/div><div class="line">  <span class="keywordflow">if<\/span> (up.check() == LOW) {<\/div><div class="line">    Serial.println(F(<span class="stringliteral">&quot;UP button pressed&quot;<\/span>));<\/div><div class="line">    <span class="comment">\/\/ Calls the function identified with one<\/span><\/div><div class="line">    <span class="comment">\/\/ for the focused line.<\/span><\/div><div class="line">    menu.call_function(1);<\/div><div class="line">  }<\/div><div class="line">  <span class="keywordflow">if<\/span> (down.check() == LOW) {<\/div><div class="line">    Serial.println(F(<span class="stringliteral">&quot;DOWN button pressed&quot;<\/span>));<\/div><div class="line">    menu.call_function(2);<\/div><div class="line">  }<\/div><div class="line">  <span class="keywordflow">if<\/span> (enter.check() == LOW) {<\/div><div class="line">    Serial.println(F(<span class="stringliteral">&quot;ENTER button pressed&quot;<\/span>));<\/div><div class="line">    <span class="comment">\/\/ Switches focus to the next line.<\/span><\/div><div class="line">    menu.switch_focus();<\/div><div class="line">  }<\/div><div class="line"><\/div><div class="line"><\/div><div class="line">  <span class="comment">\/\/ Periodically switches the state of the LED.<\/span><\/div><div class="line">  <span class="keyword">static<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> lastMillis = 0;<\/div><div class="line">  <span class="keyword">static<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> period = 2000;<\/div><div class="line">  <span class="keywordflow">if<\/span> (millis() - lastMillis &gt; period) {<\/div><div class="line">    lastMillis = millis();<\/div><div class="line"><\/div><div class="line">    Serial.print(<span class="stringliteral">&quot;LED turned &quot;<\/span>);<\/div><div class="line">    <span class="keywordflow">if<\/span> (ledState == LOW) {<\/div><div class="line">      ledState = HIGH;<\/div><div class="line">      <span class="comment">\/\/ Changes the text that is printed on the display.<\/span><\/div><div class="line">      ledState_text = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot;ON&quot;<\/span>;<\/div><div class="line">      Serial.println(ledState_text);<\/div><div class="line">      menu.update();<\/div><div class="line">    } <span class="keywordflow">else<\/span> {<\/div><div class="line">      ledState = LOW;<\/div><div class="line">      ledState_text = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot;OFF&quot;<\/span>;<\/div><div class="line">      Serial.println(ledState_text);<\/div><div class="line">      menu.update();<\/div><div class="line">    }<\/div><div class="line">    digitalWrite(ledPin, ledState);<\/div><div class="line"><\/div><div class="line">    <span class="comment">\/\/ The &#39;analogValue&#39; is updated every second.<\/span><\/div><div class="line">    analogValue = analogRead(analogPin);<\/div><div class="line">    <span class="keyword">static<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">short<\/span> lastAnalogValue = 0;<\/div><div class="line">    <span class="keywordflow">if<\/span> (analogValue != lastAnalogValue) {<\/div><div class="line">      lastAnalogValue = analogValue;<\/div><div class="line">      menu.update();<\/div><div class="line">    }<\/div><div class="line">  }<\/div><div class="line">}<\/div><\/div><!-- fragment --> <\/div><!-- contents -->$/;"	a
_a0	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_e_progmem_menu_8ino-example.html	/^<div class="fragment"><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * LiquidMenu library - progmem_menu.ino<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * This example demonstrates how to display a string stored in flash memory.<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * Usually all the variables are stored in RAM (which is 2KB on ATmega328).<\/span><\/div><div class="line"><span class="comment"> * To conserve RAM, big variables like char arrays can be stored along with<\/span><\/div><div class="line"><span class="comment"> * the program in flash memory (which is 32KB on ATmega328). There is a tutorial<\/span><\/div><div class="line"><span class="comment"> * on how to do that on the Arduino web site: https:\/\/www.arduino.cc\/en\/Reference\/PROGMEM,<\/span><\/div><div class="line"><span class="comment"> * there is also a very good tutorial here: http:\/\/www.gammon.com.au\/progmem.<\/span><\/div><div class="line"><span class="comment"> * Basically the variable is prepended with the &quot;const&quot; variable modifier and<\/span><\/div><div class="line"><span class="comment"> * appended with the &quot;PROGMEM&quot; keyword. After that the variable is added to the<\/span><\/div><div class="line"><span class="comment"> * LiquidLine object as usual. The difference is that later in the setup(), the method<\/span><\/div><div class="line"><span class="comment"> * bool LiquidLine::set_asProgmem(byte number) must be called on the LiquidLine object<\/span><\/div><div class="line"><span class="comment"> * holding the variable. The &quot;number&quot; parameter is the consecutive number of the variable<\/span><\/div><div class="line"><span class="comment"> * for this LiquidLine object. If there are two variables, the first is an integer<\/span><\/div><div class="line"><span class="comment"> * and the second is a string stored in flash, &quot;number&quot; will be 2.<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * The circuit:<\/span><\/div><div class="line"><span class="comment"> * https:\/\/github.com\/VasilKalchev\/LiquidMenu\/blob\/master\/examples\/progmem_menu\/E_progmem_menu.png<\/span><\/div><div class="line"><span class="comment"> * - LCD RS pin to Arduino pin 12<\/span><\/div><div class="line"><span class="comment"> * - LCD E pin to Arduino pin 11<\/span><\/div><div class="line"><span class="comment"> * - LCD D4 pin to Arduino pin 5<\/span><\/div><div class="line"><span class="comment"> * - LCD D5 pin to Arduino pin 4<\/span><\/div><div class="line"><span class="comment"> * - LCD D6 pin to Arduino pin 3<\/span><\/div><div class="line"><span class="comment"> * - LCD D7 pin to Arduino pin 2<\/span><\/div><div class="line"><span class="comment"> * - LCD R\/W pin to ground<\/span><\/div><div class="line"><span class="comment"> * - LCD VSS pin to ground<\/span><\/div><div class="line"><span class="comment"> * - LCD VDD pin to 5V<\/span><\/div><div class="line"><span class="comment"> * - 10k ohm potentiometer: ends to 5V and ground, wiper to LCD V0<\/span><\/div><div class="line"><span class="comment"> * - 150 ohm resistor from 5V to LCD Anode<\/span><\/div><div class="line"><span class="comment"> * - LCD Cathode to ground<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * Created July 24, 2016<\/span><\/div><div class="line"><span class="comment"> * by Vasil Kalchev<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * https:\/\/github.com\/VasilKalchev\/LiquidMenu<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><\/div><div class="line"><span class="preprocessor">#include &lt;LiquidCrystal.h&gt;<\/span><\/div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="_liquid_menu_8h.html">LiquidMenu.h<\/a>&gt;<\/span><\/div><div class="line"><span class="preprocessor">#include &lt;avr\/pgmspace.h&gt;<\/span> <span class="comment">\/\/ The PROGMEM library<\/span><\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Pin mapping for the display<\/span><\/div><div class="line"><span class="keyword">const<\/span> byte LCD_RS = 12;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_E = 11;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D4 = 5;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D5 = 4;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D6 = 3;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D7 = 2;<\/div><div class="line"><span class="comment">\/\/LCD R\/W pin to ground<\/span><\/div><div class="line"><span class="comment">\/\/10K potentiometer to VO<\/span><\/div><div class="line">LiquidCrystal lcd(LCD_RS, LCD_E, LCD_D4, LCD_D5, LCD_D6, LCD_D7);<\/div><div class="line"><\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ These are the char arrays stored in flash<\/span><\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text1[] PROGMEM = <span class="stringliteral">&quot;Lorem ipsum dolo&quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text2[] PROGMEM = <span class="stringliteral">&quot;r sit amet, cons&quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text3[] PROGMEM = <span class="stringliteral">&quot;ectetur adipisci&quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text4[] PROGMEM = <span class="stringliteral">&quot;ibendum, sem ac &quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text5[] PROGMEM = <span class="stringliteral">&quot;venenatis rhoncu&quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text6[] PROGMEM = <span class="stringliteral">&quot;s, nisi justo eu&quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text7[] PROGMEM = <span class="stringliteral">&quot;ismod lectus, eu&quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text8[] PROGMEM = <span class="stringliteral">&quot; eleifend ante n&quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text9[] PROGMEM = <span class="stringliteral">&quot;isl vitae eros. &quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text10[] PROGMEM = <span class="stringliteral">&quot;Pellentesque hab&quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text11[] PROGMEM = <span class="stringliteral">&quot;itant morbi tris&quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text12[] PROGMEM = <span class="stringliteral">&quot;tique senectus e&quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text13[] PROGMEM = <span class="stringliteral">&quot;t netus et males&quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text14[] PROGMEM = <span class="stringliteral">&quot;uada fames ac tu&quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text15[] PROGMEM = <span class="stringliteral">&quot;rpis egestas. Or&quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text16[] PROGMEM = <span class="stringliteral">&quot;ci varius natoqu&quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text17[] PROGMEM = <span class="stringliteral">&quot;e penatibus et m&quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text18[] PROGMEM = <span class="stringliteral">&quot;agnis dis partur&quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text19[] PROGMEM = <span class="stringliteral">&quot;ient montes, nas&quot;<\/span>;<\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">char<\/span> text20[] PROGMEM = <span class="stringliteral">&quot;cetur ridiculus &quot;<\/span>;<\/div><div class="line"><\/div><div class="line"><a name="_a0"><\/a><a class="code" href="class_liquid_line.html">LiquidLine<\/a> welcome_line1(1, 0, <span class="stringliteral">&quot;LiquidMenu &quot;<\/span>, <a name="a1"><\/a><a class="code" href="_liquid_menu_8h.html#a7189c07575adbb1070c89dcd0ab5e272">LIQUIDMENU_VERSION<\/a>);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> welcome_line2(0, 1, <span class="stringliteral">&quot;PROGMEM example&quot;<\/span>);<\/div><div class="line"><a name="_a2"><\/a><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> welcome_screen(welcome_line1, welcome_line2);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line11(0, 0, text1);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line12(0, 1, text2);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> screen1(line11, line12);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line21(0, 0, text3);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line22(0, 1, text4);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> screen2(line21, line22);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line31(0, 0, text5);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line32(0, 1, text6);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> screen3(line31, line32);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line41(0, 0, text7);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line42(0, 1, text8);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> screen4(line41, line42);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line51(0, 0, text9);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line52(0, 1, text10);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> screen5(line51, line52);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line61(0, 0, text11);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line62(0, 1, text12);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> screen6(line61, line62);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line71(0, 0, text13);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line72(0, 1, text14);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> screen7(line71, line72);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line81(0, 0, text15);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line82(0, 1, text16);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> screen8(line81, line82);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line91(0, 0, text17);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line92(0, 1, text18);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> screen9(line91, line92);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line101(0, 0, text19);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line102(0, 1, text20);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> screen10(line101, line102);<\/div><div class="line"><\/div><div class="line"><a name="_a3"><\/a><a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> menu(lcd);<\/div><div class="line"><\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> setup() {<\/div><div class="line">  Serial.begin(250000);<\/div><div class="line"><\/div><div class="line">  lcd.begin(16, 2);<\/div><div class="line"><\/div><div class="line">  <span class="comment">\/\/ Set the variables as PROGMEM. The parameter is the consecutive<\/span><\/div><div class="line">  <span class="comment">\/\/ number of the PROGMEM variable for that LiquidLine object.<\/span><\/div><div class="line">  line11.set_asProgmem(1);<\/div><div class="line">  line12.set_asProgmem(1);<\/div><div class="line">  line21.set_asProgmem(1);<\/div><div class="line">  line22.set_asProgmem(1);<\/div><div class="line">  line31.set_asProgmem(1);<\/div><div class="line">  line32.set_asProgmem(1);<\/div><div class="line">  line41.set_asProgmem(1);<\/div><div class="line">  line42.set_asProgmem(1);<\/div><div class="line">  line51.set_asProgmem(1);<\/div><div class="line">  line52.set_asProgmem(1);<\/div><div class="line">  line61.set_asProgmem(1);<\/div><div class="line">  line62.set_asProgmem(1);<\/div><div class="line">  line71.set_asProgmem(1);<\/div><div class="line">  line72.set_asProgmem(1);<\/div><div class="line">  line81.set_asProgmem(1);<\/div><div class="line">  line82.set_asProgmem(1);<\/div><div class="line">  line91.set_asProgmem(1);<\/div><div class="line">  line92.set_asProgmem(1);<\/div><div class="line">  line101.set_asProgmem(1);<\/div><div class="line">  line102.set_asProgmem(1);<\/div><div class="line"><\/div><div class="line">  menu.add_screen(welcome_screen);<\/div><div class="line">  menu.add_screen(screen1);<\/div><div class="line">  menu.add_screen(screen2);<\/div><div class="line">  menu.add_screen(screen3);<\/div><div class="line">  menu.add_screen(screen4);<\/div><div class="line">  menu.add_screen(screen5);<\/div><div class="line">  menu.add_screen(screen6);<\/div><div class="line">  menu.add_screen(screen7);<\/div><div class="line">  menu.add_screen(screen8);<\/div><div class="line">  menu.add_screen(screen9);<\/div><div class="line">  menu.add_screen(screen10);<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> loop() {<\/div><div class="line">  <span class="keyword">static<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> lastMs_nextScreen = 0;<\/div><div class="line">  <span class="keyword">static<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> period_nextScreen = 1000;<\/div><div class="line">  <span class="comment">\/\/ Periodic switching to the next screen.<\/span><\/div><div class="line">  <span class="keywordflow">if<\/span> (millis() - lastMs_nextScreen &gt; period_nextScreen) {<\/div><div class="line">    lastMs_nextScreen = millis();<\/div><div class="line">    menu.next_screen();<\/div><div class="line">  }<\/div><div class="line">}<\/div><\/div><!-- fragment --> <\/div><!-- contents -->$/;"	a
_a0	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_f_focus_menu_8ino-example.html	/^<div class="fragment"><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * LiquidMenu library - focus_menu.ino<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * This example demonstrates how to customize the focus indicator.<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * The default focus indicator is an arrow symbol shown on the right of the<\/span><\/div><div class="line"><span class="comment"> * focused line. The focus indicator position can be changed per line to be<\/span><\/div><div class="line"><span class="comment"> * shown on the right, on the left or in a specified position. The focus<\/span><\/div><div class="line"><span class="comment"> * symbol can also be changed, per position.<\/span><\/div><div class="line"><span class="comment"> * In this example a custom focus symbol is defined (uint8_t rFocus[8]). Then<\/span><\/div><div class="line"><span class="comment"> * it is configured to be the right focus indicator symbol using the<\/span><\/div><div class="line"><span class="comment"> * bool LiquidMenu::set_focusSymbol(Position position, uint8_t symbol[8]) method.<\/span><\/div><div class="line"><span class="comment"> * The focus position for the different lines is configured using the<\/span><\/div><div class="line"><span class="comment"> * bool set_focusPosition(Position position, uint8_t column = 0, uint8_t row = 0)<\/span><\/div><div class="line"><span class="comment"> * method. If the &quot;position&quot; is &quot;Position::CUSTOM&quot;, the column and row parameters<\/span><\/div><div class="line"><span class="comment"> * must be specified. The focus position can be specified for a single line, for<\/span><\/div><div class="line"><span class="comment"> * the whole screen, for the whole menu or for the whole menu system using the<\/span><\/div><div class="line"><span class="comment"> * respective objects.<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * The circuit:<\/span><\/div><div class="line"><span class="comment"> * https:\/\/github.com\/VasilKalchev\/LiquidMenu\/blob\/master\/examples\/focus_menu\/F_focus_menu.png<\/span><\/div><div class="line"><span class="comment"> * - LCD RS pin to Arduino pin 12<\/span><\/div><div class="line"><span class="comment"> * - LCD E pin to Arduino pin 11<\/span><\/div><div class="line"><span class="comment"> * - LCD D4 pin to Arduino pin 5<\/span><\/div><div class="line"><span class="comment"> * - LCD D5 pin to Arduino pin 4<\/span><\/div><div class="line"><span class="comment"> * - LCD D6 pin to Arduino pin 3<\/span><\/div><div class="line"><span class="comment"> * - LCD D7 pin to Arduino pin 2<\/span><\/div><div class="line"><span class="comment"> * - LCD R\/W pin to ground<\/span><\/div><div class="line"><span class="comment"> * - LCD VSS pin to ground<\/span><\/div><div class="line"><span class="comment"> * - LCD VDD pin to 5V<\/span><\/div><div class="line"><span class="comment"> * - 10k ohm potentiometer: ends to 5V and ground, wiper to LCD V0<\/span><\/div><div class="line"><span class="comment"> * - 150 ohm resistor from 5V to LCD Anode<\/span><\/div><div class="line"><span class="comment"> * - LCD Cathode to ground<\/span><\/div><div class="line"><span class="comment"> * - ----<\/span><\/div><div class="line"><span class="comment"> * - Button (left) to Arduino pin A0 and ground<\/span><\/div><div class="line"><span class="comment"> * - Button (right) to Arduino pin 7 and ground<\/span><\/div><div class="line"><span class="comment"> * - Button (enter) to Arduino pin 10 and ground<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * Created July 24, 2016<\/span><\/div><div class="line"><span class="comment"> * by Vasil Kalchev<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * https:\/\/github.com\/VasilKalchev\/LiquidMenu<\/span><\/div><div class="line"><span class="comment"> * http:\/\/omerk.github.io\/lcdchargen\/ - for creating custom indicator symbol<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><\/div><div class="line"><span class="preprocessor">#include &lt;LiquidCrystal.h&gt;<\/span><\/div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="_liquid_menu_8h.html">LiquidMenu.h<\/a>&gt;<\/span><\/div><div class="line"><span class="preprocessor">#include &quot;Button.h&quot;<\/span><\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Pin mapping for the display<\/span><\/div><div class="line"><span class="keyword">const<\/span> byte LCD_RS = 12;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_E = 11;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D4 = 5;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D5 = 4;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D6 = 3;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D7 = 2;<\/div><div class="line"><span class="comment">\/\/LCD R\/W pin to ground<\/span><\/div><div class="line"><span class="comment">\/\/10K potentiometer to VO<\/span><\/div><div class="line">LiquidCrystal lcd(LCD_RS, LCD_E, LCD_D4, LCD_D5, LCD_D6, LCD_D7);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Button objects instantiation<\/span><\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">bool<\/span> pullup = <span class="keyword">true<\/span>;<\/div><div class="line">Button left(A0, pullup);<\/div><div class="line">Button right(7, pullup);<\/div><div class="line">Button enter(10, pullup);<\/div><div class="line"><\/div><div class="line"><a name="_a0"><\/a><a class="code" href="class_liquid_line.html">LiquidLine<\/a> welcome_line1(1, 0, <span class="stringliteral">&quot;LiquidMenu &quot;<\/span>, <a name="a1"><\/a><a class="code" href="_liquid_menu_8h.html#a7189c07575adbb1070c89dcd0ab5e272">LIQUIDMENU_VERSION<\/a>);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> welcome_line2(1, 1, <span class="stringliteral">&quot;Focus example&quot;<\/span>);<\/div><div class="line"><a name="_a2"><\/a><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> welcome_screen(welcome_line1, welcome_line2);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> leftFocus_line(1, 0, <span class="stringliteral">&quot;Left focus&quot;<\/span>);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> rightFocus_line(1, 1, <span class="stringliteral">&quot;Right focus&quot;<\/span>);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> leftright_screen(leftFocus_line, rightFocus_line);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> customFocus_line(1, 0, <span class="stringliteral">&quot;Custom focus&quot;<\/span>);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> customFocus_screen(customFocus_line);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> leftF1_line(6, 0, <span class="stringliteral">&quot;Left&quot;<\/span>);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> leftF2_line(6, 1, <span class="stringliteral">&quot;focus&quot;<\/span>);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> leftF12_screen(leftF1_line, leftF2_line);<\/div><div class="line"><\/div><div class="line"><a name="_a3"><\/a><a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> menu(lcd);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Checks all the buttons.<\/span><\/div><div class="line"><span class="keywordtype">void<\/span> buttonsCheck() {<\/div><div class="line">  <span class="keywordflow">if<\/span> (right.check() == LOW) {<\/div><div class="line">    menu.next_screen();<\/div><div class="line">  }<\/div><div class="line">  <span class="keywordflow">if<\/span> (left.check() == LOW) {<\/div><div class="line">    menu.previous_screen();<\/div><div class="line">  }<\/div><div class="line">  <span class="keywordflow">if<\/span> (enter.check() == LOW) {<\/div><div class="line">    <span class="comment">\/\/ Switches focus to the next line.<\/span><\/div><div class="line">    menu.switch_focus();<\/div><div class="line">  }<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Indicator symbol definition, it will change the default symbol for the right focus.<\/span><\/div><div class="line"><span class="comment">\/\/ http:\/\/omerk.github.io\/lcdchargen\/<\/span><\/div><div class="line">uint8_t rFocus[8] = {<\/div><div class="line">  0b00000,<\/div><div class="line">  0b00000,<\/div><div class="line">  0b00100,<\/div><div class="line">  0b01110,<\/div><div class="line">  0b00100,<\/div><div class="line">  0b00000,<\/div><div class="line">  0b00000,<\/div><div class="line">  0b00000<\/div><div class="line">};<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Blank function, it is attached to the lines so that they become focusable.<\/span><\/div><div class="line"><span class="keywordtype">void<\/span> func() {<\/div><div class="line">  <span class="keywordflow">return<\/span>;<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> setup() {<\/div><div class="line">  Serial.begin(250000);<\/div><div class="line"><\/div><div class="line">  lcd.begin(16, 2);<\/div><div class="line"><\/div><div class="line">    <span class="comment">\/\/ Changes the right focus symbol.<\/span><\/div><div class="line">  menu.set_focusSymbol(Position::RIGHT, rFocus);<\/div><div class="line"><\/div><div class="line">    <span class="comment">\/\/ Sets the focus position for this line to be on the left.<\/span><\/div><div class="line">  leftFocus_line.set_focusPosition(Position::LEFT);<\/div><div class="line">  rightFocus_line.set_focusPosition(Position::RIGHT);<\/div><div class="line">  <span class="comment">\/\/ &#39;CUSTOM&#39; focus position needs column and row parameters.<\/span><\/div><div class="line">  customFocus_line.set_focusPosition(Position::CUSTOM, 15, 0);<\/div><div class="line">  <span class="comment">\/\/ The focus position can be changed for the whole screen or<\/span><\/div><div class="line">  <span class="comment">\/\/ menu at once. &#39;CUSTOM&#39; position cannot be set because it<\/span><\/div><div class="line">  <span class="comment">\/\/ needs individual coordinates.<\/span><\/div><div class="line">  leftF12_screen.set_focusPosition(Position::LEFT);<\/div><div class="line"><\/div><div class="line">    <span class="comment">\/\/ Attaching a function to a line makes the line focusable.<\/span><\/div><div class="line">  leftFocus_line.attach_function(1, func);<\/div><div class="line">  rightFocus_line.attach_function(1, func);<\/div><div class="line">  customFocus_line.attach_function(1, func);<\/div><div class="line">  leftF1_line.attach_function(1, func);<\/div><div class="line">  leftF2_line.attach_function(1, func);<\/div><div class="line"><\/div><div class="line">  menu.add_screen(welcome_screen);<\/div><div class="line">  menu.add_screen(leftright_screen);<\/div><div class="line">  menu.add_screen(customFocus_screen);<\/div><div class="line">  menu.add_screen(leftright_screen);<\/div><div class="line">  menu.add_screen(leftF12_screen);<\/div><div class="line"><\/div><div class="line">  menu.update();<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> loop() {<\/div><div class="line">  buttonsCheck();<\/div><div class="line">}<\/div><\/div><!-- fragment --> <\/div><!-- contents -->$/;"	a
_a0	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_g_glyph_menu_8ino-example.html	/^<div class="fragment"><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * LiquidMenu library - glyph_menu.ino<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * This example demonstrates how to create a custom character<\/span><\/div><div class="line"><span class="comment"> * (glyph) and put it inside a LiquidLine object.<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * The LiquidCrystal library allows creating custom characters<\/span><\/div><div class="line"><span class="comment"> * with the method bool LiquidCrystal::createChar(byte num, byte data[]).<\/span><\/div><div class="line"><span class="comment"> * The &quot;num&quot; parameter is an index (0 to 7), identifying the glyph and<\/span><\/div><div class="line"><span class="comment"> * the &quot;data&quot; parameter is an array holding the actual glyph. To insert<\/span><\/div><div class="line"><span class="comment"> * it in a LiquidLine object put the &quot;num&quot; parameter (used when creating the<\/span><\/div><div class="line"><span class="comment"> * glyph earlier) in the LiquidLine object as a normal variable or an int<\/span><\/div><div class="line"><span class="comment"> * literal (e.g. LiquidLine line1(0, 0, glyphNum)) and then call the method<\/span><\/div><div class="line"><span class="comment"> * bool LiquidLine::set_asGlyph(byte number) where &quot;number&quot; is the consecutive<\/span><\/div><div class="line"><span class="comment"> * number of the variable for that line (e.g. line1.set_asGlyph(1)). Now when<\/span><\/div><div class="line"><span class="comment"> * displaying the line on the screen the object will know that this number<\/span><\/div><div class="line"><span class="comment"> * should not be displayed directly but is referencing a created character.<\/span><\/div><div class="line"><span class="comment"> * The glyph can be animated by changing the value of the variable pointing<\/span><\/div><div class="line"><span class="comment"> * to the created character to point to other created character. In the case<\/span><\/div><div class="line"><span class="comment"> * of animating a glyph, the method void LiquidMenu::softUpdate() can be used<\/span><\/div><div class="line"><span class="comment"> * to update the display to the new glyph without clearing the display. This<\/span><\/div><div class="line"><span class="comment"> * method can be used in any case when you are sure that the new information<\/span><\/div><div class="line"><span class="comment"> * shown on the display will overwrite the old.<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * The circuit:<\/span><\/div><div class="line"><span class="comment"> * https:\/\/github.com\/VasilKalchev\/LiquidMenu\/blob\/master\/examples\/glyph_menu\/G_glyph_menu.png<\/span><\/div><div class="line"><span class="comment"> * - LCD RS pin to Arduino pin 12<\/span><\/div><div class="line"><span class="comment"> * - LCD E pin to Arduino pin 11<\/span><\/div><div class="line"><span class="comment"> * - LCD D4 pin to Arduino pin 5<\/span><\/div><div class="line"><span class="comment"> * - LCD D5 pin to Arduino pin 4<\/span><\/div><div class="line"><span class="comment"> * - LCD D6 pin to Arduino pin 3<\/span><\/div><div class="line"><span class="comment"> * - LCD D7 pin to Arduino pin 2<\/span><\/div><div class="line"><span class="comment"> * - LCD R\/W pin to ground<\/span><\/div><div class="line"><span class="comment"> * - LCD VSS pin to ground<\/span><\/div><div class="line"><span class="comment"> * - LCD VDD pin to 5V<\/span><\/div><div class="line"><span class="comment"> * - 10k ohm potentiometer: ends to 5V and ground, wiper to LCD V0<\/span><\/div><div class="line"><span class="comment"> * - 150 ohm resistor from 5V to LCD Anode<\/span><\/div><div class="line"><span class="comment"> * - LCD Cathode to ground<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * Created July 24, 2016<\/span><\/div><div class="line"><span class="comment"> * by Vasil Kalchev<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * https:\/\/github.com\/VasilKalchev\/LiquidMenu<\/span><\/div><div class="line"><span class="comment"> * http:\/\/omerk.github.io\/lcdchargen\/ - for creating custom character definition<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><\/div><div class="line"><span class="preprocessor">#include &lt;LiquidCrystal.h&gt;<\/span><\/div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="_liquid_menu_8h.html">LiquidMenu.h<\/a>&gt;<\/span><\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Pin mapping for the display<\/span><\/div><div class="line"><span class="keyword">const<\/span> byte LCD_RS = 12;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_E = 11;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D4 = 5;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D5 = 4;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D6 = 3;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D7 = 2;<\/div><div class="line"><span class="comment">\/\/LCD R\/W pin to ground<\/span><\/div><div class="line"><span class="comment">\/\/10K potentiometer to VO<\/span><\/div><div class="line">LiquidCrystal lcd(LCD_RS, LCD_E, LCD_D4, LCD_D5, LCD_D6, LCD_D7);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ The glyph are separated in a namespace. To use them use<\/span><\/div><div class="line"><span class="comment">\/\/ namespace_name::variable_name.<\/span><\/div><div class="line"><span class="keyword">namespace <\/span>glyphs {<\/div><div class="line">uint8_t thermometer[8] = {<\/div><div class="line">  0b00100,<\/div><div class="line">  0b01010,<\/div><div class="line">  0b01010,<\/div><div class="line">  0b01010,<\/div><div class="line">  0b10001,<\/div><div class="line">  0b11111,<\/div><div class="line">  0b01110,<\/div><div class="line">  0b00000<\/div><div class="line">};<\/div><div class="line"><\/div><div class="line">uint8_t celsiusSymbol[8] = {<\/div><div class="line">  0b00011,<\/div><div class="line">  0b00011,<\/div><div class="line">  0b00000,<\/div><div class="line">  0b00000,<\/div><div class="line">  0b00000,<\/div><div class="line">  0b00000,<\/div><div class="line">  0b00000,<\/div><div class="line">  0b00000<\/div><div class="line">};<\/div><div class="line"><\/div><div class="line">uint8_t fan1[8] = {<\/div><div class="line">  0b00000,<\/div><div class="line">  0b11001,<\/div><div class="line">  0b01011,<\/div><div class="line">  0b00100,<\/div><div class="line">  0b11010,<\/div><div class="line">  0b10011,<\/div><div class="line">  0b00000,<\/div><div class="line">  0b00000<\/div><div class="line">};<\/div><div class="line"><\/div><div class="line">uint8_t fan2[8] = {<\/div><div class="line">  0b00000,<\/div><div class="line">  0b10011,<\/div><div class="line">  0b11010,<\/div><div class="line">  0b00100,<\/div><div class="line">  0b01011,<\/div><div class="line">  0b11001,<\/div><div class="line">  0b00000,<\/div><div class="line">  0b00000<\/div><div class="line">};<\/div><div class="line">} <span class="comment">\/\/namespace glyphs<\/span><\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ These are the indexes we will use to create the characters<\/span><\/div><div class="line"><span class="comment">\/\/ and set them as variables of a LiquidLine object.<\/span><\/div><div class="line">byte fan_glyphIndex = 0;<\/div><div class="line">byte thermometer_glyphIndex = 2;<\/div><div class="line">byte celsiusSymbol_glyphIndex = 3;<\/div><div class="line"><\/div><div class="line"><a name="_a0"><\/a><a class="code" href="class_liquid_line.html">LiquidLine<\/a> welcome_line1(1, 0, <span class="stringliteral">&quot;LiquidMenu &quot;<\/span>, <a name="a1"><\/a><a class="code" href="_liquid_menu_8h.html#a7189c07575adbb1070c89dcd0ab5e272">LIQUIDMENU_VERSION<\/a>);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> welcome_line2(0, 1, <span class="stringliteral">&quot;PROGMEM example&quot;<\/span>);<\/div><div class="line"><a name="_a2"><\/a><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> welcome_screen(welcome_line1, welcome_line2);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line1(1, 1, fan_glyphIndex);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line2(7, 1, thermometer_glyphIndex);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> line3(13, 1, celsiusSymbol_glyphIndex, <span class="stringliteral">&quot;C&quot;<\/span>);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> screen1(line1, line2, line3);<\/div><div class="line"><\/div><div class="line"><a name="_a3"><\/a><a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> menu(lcd, welcome_screen, screen1);<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> setup() {<\/div><div class="line">  Serial.begin(250000);<\/div><div class="line"><\/div><div class="line">  <span class="comment">\/\/ Here we create the characters using the LiquidCrystal library.<\/span><\/div><div class="line">  <span class="comment">\/\/ The fan glyph will be animated. This is the first glyph.<\/span><\/div><div class="line">  lcd.createChar(fan_glyphIndex, glyphs::fan1);<\/div><div class="line">  <span class="comment">\/\/ This is the second glyph, indexed after the first.<\/span><\/div><div class="line">  lcd.createChar(fan_glyphIndex + 1, glyphs::fan2);<\/div><div class="line">  lcd.createChar(thermometer_glyphIndex, glyphs::thermometer);<\/div><div class="line">  lcd.createChar(celsiusSymbol_glyphIndex, glyphs::celsiusSymbol);<\/div><div class="line"><\/div><div class="line">  <span class="comment">\/\/ This functions tells the LiquidLine objects that their first<\/span><\/div><div class="line">  <span class="comment">\/\/ variable is not an integer value but an index to a glyph.<\/span><\/div><div class="line">  line1.set_asGlyph(1);<\/div><div class="line">  line2.set_asGlyph(1);<\/div><div class="line">  line3.set_asGlyph(1);<\/div><div class="line"><\/div><div class="line">  lcd.begin(16, 2);<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> loop() {<\/div><div class="line">  <span class="comment">\/\/ This block cycles the value of the variable pointing to<\/span><\/div><div class="line">  <span class="comment">\/\/ one of the fan glyphs to point to the other.<\/span><\/div><div class="line">  <span class="keyword">static<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> lastMs_fanAnimation = 0;<\/div><div class="line">  <span class="keyword">static<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> period_fanAnimation = 500;<\/div><div class="line">  <span class="keywordflow">if<\/span> (millis() - lastMs_fanAnimation &gt; period_fanAnimation) {<\/div><div class="line">    lastMs_fanAnimation = millis();<\/div><div class="line">    <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> currentAnimation_fan = 0;<\/div><div class="line">    <span class="keywordflow">if<\/span> (currentAnimation_fan == 0) {<\/div><div class="line">      currentAnimation_fan = 1;<\/div><div class="line">      fan_glyphIndex = 1;<\/div><div class="line">    } <span class="keywordflow">else<\/span> {<\/div><div class="line">      currentAnimation_fan = 0;<\/div><div class="line">      fan_glyphIndex = 0;<\/div><div class="line">    }<\/div><div class="line">    <span class="comment">\/\/ The display must be updated to show the new glyph.<\/span><\/div><div class="line">    menu.softUpdate();<\/div><div class="line">  }<\/div><div class="line"><\/div><div class="line">  <span class="keyword">static<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> lastMs_nextScreen = 0;<\/div><div class="line">  <span class="keyword">static<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> period_nextScreen = 4000;<\/div><div class="line">  <span class="keywordflow">if<\/span> (millis() - lastMs_nextScreen &gt; period_nextScreen) {<\/div><div class="line">    lastMs_nextScreen = millis();<\/div><div class="line">    menu.next_screen();<\/div><div class="line">  }<\/div><div class="line">}<\/div><\/div><!-- fragment --> <\/div><!-- contents -->$/;"	a
_a0	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_h_system_menu_8ino-example.html	/^<div class="fragment"><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * LiquidMenu library - system_menu.ino<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * This example demonstrates the how to build a menu system.<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * Menu system is a collection of menus. To build a menu system<\/span><\/div><div class="line"><span class="comment"> * you need to put the menus into an object of class LiquidSystem.<\/span><\/div><div class="line"><span class="comment"> * The methods used on LiquidMenu should now be called directly<\/span><\/div><div class="line"><span class="comment"> * on the LiquidSystem object. To switch between menus use the<\/span><\/div><div class="line"><span class="comment"> * bool LiquidSystem::change_menu(LiquidMenu &amp;p_liquidMenu) method.<\/span><\/div><div class="line"><span class="comment"> * This method can be wrapped inside a callback function and called<\/span><\/div><div class="line"><span class="comment"> * on through the menu. This example also uses EEPROM to save the<\/span><\/div><div class="line"><span class="comment"> * state of the LED and reading period.<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * The circuit:<\/span><\/div><div class="line"><span class="comment"> * https:\/\/github.com\/VasilKalchev\/LiquidMenu\/blob\/master\/examples\/H_system_menu\/system_menu.png<\/span><\/div><div class="line"><span class="comment"> * - LCD RS pin to Arduino pin 12<\/span><\/div><div class="line"><span class="comment"> * - LCD E pin to Arduino pin 11<\/span><\/div><div class="line"><span class="comment"> * - LCD D4 pin to Arduino pin 5<\/span><\/div><div class="line"><span class="comment"> * - LCD D5 pin to Arduino pin 4<\/span><\/div><div class="line"><span class="comment"> * - LCD D6 pin to Arduino pin 3<\/span><\/div><div class="line"><span class="comment"> * - LCD D7 pin to Arduino pin 2<\/span><\/div><div class="line"><span class="comment"> * - LCD R\/W pin to ground<\/span><\/div><div class="line"><span class="comment"> * - LCD VSS pin to ground<\/span><\/div><div class="line"><span class="comment"> * - LCD VDD pin to 5V<\/span><\/div><div class="line"><span class="comment"> * - 10k ohm potentiometer: ends to 5V and ground, wiper to LCD V0<\/span><\/div><div class="line"><span class="comment"> * - 150 ohm resistor from 5V to LCD Anode<\/span><\/div><div class="line"><span class="comment"> * - LCD Cathode to ground<\/span><\/div><div class="line"><span class="comment"> * - ----<\/span><\/div><div class="line"><span class="comment"> * - Button (left) to Arduino pin A0 and ground<\/span><\/div><div class="line"><span class="comment"> * - Button (right) to Arduino pin 7 and ground<\/span><\/div><div class="line"><span class="comment"> * - Button (up) to Arduino pin 8 and ground<\/span><\/div><div class="line"><span class="comment"> * - Button (down) to Arduino pin 9 and ground<\/span><\/div><div class="line"><span class="comment"> * - Button (enter) to Arduino pin 10 and ground<\/span><\/div><div class="line"><span class="comment"> * - A PWM controlled device (LED...) to Arduino pin 6<\/span><\/div><div class="line"><span class="comment"> * - some analog input to Arduino pin A4 (unconnected also works)<\/span><\/div><div class="line"><span class="comment"> * - some analog input to Arduino pin A5 (unconnected also works)<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * Created July 24, 2016<\/span><\/div><div class="line"><span class="comment"> * by Vasil Kalchev<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> * https:\/\/github.com\/VasilKalchev\/LiquidMenu<\/span><\/div><div class="line"><span class="comment"> *<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><\/div><div class="line"><span class="preprocessor">#include &lt;LiquidCrystal.h&gt;<\/span><\/div><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="_liquid_menu_8h.html">LiquidMenu.h<\/a>&gt;<\/span><\/div><div class="line"><span class="preprocessor">#include &lt;EEPROM.h&gt;<\/span><\/div><div class="line"><span class="preprocessor">#include &quot;Button.h&quot;<\/span><\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Pin mapping for the display<\/span><\/div><div class="line"><span class="keyword">const<\/span> byte LCD_RS = 12;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_E = 11;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D4 = 5;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D5 = 4;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D6 = 3;<\/div><div class="line"><span class="keyword">const<\/span> byte LCD_D7 = 2;<\/div><div class="line"><span class="comment">\/\/LCD R\/W pin to ground<\/span><\/div><div class="line"><span class="comment">\/\/10K potentiometer to VO<\/span><\/div><div class="line">LiquidCrystal lcd(LCD_RS, LCD_E, LCD_D4, LCD_D5, LCD_D6, LCD_D7);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Button objects instantiation<\/span><\/div><div class="line"><span class="keyword">const<\/span> <span class="keywordtype">bool<\/span> pullup = <span class="keyword">true<\/span>;<\/div><div class="line">Button left(A0, pullup);<\/div><div class="line">Button right(7, pullup);<\/div><div class="line">Button up(8, pullup);<\/div><div class="line">Button down(9, pullup);<\/div><div class="line">Button enter(10, pullup);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Pin definitions and variables for their state.<\/span><\/div><div class="line"><span class="keyword">const<\/span> byte pin6 = 6;<\/div><div class="line">byte pin6_level = 0;<\/div><div class="line"><\/div><div class="line"><span class="keyword">const<\/span> byte pinA4 = A4;<\/div><div class="line">byte pinA4_value = 0;<\/div><div class="line"><\/div><div class="line"><span class="keyword">const<\/span> byte pinA5 = A5;<\/div><div class="line">byte pinA5_value = 0;<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ The analog reading sample period in seconds.<\/span><\/div><div class="line"><span class="comment">\/\/ It is later overwritten by it&#39;s EEPROM value.<\/span><\/div><div class="line"><span class="keywordtype">unsigned<\/span> <span class="keywordtype">short<\/span> sample_period = 2;<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Text used for indication for the save lines.<\/span><\/div><div class="line"><span class="keywordtype">char<\/span>* input_saved;<\/div><div class="line"><span class="keywordtype">char<\/span>* output_saved;<\/div><div class="line"><\/div><div class="line"><span class="keyword">enum<\/span> FunctionTypes {<\/div><div class="line">  increase = 1,<\/div><div class="line">  decrease = 2,<\/div><div class="line">};<\/div><div class="line"><\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ A LiquidLine object can be used more that once.<\/span><\/div><div class="line"><a name="_a0"><\/a><a class="code" href="class_liquid_line.html">LiquidLine<\/a> back_line(11, 1, <span class="stringliteral">&quot;\/BACK&quot;<\/span>);<\/div><div class="line"><\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> welcome_line1(1, 0, <span class="stringliteral">&quot;LiquidMenu &quot;<\/span>, <a name="a1"><\/a><a class="code" href="_liquid_menu_8h.html#a7189c07575adbb1070c89dcd0ab5e272">LIQUIDMENU_VERSION<\/a>);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> welcome_line2(1, 1, <span class="stringliteral">&quot;System example&quot;<\/span>);<\/div><div class="line"><a name="_a2"><\/a><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> welcome_screen(welcome_line1, welcome_line2);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ These lines direct to other menus.<\/span><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> outputs_line(0, 0, <span class="stringliteral">&quot;\/Outputs&quot;<\/span>);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> inputs_line(0, 1, <span class="stringliteral">&quot;\/Inputs&quot;<\/span>);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> io_screen(outputs_line, inputs_line);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ This is the first menu.<\/span><\/div><div class="line"><a name="_a3"><\/a><a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> main_menu(lcd, welcome_screen, io_screen, 1);<\/div><div class="line"><\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> pin6_line(0, 0, <span class="stringliteral">&quot;Pin 6: &quot;<\/span>, pin6_level);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> pin6_screen(pin6_line);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> oSave_line(0, 0, <span class="stringliteral">&quot;Save&quot;<\/span>, output_saved);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> oSecondary_screen(oSave_line, back_line);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ This is the second menu.<\/span><\/div><div class="line"><a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> outputs_menu(lcd, pin6_screen, oSecondary_screen);<\/div><div class="line"><\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> pinA4_line(0, 0, <span class="stringliteral">&quot;Pin A4: &quot;<\/span>, pinA4_value);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> pinA5_line(0, 1, <span class="stringliteral">&quot;Pin A5: &quot;<\/span>, pinA5_value);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> pinsA4_A5_screen(pinA4_line, pinA5_line);<\/div><div class="line"><\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> iSample_line(0, 0, <span class="stringliteral">&quot;Sample: &quot;<\/span>, sample_period, <span class="stringliteral">&quot;s&quot;<\/span>);<\/div><div class="line"><a class="code" href="class_liquid_line.html">LiquidLine<\/a> iSave_line(0, 1, <span class="stringliteral">&quot;Save&quot;<\/span>, input_saved);<\/div><div class="line"><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> iSecondary_screen(iSample_line, iSave_line, back_line);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ And this is the final third menu.<\/span><\/div><div class="line"><a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> inputs_menu(lcd, pinsA4_A5_screen, iSecondary_screen);<\/div><div class="line"><\/div><div class="line"><span class="comment">\/*<\/span><\/div><div class="line"><span class="comment"> * LiquidSystem object combines the LiquidMenu objects to form<\/span><\/div><div class="line"><span class="comment"> * a menu system. It provides the same functions as LiquidMenu<\/span><\/div><div class="line"><span class="comment"> * with the addition of add_menu() and change_menu().<\/span><\/div><div class="line"><span class="comment"> *\/<\/span><\/div><div class="line"><a name="_a4"><\/a><a class="code" href="class_liquid_system.html">LiquidSystem<\/a> menu_system(main_menu, outputs_menu, inputs_menu);<\/div><div class="line"><\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Checks all the buttons.<\/span><\/div><div class="line"><span class="keywordtype">void<\/span> buttonsCheck() {<\/div><div class="line">  <span class="keywordflow">if<\/span> (right.check() == LOW) {<\/div><div class="line">    menu_system.next_screen();<\/div><div class="line">  }<\/div><div class="line">  <span class="keywordflow">if<\/span> (left.check() == LOW) {<\/div><div class="line">    menu_system.previous_screen();<\/div><div class="line">  }<\/div><div class="line">  <span class="keywordflow">if<\/span> (up.check() == LOW) {<\/div><div class="line">    menu_system.call_function(increase);<\/div><div class="line">  }<\/div><div class="line">  <span class="keywordflow">if<\/span> (down.check() == LOW) {<\/div><div class="line">    menu_system.call_function(decrease);<\/div><div class="line">  }<\/div><div class="line">  <span class="keywordflow">if<\/span> (enter.check() == LOW) {<\/div><div class="line">    menu_system.switch_focus();<\/div><div class="line">  }<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="comment">\/\/ Callback function that will be attached to back_line.<\/span><\/div><div class="line"><span class="keywordtype">void<\/span> go_back() {<\/div><div class="line">  <span class="comment">\/\/ This function takes reference to the wanted menu.<\/span><\/div><div class="line">  menu_system.change_menu(main_menu);<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> goto_outputs_menu() {<\/div><div class="line">  menu_system.change_menu(outputs_menu);<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> goto_inputs_menu() {<\/div><div class="line">  menu_system.change_menu(inputs_menu);<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> increase_pin6() {<\/div><div class="line">  <span class="keywordflow">if<\/span> (pin6_level &lt; 225) {<\/div><div class="line">    pin6_level += 25;<\/div><div class="line">  } <span class="keywordflow">else<\/span> {<\/div><div class="line">    pin6_level = 250;<\/div><div class="line">  }<\/div><div class="line">  analogWrite(pin6, pin6_level);<\/div><div class="line">  output_saved = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot;  &quot;<\/span>;<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> decrease_pin6() {<\/div><div class="line">  <span class="keywordflow">if<\/span> (pin6_level &gt; 25) {<\/div><div class="line">    pin6_level -= 25;<\/div><div class="line">  } <span class="keywordflow">else<\/span> {<\/div><div class="line">    pin6_level = 0;<\/div><div class="line">  }<\/div><div class="line">  analogWrite(pin6, pin6_level);<\/div><div class="line">  output_saved = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot;  &quot;<\/span>;<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> save_input() {<\/div><div class="line">  EEPROM.put(11, sample_period);<\/div><div class="line">  input_saved = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot; *&quot;<\/span>;<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> save_output() {<\/div><div class="line">  EEPROM.put(9, pin6_level);<\/div><div class="line">  output_saved = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot; *&quot;<\/span>;<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> increase_samplePeriod() {<\/div><div class="line">  <span class="keywordflow">if<\/span> (sample_period &lt; 10) {<\/div><div class="line">    sample_period++;<\/div><div class="line">    input_saved = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot;  &quot;<\/span>;<\/div><div class="line">  }<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> decrease_samplePeriod() {<\/div><div class="line">  <span class="keywordflow">if<\/span> (sample_period &gt; 0) {<\/div><div class="line">    sample_period--;<\/div><div class="line">    input_saved = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot;  &quot;<\/span>;<\/div><div class="line">  }<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> setup() {<\/div><div class="line">  Serial.begin(250000);<\/div><div class="line"><\/div><div class="line">  pinMode(pin6, OUTPUT);<\/div><div class="line"><\/div><div class="line">  <span class="comment">\/\/ Reads the values recorded in the EEPROM<\/span><\/div><div class="line">  EEPROM.get(9, pin6_level);<\/div><div class="line">  EEPROM.get(11, sample_period);<\/div><div class="line">  analogWrite(pin6, pin6_level);<\/div><div class="line"><\/div><div class="line">  lcd.begin(16, 2);<\/div><div class="line"><\/div><div class="line">  back_line.set_focusPosition(Position::LEFT);<\/div><div class="line"><\/div><div class="line">  back_line.attach_function(1, go_back);<\/div><div class="line">  back_line.attach_function(2, go_back);<\/div><div class="line"><\/div><div class="line">  outputs_line.attach_function(1, goto_outputs_menu);<\/div><div class="line">  outputs_line.attach_function(2, goto_outputs_menu);<\/div><div class="line">  inputs_line.attach_function(1, goto_inputs_menu);<\/div><div class="line">  inputs_line.attach_function(2, goto_inputs_menu);<\/div><div class="line"><\/div><div class="line">  pin6_line.attach_function(increase, increase_pin6);<\/div><div class="line">  pin6_line.attach_function(decrease, decrease_pin6);<\/div><div class="line"><\/div><div class="line">  oSave_line.attach_function(1, save_output);<\/div><div class="line">  oSave_line.attach_function(2, save_output);<\/div><div class="line">  iSave_line.attach_function(1, save_input);<\/div><div class="line">  iSave_line.attach_function(2, save_input);<\/div><div class="line">  iSample_line.attach_function(increase, increase_samplePeriod);<\/div><div class="line">  iSample_line.attach_function(decrease, decrease_samplePeriod);<\/div><div class="line"><\/div><div class="line">  input_saved = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot; *&quot;<\/span>;<\/div><div class="line">  output_saved = (<span class="keywordtype">char<\/span>*)<span class="stringliteral">&quot; *&quot;<\/span>;<\/div><div class="line"><\/div><div class="line">  menu_system.update();<\/div><div class="line">}<\/div><div class="line"><\/div><div class="line"><span class="keywordtype">void<\/span> loop() {<\/div><div class="line">  buttonsCheck();<\/div><div class="line"><\/div><div class="line">  <span class="keyword">static<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> lastMillis_sample = 0;<\/div><div class="line">  <span class="keywordflow">if<\/span> (millis() - lastMillis_sample &gt; (sample_period * 1000)) {<\/div><div class="line">    lastMillis_sample = millis();<\/div><div class="line">    pinA4_value = analogRead(pinA4);<\/div><div class="line">    pinA5_value = analogRead(pinA5);<\/div><div class="line">    menu_system.update();<\/div><div class="line">  }<\/div><div class="line"><\/div><div class="line">}<\/div><\/div><!-- fragment --> <\/div><!-- contents -->$/;"	a
_acceleration	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    float          _acceleration;$/;"	m	class:AccelStepper
_backward	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    void (*_backward)();$/;"	m	class:AccelStepper
_c0	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    float _c0;$/;"	m	class:AccelStepper
_cmin	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    float _cmin; \/\/ at max speed$/;"	m	class:AccelStepper
_cn	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    float _cn;$/;"	m	class:AccelStepper
_currentMenu	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  uint8_t _currentMenu;$/;"	m	class:DataType::LiquidLine::LiquidSystem
_currentPos	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    long           _currentPos;    \/\/ Steps$/;"	m	class:AccelStepper
_currentScreen	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  uint8_t _currentScreen;$/;"	m	class:DataType::LiquidLine::LiquidMenu
_data_pins	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	/^  uint8_t _data_pins[8];$/;"	m	class:LiquidCrystal
_debounceDelay	.\Firmware\lib\LiquidMenu\examples\C_functions_menu\Button.h	/^	uint16_t _debounceDelay;$/;"	m	class:Button
_debounceDelay	.\Firmware\lib\LiquidMenu\examples\D_buttons_menu\Button.h	/^	uint16_t _debounceDelay;$/;"	m	class:Button
_debounceDelay	.\Firmware\lib\LiquidMenu\examples\F_focus_menu\Button.h	/^	uint16_t _debounceDelay;$/;"	m	class:Button
_debounceDelay	.\Firmware\lib\LiquidMenu\examples\H_system_menu\Button.h	/^	uint16_t _debounceDelay;$/;"	m	class:Button
_debounceDelay	.\Firmware\lib\LiquidMenu\examples\J_scrolling_menu\Button.h	/^	uint16_t _debounceDelay;$/;"	m	class:Button
_direction	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    boolean _direction; \/\/ 1 == CW$/;"	m	class:AccelStepper
_displayLineCount	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  uint8_t _displayLineCount; \/\/\/< The number of lines the display supports$/;"	m	class:DataType::LiquidLine::LiquidScreen
_displaycontrol	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	/^  uint8_t _displaycontrol;$/;"	m	class:LiquidCrystal
_displayfunction	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	/^  uint8_t _displayfunction;$/;"	m	class:LiquidCrystal
_displaymode	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	/^  uint8_t _displaymode;$/;"	m	class:LiquidCrystal
_enableInverted	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    bool           _enableInverted;$/;"	m	class:AccelStepper
_enablePin	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    uint8_t        _enablePin;$/;"	m	class:AccelStepper
_enable_pin	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	/^  uint8_t _enable_pin; \/\/ activated by a HIGH pulse.$/;"	m	class:LiquidCrystal
_focus	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  uint8_t _focus; \/\/\/< Index of the focused line$/;"	m	class:DataType::LiquidLine::LiquidScreen
_forward	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    void (*_forward)();$/;"	m	class:AccelStepper
_hidden	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  bool _hidden; \/\/\/< If hidden skips this screen when cycling$/;"	m	class:DataType::LiquidLine::LiquidScreen
_initialized	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	/^  uint8_t _initialized;$/;"	m	class:LiquidCrystal
_interface	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    uint8_t        _interface;          \/\/ 0, 1, 2, 4, 8, See MotorInterfaceType$/;"	m	class:AccelStepper
_lastDebounceTime	.\Firmware\lib\LiquidMenu\examples\C_functions_menu\Button.h	/^	uint32_t _lastDebounceTime;$/;"	m	class:Button
_lastDebounceTime	.\Firmware\lib\LiquidMenu\examples\D_buttons_menu\Button.h	/^	uint32_t _lastDebounceTime;$/;"	m	class:Button
_lastDebounceTime	.\Firmware\lib\LiquidMenu\examples\F_focus_menu\Button.h	/^	uint32_t _lastDebounceTime;$/;"	m	class:Button
_lastDebounceTime	.\Firmware\lib\LiquidMenu\examples\H_system_menu\Button.h	/^	uint32_t _lastDebounceTime;$/;"	m	class:Button
_lastDebounceTime	.\Firmware\lib\LiquidMenu\examples\J_scrolling_menu\Button.h	/^	uint32_t _lastDebounceTime;$/;"	m	class:Button
_lastMillis	.\Firmware\lib\LiquidMenu\examples\C_functions_menu\Button.h	/^	uint32_t _lastMillis;$/;"	m	class:Button
_lastMillis	.\Firmware\lib\LiquidMenu\examples\D_buttons_menu\Button.h	/^	uint32_t _lastMillis;$/;"	m	class:Button
_lastMillis	.\Firmware\lib\LiquidMenu\examples\F_focus_menu\Button.h	/^	uint32_t _lastMillis;$/;"	m	class:Button
_lastMillis	.\Firmware\lib\LiquidMenu\examples\H_system_menu\Button.h	/^	uint32_t _lastMillis;$/;"	m	class:Button
_lastMillis	.\Firmware\lib\LiquidMenu\examples\J_scrolling_menu\Button.h	/^	uint32_t _lastMillis;$/;"	m	class:Button
_lastState	.\Firmware\lib\LiquidMenu\examples\C_functions_menu\Button.h	/^	bool _lastState;$/;"	m	class:Button
_lastState	.\Firmware\lib\LiquidMenu\examples\D_buttons_menu\Button.h	/^	bool _lastState;$/;"	m	class:Button
_lastState	.\Firmware\lib\LiquidMenu\examples\F_focus_menu\Button.h	/^	bool _lastState;$/;"	m	class:Button
_lastState	.\Firmware\lib\LiquidMenu\examples\H_system_menu\Button.h	/^	bool _lastState;$/;"	m	class:Button
_lastState	.\Firmware\lib\LiquidMenu\examples\J_scrolling_menu\Button.h	/^	bool _lastState;$/;"	m	class:Button
_lastStepTime	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    unsigned long  _lastStepTime;$/;"	m	class:AccelStepper
_lineCount	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  uint8_t _lineCount; \/\/\/< Count of the LiquidLine objects$/;"	m	class:DataType::LiquidLine::LiquidScreen
_maxSpeed	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    float          _maxSpeed;$/;"	m	class:AccelStepper
_menuCount	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  uint8_t _menuCount; \/\/\/< Count of the LiquidMenu objects$/;"	m	class:DataType::LiquidLine::LiquidSystem
_minPulseWidth	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    unsigned int   _minPulseWidth;$/;"	m	class:AccelStepper
_n	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    long _n;$/;"	m	class:AccelStepper
_num_steppers	.\Firmware\lib\AccelStepper\MultiStepper.h	/^    uint8_t       _num_steppers;$/;"	m	class:MultiStepper
_numlines	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	/^  uint8_t _numlines;$/;"	m	class:LiquidCrystal
_p_liquidCrystal	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  DisplayClass *_p_liquidCrystal; \/\/\/< Pointer to the DisplayClass object$/;"	m	class:DataType::LiquidLine::LiquidMenu
_p_liquidLine	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  LiquidLine *_p_liquidLine[MAX_LINES]; \/\/\/< The LiquidLine objects$/;"	m	class:DataType::LiquidLine::LiquidScreen
_p_liquidMenu	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  LiquidMenu *_p_liquidMenu[MAX_MENUS]; \/\/\/< The LiquidMenu objects$/;"	m	class:DataType::LiquidLine::LiquidSystem
_p_liquidScreen	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  LiquidScreen *_p_liquidScreen[MAX_SCREENS]; \/\/\/< The LiquidScreen objects$/;"	m	class:DataType::LiquidLine::LiquidMenu
_pin	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    uint8_t        _pin[4];$/;"	m	class:AccelStepper
_pin	.\Firmware\lib\LiquidMenu\examples\C_functions_menu\Button.h	/^	const uint8_t _pin;$/;"	m	class:Button
_pin	.\Firmware\lib\LiquidMenu\examples\D_buttons_menu\Button.h	/^	const uint8_t _pin;$/;"	m	class:Button
_pin	.\Firmware\lib\LiquidMenu\examples\F_focus_menu\Button.h	/^	const uint8_t _pin;$/;"	m	class:Button
_pin	.\Firmware\lib\LiquidMenu\examples\H_system_menu\Button.h	/^	const uint8_t _pin;$/;"	m	class:Button
_pin	.\Firmware\lib\LiquidMenu\examples\J_scrolling_menu\Button.h	/^	const uint8_t _pin;$/;"	m	class:Button
_pinInverted	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    uint8_t        _pinInverted[4];$/;"	m	class:AccelStepper
_row_offsets	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	/^  uint8_t _row_offsets[4];$/;"	m	class:LiquidCrystal
_rs_pin	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	/^  uint8_t _rs_pin; \/\/ LOW: command.  HIGH: character.$/;"	m	class:LiquidCrystal
_rw_pin	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.h	/^  uint8_t _rw_pin; \/\/ LOW: write to LCD.  HIGH: read from LCD.$/;"	m	class:LiquidCrystal
_screenCount	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  uint8_t _screenCount; \/\/\/< Count of the LiquidScreen objects$/;"	m	class:DataType::LiquidLine::LiquidMenu
_speed	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    float          _speed;         \/\/ Steps per second$/;"	m	class:AccelStepper
_sqrt_twoa	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    float          _sqrt_twoa; \/\/ Precomputed sqrt(2*_acceleration)$/;"	m	class:AccelStepper
_state	.\Firmware\lib\LiquidMenu\examples\C_functions_menu\Button.h	/^	bool _state;$/;"	m	class:Button
_state	.\Firmware\lib\LiquidMenu\examples\D_buttons_menu\Button.h	/^	bool _state;$/;"	m	class:Button
_state	.\Firmware\lib\LiquidMenu\examples\F_focus_menu\Button.h	/^	bool _state;$/;"	m	class:Button
_state	.\Firmware\lib\LiquidMenu\examples\H_system_menu\Button.h	/^	bool _state;$/;"	m	class:Button
_state	.\Firmware\lib\LiquidMenu\examples\J_scrolling_menu\Button.h	/^	bool _state;$/;"	m	class:Button
_stepInterval	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    unsigned long  _stepInterval;$/;"	m	class:AccelStepper
_steppers	.\Firmware\lib\AccelStepper\MultiStepper.h	/^    AccelStepper* _steppers[MULTISTEPPER_MAX_STEPPERS];$/;"	m	class:MultiStepper
_targetPos	.\Firmware\lib\AccelStepper\AccelStepper.h	/^    long           _targetPos;     \/\/ Steps$/;"	m	class:AccelStepper
absMax	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	double absMax, absMin;$/;"	m	class:PID_ATune
absMin	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	double absMax, absMin;$/;"	m	class:PID_ATune
addStepper	.\Firmware\lib\AccelStepper\MultiStepper.cpp	/^boolean MultiStepper::addStepper(AccelStepper& stepper)$/;"	f	class:MultiStepper
add_line	.\Firmware\lib\LiquidMenu\src\LiquidScreen.cpp	/^bool LiquidScreen::add_line(LiquidLine &liquidLine) {$/;"	f	class:LiquidScreen
add_menu	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^bool LiquidSystem::add_menu(LiquidMenu &liquidMenu) {$/;"	f	class:LiquidSystem
add_screen	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^bool LiquidMenu::add_screen(LiquidScreen &liquidScreen) {$/;"	f	class:LiquidMenu
add_variable	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^  bool add_variable(T &variable) {$/;"	f	class:DataType::LiquidLine
attachInterrupt	.\Firmware\lib\Encoder\Encoder.h	964;"	d
attachInterrupt	.\Firmware\lib\Encoder\utility\interrupt_config.h	6;"	d
attach_function	.\Firmware\lib\LiquidMenu\src\LiquidLine.cpp	/^bool LiquidLine::attach_function(uint8_t number, void (*function)(void)) {$/;"	f	class:LiquidLine
attach_interrupt	.\Firmware\lib\Encoder\Encoder.h	/^	static uint8_t attach_interrupt(uint8_t pin, Encoder_internal_state_t *state) {$/;"	f	class:Encoder
authors	.\Firmware\lib\Arduino-PID-Library\library.json	/^  "authors":$/;"	f
autoscroll	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::autoscroll(void) {$/;"	f	class:LiquidCrystal
average	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.cpp	/^inline double AverageThermocouple::average(double (Thermocouple::*read)()) {$/;"	f	class:AverageThermocouple
baseName	.\Firmware\src\HAL\macros.h	/^    constexpr const char* baseName(const char *str) {$/;"	f	namespace:CompileTimeString
begin	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::begin(uint8_t cols, uint8_t lines, uint8_t dotsize) {$/;"	f	class:LiquidCrystal
blink	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::blink() {$/;"	f	class:LiquidCrystal
blinkLED	.\Firmware\src\HAL\megaatmega2560\megaatmega2560.cpp	/^  void blinkLED(){$/;"	f	namespace:HAL
boolFnPtr	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^typedef bool (*boolFnPtr)();$/;"	t
call_function	.\Firmware\lib\LiquidMenu\src\LiquidLine.cpp	/^bool LiquidLine::call_function(uint8_t number) const {$/;"	f	class:LiquidLine
call_function	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^bool LiquidMenu::call_function(uint8_t number) const {$/;"	f	class:LiquidMenu
call_function	.\Firmware\lib\LiquidMenu\src\LiquidScreen.cpp	/^bool LiquidScreen::call_function(uint8_t number) const {$/;"	f	class:LiquidScreen
call_function	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^bool LiquidSystem::call_function(uint8_t number) const {$/;"	f	class:LiquidSystem
celsius	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.h	/^    double celsius = 0;$/;"	m	class:final
celsiusToFahrenheit	.\Firmware\lib\MAX6675_Thermocouple\src\MAX6675_Thermocouple.cpp	/^inline double MAX6675_Thermocouple::celsiusToFahrenheit(const double celsius) {$/;"	f	class:MAX6675_Thermocouple
celsiusToKelvins	.\Firmware\lib\MAX6675_Thermocouple\src\MAX6675_Thermocouple.cpp	/^inline double MAX6675_Thermocouple::celsiusToKelvins(const double celsius) {$/;"	f	class:MAX6675_Thermocouple
change_menu	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^bool LiquidSystem::change_menu(LiquidMenu &p_liquidMenu) {$/;"	f	class:LiquidSystem
change_screen	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^bool LiquidMenu::change_screen(LiquidScreen *p_liquidScreen) {$/;"	f	class:LiquidMenu
change_screen	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^bool LiquidMenu::change_screen(uint8_t number) {$/;"	f	class:LiquidMenu
change_screen	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^bool LiquidSystem::change_screen(LiquidScreen *p_liquidScreen) {$/;"	f	class:LiquidSystem
change_screen	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^bool LiquidSystem::change_screen(uint8_t number) {$/;"	f	class:LiquidSystem
charFnPtr	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^typedef char (*charFnPtr)();$/;"	t
charPtrFnPtr	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^typedef char * (*charPtrFnPtr)();$/;"	t
check	.\Firmware\lib\LiquidMenu\examples\C_functions_menu\Button.h	/^	bool check(bool triggerState = LOW) {$/;"	f	class:Button
check	.\Firmware\lib\LiquidMenu\examples\D_buttons_menu\Button.h	/^	bool check(bool triggerState = LOW) {$/;"	f	class:Button
check	.\Firmware\lib\LiquidMenu\examples\F_focus_menu\Button.h	/^	bool check(bool triggerState = LOW) {$/;"	f	class:Button
check	.\Firmware\lib\LiquidMenu\examples\H_system_menu\Button.h	/^	bool check(bool triggerState = LOW) {$/;"	f	class:Button
check	.\Firmware\lib\LiquidMenu\examples\J_scrolling_menu\Button.h	/^	bool check(bool triggerState = LOW) {$/;"	f	class:Button
clear	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::clear()$/;"	f	class:LiquidCrystal
command	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^inline void LiquidCrystal::command(uint8_t value) {$/;"	f	class:LiquidCrystal
computeNewSpeed	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::computeNewSpeed()$/;"	f	class:AccelStepper
constcharPtrFnPtr	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^typedef const char * (*constcharPtrFnPtr)();$/;"	t
contains	.\Firmware\src\HAL\macros.h	/^    constexpr bool contains(const char *str, const char ch) {$/;"	f	namespace:CompileTimeString
controlType	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	int controlType;$/;"	m	class:PID_ATune
controllerDirection	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^	int controllerDirection;$/;"	m	class:PID
convertToId	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^function convertToId(search)$/;"	f
createChar	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::createChar(uint8_t location, uint8_t charmap[]) {$/;"	f	class:LiquidCrystal
createResults	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^function createResults()$/;"	f
cu	.\Firmware\src\HAL\macros.h	102;"	d
currentPosition	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^long AccelStepper::currentPosition()$/;"	f	class:AccelStepper
cursor	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::cursor() {$/;"	f	class:LiquidCrystal
cursorGrab	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^var cursorGrab = ' url("data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAMAAAAolt3jAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAAlQTFRFAAAA\/\/\/\/\/\/\/\/c3ilYwAAAAN0Uk5T\/\/8A18oNQQAAAD1JREFUeNp0zlEKACAIA9Bt9z90bZBZkQj29qFBEuBOzQHSnWTTyckEfqUuZgFvslH4ch3qLCO\/Kr8cAgwATw4Ax6XRCcoAAAAASUVORK5CYII="), move';$/;"	v
customFocus	.\Firmware\lib\LiquidMenu\src\glyphs.h	/^uint8_t customFocus[8] = {$/;"	m	namespace:glyph
define-members	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_menu__config_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_menu__debug_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\messages_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\serial__debugging_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
delayTime	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.h	/^    int delayTime;$/;"	m	class:final
description	.\Firmware\lib\Arduino-PID-Library\library.json	/^  "description": "A PID controller seeks to keep some input variable close to a desired setpoint by adjusting an output. The way in which it does this can be 'tuned' by adjusting three parameters (P,I,D).",$/;"	f
description	.\Firmware\lib\Encoder\library.json	/^  "description": "Encoder counts pulses from quadrature encoded signals, which are commonly available from rotary knobs, motor or shaft sensors and other position sensors",$/;"	f
details	.\Firmware\lib\AccelStepper\doc\classAccelStepper.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_line_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_menu_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_menu_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_menu__config_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_menu__debug_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_screen_8cpp.html	/^<\/div><a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_system_8cpp.html	/^<\/div><a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\class_liquid_line.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\class_liquid_menu.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\class_liquid_screen.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\class_liquid_system.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\examples_8dox.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\glyphs_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\messages_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\recognize_type_8cpp.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\serial__debugging_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\symbols_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
directRead	.\Firmware\lib\Encoder\utility\direct_pin_read.h	/^IO_REG_TYPE directRead(volatile IO_REG_TYPE *base, IO_REG_TYPE pin)$/;"	f
direct_pin_read_h_	.\Firmware\lib\Encoder\utility\direct_pin_read.h	2;"	d
disableOutputs	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void    AccelStepper::disableOutputs()$/;"	f	class:AccelStepper
dispKd	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^	double dispKd;				\/\/$/;"	m	class:PID
dispKi	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^	double dispKi;				\/\/   format for display purposes$/;"	m	class:PID
dispKp	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^	double dispKp;				\/\/ * we'll hold on to the tuning parameters in user-entered $/;"	m	class:PID
display	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::display() {$/;"	f	class:LiquidCrystal
distanceToGo	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^long AccelStepper::distanceToGo()$/;"	f	class:AccelStepper
doZoom	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^function doZoom(g,point,zoomFactor)$/;"	f
doubleFnPtr	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^typedef double (*doubleFnPtr)();$/;"	t
dumpMatrix	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^function dumpMatrix(matrix)$/;"	f
enableInterrupt	.\Firmware\lib\Encoder\utility\interrupt_config.h	/^static void enableInterrupt(uint8_t num)$/;"	f
enableOutputs	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void    AccelStepper::enableOutputs()$/;"	f	class:AccelStepper
enable_if	.\Firmware\src\HAL\macros.h	/^    template<bool, typename _Tp = void> struct enable_if { };$/;"	s	namespace:Private
enable_if	.\Firmware\src\HAL\macros.h	/^    template<typename _Tp>              struct enable_if<true, _Tp> { typedef _Tp type; };$/;"	s	namespace:Private
encoder	.\Firmware\lib\Encoder\Encoder.h	/^	Encoder_internal_state_t encoder;$/;"	m	class:Encoder
enum-members	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_menu_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
execPath	.\Firmware\.gcc-flags.json	/^  "execPath": "C:\/Users\/Cameron Palmer\/.platformio\/packages\/toolchain-atmelavr\/bin\/avr-g++.exe",$/;"	f
extDigitalRead	.\Firmware\src\HAL\megaatmega2560\fastio.cpp	/^uint8_t extDigitalRead(const int8_t pin) {$/;"	f
extDigitalRead	.\Firmware\src\HAL\megaatmega2560\fastio.h	72;"	d
extDigitalWrite	.\Firmware\src\HAL\megaatmega2560\fastio.cpp	/^void extDigitalWrite(const int8_t pin, const uint8_t state) {$/;"	f
extDigitalWrite	.\Firmware\src\HAL\megaatmega2560\fastio.h	71;"	d
extruderMotorStatus	.\Firmware\src\main.cpp	/^short extruderMotorStatus = 0; \/\/ The speed of the stepper motors in rpm$/;"	v
fahrenheit	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.h	/^    double fahrenheit = 0;$/;"	m	class:final
files	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\dir_68267d1309a1af8e8297ef4c3efbcdba.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
final	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.h	/^class AverageThermocouple final : public Thermocouple {$/;"	c
final	.\Firmware\lib\MAX6675_Thermocouple\src\MAX6675_Thermocouple.h	/^class MAX6675_Thermocouple final : public Thermocouple {$/;"	c
final	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.h	/^class SmoothThermocouple final : public Thermocouple {$/;"	c
findFirst	.\Firmware\src\HAL\macros.h	/^    constexpr const char* findFirst(const char *str, const char ch) {$/;"	f	namespace:CompileTimeString
findLastPos	.\Firmware\src\HAL\macros.h	/^    constexpr const char* findLastPos(const char *str, const char ch) {$/;"	f	namespace:CompileTimeString
findStringEnd	.\Firmware\src\HAL\macros.h	/^    constexpr const char* findStringEnd(const char *str) {$/;"	f	namespace:CompileTimeString
first_type_of	.\Firmware\src\HAL\macros.h	/^    template <typename T, typename ... Args> struct first_type_of { typedef T type; };$/;"	s	namespace:Private
first_type_of	.\Firmware\src\HAL\macros.h	/^    template <typename T> struct first_type_of<T> { typedef T type; };$/;"	s	namespace:Private
floatFnPtr	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^typedef float (*floatFnPtr)();$/;"	t
frameworks	.\Firmware\lib\Arduino-PID-Library\library.json	/^  "frameworks": "arduino"$/;"	f
frameworks	.\Firmware\lib\Encoder\library.json	/^  "frameworks": "arduino",$/;"	f
friends	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\class_liquid_line.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\class_liquid_menu.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\class_liquid_screen.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
func-members	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_line_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_menu_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\recognize_type_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
gccDefaultCFlags	.\Firmware\.gcc-flags.json	/^  "gccDefaultCFlags": "-fsyntax-only -std=gnu11 -fno-fat-lto-objects -Os -Wall -ffunction-sections -fdata-sections -flto -mmcu=atmega2560 -DPLATFORMIO=50101 -DARDUINO_AVR_MEGA2560 -DF_CPU=16000000L -DARDUINO_ARCH_AVR -DARDUINO=10808 -D__AVR_ATmega2560__",$/;"	f
gccDefaultCppFlags	.\Firmware\.gcc-flags.json	/^  "gccDefaultCppFlags": "-fsyntax-only -fno-exceptions -fno-threadsafe-statics -fpermissive -std=gnu++11 -Os -Wall -ffunction-sections -fdata-sections -flto -mmcu=atmega2560 -DPLATFORMIO=50101 -DARDUINO_AVR_MEGA2560 -DF_CPU=16000000L -DARDUINO_ARCH_AVR -DARDUINO=10808 -D__AVR_ATmega2560__",$/;"	f
gccErrorLimit	.\Firmware\.gcc-flags.json	/^  "gccErrorLimit": 15,$/;"	f
gccIncludePaths	.\Firmware\.gcc-flags.json	/^  "gccIncludePaths": "C:\/Flow-Firmware\/Firmware\/include,C:\/Flow-Firmware\/Firmware\/src,C:\/Users\/Cameron Palmer\/.platformio\/packages\/framework-arduino-avr\/cores\/arduino,C:\/Users\/Cameron Palmer\/.platformio\/packages\/framework-arduino-avr\/variants\/mega,C:\/Users\/Cameron Palmer\/.platformio\/packages\/framework-arduino-avr\/libraries\/EEPROM\/src,C:\/Users\/Cameron Palmer\/.platformio\/packages\/framework-arduino-avr\/libraries\/HID\/src,C:\/Users\/Cameron Palmer\/.platformio\/packages\/framework-arduino-avr\/libraries\/SPI\/src,C:\/Users\/Cameron Palmer\/.platformio\/packages\/framework-arduino-avr\/libraries\/SoftwareSerial\/src,C:\/Users\/Cameron Palmer\/.platformio\/packages\/framework-arduino-avr\/libraries\/Wire\/src,C:\/Users\/Cameron Palmer\/.platformio\/packages\/toolchain-atmelavr\/lib\/gcc\/avr\/7.3.0\/include,C:\/Users\/Cameron Palmer\/.platformio\/packages\/toolchain-atmelavr\/lib\/gcc\/avr\/7.3.0\/include-fixed,C:\/Users\/Cameron Palmer\/.platformio\/packages\/toolchain-atmelavr\/avr\/include",$/;"	f
gccSuppressWarnings	.\Firmware\.gcc-flags.json	/^  "gccSuppressWarnings": false$/;"	f
getEventPoint	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^function getEventPoint(evt)$/;"	f
getXPos	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^function getXPos(item)$/;"	f
getYPos	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^function getYPos(item)$/;"	f
get_currentScreen	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^LiquidScreen* LiquidMenu::get_currentScreen() const {$/;"	f	class:LiquidMenu
get_currentScreen	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^LiquidScreen* LiquidSystem::get_currentScreen() const {$/;"	f	class:LiquidSystem
get_focusedLine	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^uint8_t LiquidMenu::get_focusedLine() const {$/;"	f	class:LiquidMenu
get_focusedLine	.\Firmware\lib\LiquidMenu\src\LiquidScreen.cpp	/^uint8_t LiquidScreen::get_focusedLine() const {$/;"	f	class:LiquidScreen
get_focusedLine	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^uint8_t LiquidSystem::get_focusedLine() const {$/;"	f	class:LiquidSystem
glyph	.\Firmware\lib\LiquidMenu\src\glyphs.h	/^namespace glyph {$/;"	n
gtn	.\Firmware\src\HAL\macros.h	/^  inline const char* gtn(T*) {$/;"	f
handleMouseDown	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^function handleMouseDown(evt)$/;"	f
handleMouseMove	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^function handleMouseMove(evt)$/;"	f
handleMouseUp	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^function handleMouseUp(evt)$/;"	f
handleMouseWheel	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^function handleMouseWheel(evt)$/;"	f
handlePan	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^function handlePan(x,y)$/;"	f
handlePrint	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^function handlePrint(evt)$/;"	f
handleReset	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^function handleReset()$/;"	f
handleZoom	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^function handleZoom(evt,direction)$/;"	f
hide	.\Firmware\lib\LiquidMenu\src\LiquidScreen.cpp	/^void LiquidScreen::hide(bool hide) {$/;"	f	class:LiquidScreen
home	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::home()$/;"	f	class:LiquidCrystal
homeLevelWinder	.\Firmware\src\main.cpp	/^ void homeLevelWinder(){$/;"	f
inAuto	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^	bool inAuto, pOnE;$/;"	m	class:PID
include	.\Firmware\lib\Arduino-PID-Library\library.json	/^  "include": "PID_v1",$/;"	f
indexSectionLabels.0	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  0: "All",$/;"	p
indexSectionLabels.1	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  1: "Classes",$/;"	p
indexSectionLabels.2	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  2: "Files",$/;"	p
indexSectionLabels.3	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  3: "Functions",$/;"	p
indexSectionLabels.4	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  4: "Variables",$/;"	p
indexSectionLabels.5	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  5: "Enumerations",$/;"	p
indexSectionLabels.6	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  6: "Macros",$/;"	p
indexSectionLabels.7	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  7: "Pages"$/;"	p
indexSectionNames.0	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  0: "all",$/;"	p
indexSectionNames.1	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  1: "classes",$/;"	p
indexSectionNames.2	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  2: "files",$/;"	p
indexSectionNames.3	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  3: "functions",$/;"	p
indexSectionNames.4	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  4: "variables",$/;"	p
indexSectionNames.5	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  5: "enums",$/;"	p
indexSectionNames.6	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  6: "defines",$/;"	p
indexSectionNames.7	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  7: "pages"$/;"	p
indexSectionsWithContent.0	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  0: "acdghilmnoprstu",$/;"	p
indexSectionsWithContent.1	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  1: "l",$/;"	p
indexSectionsWithContent.2	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  2: "glr",$/;"	p
indexSectionsWithContent.3	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  3: "acghilnoprsu",$/;"	p
indexSectionsWithContent.4	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  4: "cdlmr",$/;"	p
indexSectionsWithContent.5	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  5: "dp",$/;"	p
indexSectionsWithContent.6	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  6: "dl",$/;"	p
indexSectionsWithContent.7	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\searchdata.js	/^  7: "t"$/;"	p
init	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::init(uint8_t fourbitmode, uint8_t rs, uint8_t rw, uint8_t enable,$/;"	f	class:LiquidCrystal
init	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^function init(evt)$/;"	f
init	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^void LiquidMenu::init() const {$/;"	f	class:LiquidMenu
initMenu	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\menu.js	/^function initMenu(relPath,searchEnabled,serverSide,searchPage,search) {$/;"	f
initMenu.makeTree	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\menu.js	/^  function makeTree(data,relPath) {$/;"	f
init_search	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^function init_search()$/;"	f
input	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	double *input, *output;$/;"	m	class:PID_ATune
int16tFnPtr	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^typedef int16_t (*int16tFnPtr)();$/;"	t
int32tFnPtr	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^typedef int32_t (*int32tFnPtr)();$/;"	t
int8tFnPtr	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^typedef int8_t (*int8tFnPtr)();$/;"	t
interruptArgs	.\Firmware\lib\Encoder\Encoder.cpp	/^Encoder_internal_state_t * Encoder::interruptArgs[];$/;"	m	class:Encoder	file:
interruptArgs	.\Firmware\lib\Encoder\Encoder.h	/^	static Encoder_internal_state_t * interruptArgs[ENCODER_ARGLIST_SIZE];$/;"	m	class:Encoder
interrupts_in_use	.\Firmware\lib\Encoder\Encoder.h	/^	uint8_t interrupts_in_use;$/;"	m	class:Encoder
isMax	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	bool isMax, isMin;$/;"	m	class:PID_ATune
isMin	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	bool isMax, isMin;$/;"	m	class:PID_ATune
isRunning	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^bool AccelStepper::isRunning()$/;"	f	class:AccelStepper
is_callable	.\Firmware\lib\LiquidMenu\src\LiquidLine.cpp	/^bool LiquidLine::is_callable(uint8_t number) const {$/;"	f	class:LiquidLine
is_callable	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^bool LiquidMenu::is_callable(uint8_t number) const {$/;"	f	class:LiquidMenu
is_callable	.\Firmware\lib\LiquidMenu\src\LiquidScreen.cpp	/^bool LiquidScreen::is_callable(uint8_t number) const {$/;"	f	class:LiquidScreen
is_callable	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^bool LiquidSystem::is_callable(uint8_t number) const {$/;"	f	class:LiquidSystem
is_same	.\Firmware\src\HAL\macros.h	/^    template<typename T, typename U> struct is_same { enum { value = false }; };$/;"	s	namespace:Private
is_same	.\Firmware\src\HAL\macros.h	/^    template<typename T> struct is_same<T, T> { enum { value = true }; };$/;"	s	namespace:Private
isr0	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr0(void) { update(interruptArgs[0]); }$/;"	f	class:Encoder
isr1	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr1(void) { update(interruptArgs[1]); }$/;"	f	class:Encoder
isr10	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr10(void) { update(interruptArgs[10]); }$/;"	f	class:Encoder
isr11	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr11(void) { update(interruptArgs[11]); }$/;"	f	class:Encoder
isr12	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr12(void) { update(interruptArgs[12]); }$/;"	f	class:Encoder
isr13	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr13(void) { update(interruptArgs[13]); }$/;"	f	class:Encoder
isr14	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr14(void) { update(interruptArgs[14]); }$/;"	f	class:Encoder
isr15	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr15(void) { update(interruptArgs[15]); }$/;"	f	class:Encoder
isr16	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr16(void) { update(interruptArgs[16]); }$/;"	f	class:Encoder
isr17	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr17(void) { update(interruptArgs[17]); }$/;"	f	class:Encoder
isr18	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr18(void) { update(interruptArgs[18]); }$/;"	f	class:Encoder
isr19	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr19(void) { update(interruptArgs[19]); }$/;"	f	class:Encoder
isr2	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr2(void) { update(interruptArgs[2]); }$/;"	f	class:Encoder
isr20	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr20(void) { update(interruptArgs[20]); }$/;"	f	class:Encoder
isr21	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr21(void) { update(interruptArgs[21]); }$/;"	f	class:Encoder
isr22	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr22(void) { update(interruptArgs[22]); }$/;"	f	class:Encoder
isr23	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr23(void) { update(interruptArgs[23]); }$/;"	f	class:Encoder
isr24	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr24(void) { update(interruptArgs[24]); }$/;"	f	class:Encoder
isr25	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr25(void) { update(interruptArgs[25]); }$/;"	f	class:Encoder
isr26	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr26(void) { update(interruptArgs[26]); }$/;"	f	class:Encoder
isr27	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr27(void) { update(interruptArgs[27]); }$/;"	f	class:Encoder
isr28	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr28(void) { update(interruptArgs[28]); }$/;"	f	class:Encoder
isr29	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr29(void) { update(interruptArgs[29]); }$/;"	f	class:Encoder
isr3	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr3(void) { update(interruptArgs[3]); }$/;"	f	class:Encoder
isr30	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr30(void) { update(interruptArgs[30]); }$/;"	f	class:Encoder
isr31	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr31(void) { update(interruptArgs[31]); }$/;"	f	class:Encoder
isr32	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr32(void) { update(interruptArgs[32]); }$/;"	f	class:Encoder
isr33	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr33(void) { update(interruptArgs[33]); }$/;"	f	class:Encoder
isr34	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr34(void) { update(interruptArgs[34]); }$/;"	f	class:Encoder
isr35	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr35(void) { update(interruptArgs[35]); }$/;"	f	class:Encoder
isr36	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr36(void) { update(interruptArgs[36]); }$/;"	f	class:Encoder
isr37	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr37(void) { update(interruptArgs[37]); }$/;"	f	class:Encoder
isr38	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr38(void) { update(interruptArgs[38]); }$/;"	f	class:Encoder
isr39	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr39(void) { update(interruptArgs[39]); }$/;"	f	class:Encoder
isr4	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr4(void) { update(interruptArgs[4]); }$/;"	f	class:Encoder
isr40	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr40(void) { update(interruptArgs[40]); }$/;"	f	class:Encoder
isr41	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr41(void) { update(interruptArgs[41]); }$/;"	f	class:Encoder
isr42	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr42(void) { update(interruptArgs[42]); }$/;"	f	class:Encoder
isr43	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr43(void) { update(interruptArgs[43]); }$/;"	f	class:Encoder
isr44	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr44(void) { update(interruptArgs[44]); }$/;"	f	class:Encoder
isr45	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr45(void) { update(interruptArgs[45]); }$/;"	f	class:Encoder
isr46	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr46(void) { update(interruptArgs[46]); }$/;"	f	class:Encoder
isr47	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr47(void) { update(interruptArgs[47]); }$/;"	f	class:Encoder
isr48	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr48(void) { update(interruptArgs[48]); }$/;"	f	class:Encoder
isr49	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr49(void) { update(interruptArgs[49]); }$/;"	f	class:Encoder
isr5	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr5(void) { update(interruptArgs[5]); }$/;"	f	class:Encoder
isr50	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr50(void) { update(interruptArgs[50]); }$/;"	f	class:Encoder
isr51	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr51(void) { update(interruptArgs[51]); }$/;"	f	class:Encoder
isr52	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr52(void) { update(interruptArgs[52]); }$/;"	f	class:Encoder
isr53	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr53(void) { update(interruptArgs[53]); }$/;"	f	class:Encoder
isr54	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr54(void) { update(interruptArgs[54]); }$/;"	f	class:Encoder
isr55	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr55(void) { update(interruptArgs[55]); }$/;"	f	class:Encoder
isr56	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr56(void) { update(interruptArgs[56]); }$/;"	f	class:Encoder
isr57	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr57(void) { update(interruptArgs[57]); }$/;"	f	class:Encoder
isr58	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr58(void) { update(interruptArgs[58]); }$/;"	f	class:Encoder
isr59	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr59(void) { update(interruptArgs[59]); }$/;"	f	class:Encoder
isr6	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr6(void) { update(interruptArgs[6]); }$/;"	f	class:Encoder
isr7	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr7(void) { update(interruptArgs[7]); }$/;"	f	class:Encoder
isr8	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr8(void) { update(interruptArgs[8]); }$/;"	f	class:Encoder
isr9	.\Firmware\lib\Encoder\Encoder.h	/^	static void isr9(void) { update(interruptArgs[9]); }$/;"	f	class:Encoder
justchanged	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	bool justchanged;$/;"	m	class:PID_ATune
justevaled	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	bool justevaled;$/;"	m	class:PID_ATune
kd	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^    double kd;                  \/\/ * (D)erivative Tuning Parameter$/;"	m	class:PID
kelvin	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.h	/^    double kelvin = 0;$/;"	m	class:final
keywords	.\Firmware\lib\Arduino-PID-Library\library.json	/^  "keywords": "PID, controller, signal",$/;"	f
keywords	.\Firmware\lib\Encoder\library.json	/^  "keywords": "encoder, signal, pulse",$/;"	f
ki	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^    double ki;                  \/\/ * (I)ntegral Tuning Parameter$/;"	m	class:PID
kp	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^	double kp;                  \/\/ * (P)roportional Tuning Parameter$/;"	m	class:PID
l00001	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<h1>AccelStepper.h<\/h1><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 <span class="comment">\/\/ AccelStepper.h<\/span>$/;"	a
l00001	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_menu_8h_source.html	/^<a href="_liquid_menu_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="comment">\/*<\/span><\/div><div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<span class="comment">The MIT License (MIT)<\/span><\/div><div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="comment">Copyright (c) 2016 Vasil Kalchev<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="comment">Permission is hereby granted, free of charge, to any person obtaining a copy<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="comment">of this software and associated documentation files (the &quot;Software&quot;), to deal<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="comment">in the Software without restriction, including without limitation the rights<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="comment">to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="comment">copies of the Software, and to permit persons to whom the Software is<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="comment">furnished to do so, subject to the following conditions:<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="comment">The above copyright notice and this permission notice shall be included in all<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="comment">copies or substantial portions of the Software.<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="comment">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="comment">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="comment">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="comment">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE<\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="comment">SOFTWARE.<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="comment">*\/<\/span><\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<span class="preprocessor">#pragma once<\/span><\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<span class="preprocessor">#include &lt;stdint.h&gt;<\/span><\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<span class="preprocessor">#if defined(__AVR__)<\/span><\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<span class="preprocessor"># include &lt;avr\/pgmspace.h&gt;<\/span><\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;<\/span><\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;<\/span><\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_liquid_menu__config_8h.html">LiquidMenu_config.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_liquid_menu__debug_8h.html">LiquidMenu_debug.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<span class="preprocessor">#if LIQUIDMENU_LIBRARY == LiquidCrystal_LIBRARY<\/span><\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<span class="preprocessor"># pragma message (&quot;LiquidMenu: Selected &#39;LiquidCrystal&#39; (parallel) library. Edit &#39;LiquidMenu_config.h&#39; file to change it.&quot;)<\/span><\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<span class="preprocessor">#elif LIQUIDMENU_LIBRARY == LiquidCrystal_I2C_LIBRARY<\/span><\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<span class="preprocessor"># pragma message (&quot;LiquidMenu: Selected &#39;LiquidCrystal_I2C&#39; (I2C) library. Edit &#39;LiquidMenu_config.h&#39; file to change it.&quot;)<\/span><\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<span class="preprocessor">#else<\/span><\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<span class="preprocessor"># pragma message (&quot;LiquidMenu: Selected custom library. Edit &#39;LiquidMenu_config.h&#39; file to change it.&quot;)<\/span><\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<span class="preprocessor">#if LIQUIDMENU_DEBUG<\/span><\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<span class="preprocessor"># warning &quot;LiquidMenu: Debugging messages are enabled.&quot;<\/span><\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<span class="keyword">typedef<\/span> bool (*boolFnPtr)();<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<span class="keyword">typedef<\/span> int8_t (*int8tFnPtr)();<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<span class="keyword">typedef<\/span> uint8_t (*uint8tFnPtr)();<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<span class="keyword">typedef<\/span> int16_t (*int16tFnPtr)();<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<span class="keyword">typedef<\/span> uint16_t (*uint16tFnPtr)();<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<span class="keyword">typedef<\/span> int32_t (*int32tFnPtr)();<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<span class="keyword">typedef<\/span> uint32_t (*uint32tFnPtr)();<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<span class="keyword">typedef<\/span> float (*floatFnPtr)();<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<span class="keyword">typedef<\/span> double (*doubleFnPtr)();<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<span class="keyword">typedef<\/span> char (*charFnPtr)();<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<span class="keyword">typedef<\/span> <span class="keywordtype">char<\/span> * (*charPtrFnPtr)();<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<span class="keyword">typedef<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * (*constcharPtrFnPtr)();<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno"><a class="line" href="_liquid_menu_8h.html#a7189c07575adbb1070c89dcd0ab5e272">   79<\/a><\/span>&#160;<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> <a class="code" href="_liquid_menu_8h.html#a7189c07575adbb1070c89dcd0ab5e272">LIQUIDMENU_VERSION<\/a>[] = <span class="stringliteral">&quot;1.5&quot;<\/span>; <\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno"><a class="line" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">   85<\/a><\/span>&#160;<span class="keyword">enum class<\/span> <a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> : uint8_t {<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;  NOT_USED = 0,<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;  BOOL = 1, BOOLEAN = 1,<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;  INT8_T = 8,<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;  UINT8_T = 9,<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;  INT16_T = 16,<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;  UINT16_T = 17,<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;  INT32_T = 32,<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;  UINT32_T = 33,<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;  FLOAT = 50, DOUBLE = 50,<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;  CHAR = 60,<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;  CHAR_PTR = 61,<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;  CONST_CHAR_PTR = 62,<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;  PROG_CONST_CHAR_PTR = 65,<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;  GLYPH = 70,<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;  BOOL_GETTER = 201, BOOLEAN_GETTER = 201,<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;  INT8_T_GETTER = 208,<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;  UINT8_T_GETTER = 209, BYTE_GETTER = 209,<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;  INT16_T_GETTER = 216,<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;  UINT16_T_GETTER = 217,<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;  INT32_T_GETTER = 232,<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;  UINT32_T_GETTER = 233,<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;  FLOAT_GETTER = 240, DOUBLE_GETTER = 240,<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;  CHAR_GETTER = 250,<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;  CHAR_PTR_GETTER = 251,<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;  CONST_CHAR_PTR_GETTER = 252<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;};<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<\/div><div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;<span class="comment">\/*<\/span><\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;<span class="comment">Used to store and set the relative or absolute position of the focus indicator.<\/span><\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;<span class="comment">*\/<\/span><\/div><div class="line"><a name="l00117"><\/a><span class="lineno"><a class="line" href="_liquid_menu_8h.html#a67752aed4021e5d9f292a38f9df18ab2">  117<\/a><\/span>&#160;<span class="keyword">enum class<\/span> <a class="code" href="_liquid_menu_8h.html#a67752aed4021e5d9f292a38f9df18ab2">Position<\/a> : uint8_t {<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;  RIGHT = 1, NORMAL = 1,<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;  LEFT = 2,<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;  CUSTOM = 3,<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;};<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;<\/div><div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(<span class="keywordtype">bool<\/span> variable);<\/div><div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;<\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(<span class="keywordtype">char<\/span> variable);<\/div><div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(<span class="keywordtype">char<\/span>* variable);<\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;<\/div><div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(<span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* variable);<\/div><div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;<\/div><div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(int8_t variable);<\/div><div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;<\/div><div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(uint8_t variable);<\/div><div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;<\/div><div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(int16_t variable);<\/div><div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;<\/div><div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(uint16_t variable);<\/div><div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;<\/div><div class="line"><a name="l00182"><\/a><span class="lineno">  182<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(int32_t variable);<\/div><div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;<\/div><div class="line"><a name="l00188"><\/a><span class="lineno">  188<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(uint32_t variable);<\/div><div class="line"><a name="l00189"><\/a><span class="lineno">  189<\/span>&#160;<\/div><div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(<span class="keywordtype">float<\/span> variable);<\/div><div class="line"><a name="l00195"><\/a><span class="lineno">  195<\/span>&#160;<\/div><div class="line"><a name="l00200"><\/a><span class="lineno">  200<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(<span class="keywordtype">double<\/span> variable);<\/div><div class="line"><a name="l00201"><\/a><span class="lineno">  201<\/span>&#160;<\/div><div class="line"><a name="l00202"><\/a><span class="lineno">  202<\/span>&#160;<\/div><div class="line"><a name="l00207"><\/a><span class="lineno">  207<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(boolFnPtr variable);<\/div><div class="line"><a name="l00208"><\/a><span class="lineno">  208<\/span>&#160;<\/div><div class="line"><a name="l00209"><\/a><span class="lineno">  209<\/span>&#160;<\/div><div class="line"><a name="l00214"><\/a><span class="lineno">  214<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(int8tFnPtr variable);<\/div><div class="line"><a name="l00215"><\/a><span class="lineno">  215<\/span>&#160;<\/div><div class="line"><a name="l00216"><\/a><span class="lineno">  216<\/span>&#160;<\/div><div class="line"><a name="l00221"><\/a><span class="lineno">  221<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(uint8tFnPtr variable);<\/div><div class="line"><a name="l00222"><\/a><span class="lineno">  222<\/span>&#160;<\/div><div class="line"><a name="l00223"><\/a><span class="lineno">  223<\/span>&#160;<\/div><div class="line"><a name="l00228"><\/a><span class="lineno">  228<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(int16tFnPtr variable);<\/div><div class="line"><a name="l00229"><\/a><span class="lineno">  229<\/span>&#160;<\/div><div class="line"><a name="l00230"><\/a><span class="lineno">  230<\/span>&#160;<\/div><div class="line"><a name="l00235"><\/a><span class="lineno">  235<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(uint16tFnPtr variable);<\/div><div class="line"><a name="l00236"><\/a><span class="lineno">  236<\/span>&#160;<\/div><div class="line"><a name="l00237"><\/a><span class="lineno">  237<\/span>&#160;<\/div><div class="line"><a name="l00242"><\/a><span class="lineno">  242<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(int32tFnPtr variable);<\/div><div class="line"><a name="l00243"><\/a><span class="lineno">  243<\/span>&#160;<\/div><div class="line"><a name="l00244"><\/a><span class="lineno">  244<\/span>&#160;<\/div><div class="line"><a name="l00249"><\/a><span class="lineno">  249<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(uint32tFnPtr varible);<\/div><div class="line"><a name="l00250"><\/a><span class="lineno">  250<\/span>&#160;<\/div><div class="line"><a name="l00251"><\/a><span class="lineno">  251<\/span>&#160;<\/div><div class="line"><a name="l00256"><\/a><span class="lineno">  256<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(floatFnPtr variable);<\/div><div class="line"><a name="l00257"><\/a><span class="lineno">  257<\/span>&#160;<\/div><div class="line"><a name="l00262"><\/a><span class="lineno">  262<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(doubleFnPtr variable);<\/div><div class="line"><a name="l00263"><\/a><span class="lineno">  263<\/span>&#160;<\/div><div class="line"><a name="l00264"><\/a><span class="lineno">  264<\/span>&#160;<\/div><div class="line"><a name="l00269"><\/a><span class="lineno">  269<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(charFnPtr variable);<\/div><div class="line"><a name="l00270"><\/a><span class="lineno">  270<\/span>&#160;<\/div><div class="line"><a name="l00271"><\/a><span class="lineno">  271<\/span>&#160;<\/div><div class="line"><a name="l00276"><\/a><span class="lineno">  276<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(charPtrFnPtr variable);<\/div><div class="line"><a name="l00277"><\/a><span class="lineno">  277<\/span>&#160;<\/div><div class="line"><a name="l00278"><\/a><span class="lineno">  278<\/span>&#160;<\/div><div class="line"><a name="l00283"><\/a><span class="lineno">  283<\/span>&#160;<a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(constcharPtrFnPtr variable);<\/div><div class="line"><a name="l00285"><\/a><span class="lineno">  285<\/span>&#160;<\/div><div class="line"><a name="l00286"><\/a><span class="lineno">  286<\/span>&#160;<\/div><div class="line"><a name="l00287"><\/a><span class="lineno">  287<\/span>&#160;<\/div><div class="line"><a name="l00289"><\/a><span class="lineno">  289<\/span>&#160;<\/div><div class="line"><a name="l00294"><\/a><span class="lineno">  294<\/span>&#160;<span class="keywordtype">void<\/span> <a class="code" href="_liquid_menu_8h.html#afdff178c8b0daebe2b907aad7637ac8c">print_me<\/a>(uintptr_t address);<\/div><div class="line"><a name="l00295"><\/a><span class="lineno">  295<\/span>&#160;<\/div><div class="line"><a name="l00296"><\/a><span class="lineno">  296<\/span>&#160;<\/div><div class="line"><a name="l00298"><\/a><span class="lineno">  298<\/span>&#160;<\/div><div class="line"><a name="l00305"><\/a><span class="lineno"><a class="line" href="class_liquid_line.html">  305<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="class_liquid_line.html">LiquidLine<\/a> {<\/div><div class="line"><a name="l00306"><\/a><span class="lineno">  306<\/span>&#160;  <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a>;<\/div><div class="line"><a name="l00307"><\/a><span class="lineno">  307<\/span>&#160;<\/div><div class="line"><a name="l00308"><\/a><span class="lineno">  308<\/span>&#160;<span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00311"><\/a><span class="lineno">  311<\/span>&#160;<\/div><div class="line"><a name="l00313"><\/a><span class="lineno">  313<\/span>&#160;<\/div><div class="line"><a name="l00319"><\/a><span class="lineno"><a class="line" href="class_liquid_line.html#a38116c0f5f0a7803b65f344d8e6f948b">  319<\/a><\/span>&#160;  <a class="code" href="class_liquid_line.html#a38116c0f5f0a7803b65f344d8e6f948b">LiquidLine<\/a>(uint8_t column, uint8_t row)<\/div><div class="line"><a name="l00320"><\/a><span class="lineno">  320<\/span>&#160;    : _row(row), _column(column), _focusRow(row - 1),<\/div><div class="line"><a name="l00321"><\/a><span class="lineno">  321<\/span>&#160;      _focusColumn(column - 1), _focusPosition(<a class="code" href="_liquid_menu_8h.html#a67752aed4021e5d9f292a38f9df18ab2">Position<\/a>::NORMAL),<\/div><div class="line"><a name="l00322"><\/a><span class="lineno">  322<\/span>&#160;      _variableCount(0), _focusable(false) {<\/div><div class="line"><a name="l00323"><\/a><span class="lineno">  323<\/span>&#160;    <span class="keywordflow">for<\/span> (uint8_t i = 0; i &lt; <a class="code" href="_liquid_menu__config_8h.html#a391500ead9260b43f8cb31151c74d65e">MAX_VARIABLES<\/a>; i++) {<\/div><div class="line"><a name="l00324"><\/a><span class="lineno">  324<\/span>&#160;      _variable[i] = <span class="keyword">nullptr<\/span>;<\/div><div class="line"><a name="l00325"><\/a><span class="lineno">  325<\/span>&#160;      _variableType[i] = DataType::NOT_USED;<\/div><div class="line"><a name="l00326"><\/a><span class="lineno">  326<\/span>&#160;    }<\/div><div class="line"><a name="l00327"><\/a><span class="lineno">  327<\/span>&#160;    <span class="keywordflow">for<\/span> (uint8_t f = 0; f &lt; <a class="code" href="_liquid_menu__config_8h.html#aedd2637cf600dbab38e5164475ee8cd8">MAX_FUNCTIONS<\/a>; f++) {<\/div><div class="line"><a name="l00328"><\/a><span class="lineno">  328<\/span>&#160;      _function[f] = 0;<\/div><div class="line"><a name="l00329"><\/a><span class="lineno">  329<\/span>&#160;    }<\/div><div class="line"><a name="l00330"><\/a><span class="lineno">  330<\/span>&#160;    _floatDecimalPlaces = 2;<\/div><div class="line"><a name="l00331"><\/a><span class="lineno">  331<\/span>&#160;  }<\/div><div class="line"><a name="l00332"><\/a><span class="lineno">  332<\/span>&#160;<\/div><div class="line"><a name="l00334"><\/a><span class="lineno">  334<\/span>&#160;<\/div><div class="line"><a name="l00339"><\/a><span class="lineno">  339<\/span>&#160;  <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> A&gt;<\/div><div class="line"><a name="l00340"><\/a><span class="lineno"><a class="line" href="class_liquid_line.html#a36a3a4f5375b1e869059c68cfe23d760">  340<\/a><\/span>&#160;  <a class="code" href="class_liquid_line.html#a36a3a4f5375b1e869059c68cfe23d760">LiquidLine<\/a>(uint8_t column, uint8_t row, A &amp;variableA)<\/div><div class="line"><a name="l00341"><\/a><span class="lineno">  341<\/span>&#160;    : <a class="code" href="class_liquid_line.html">LiquidLine<\/a>(column, row) {<\/div><div class="line"><a name="l00342"><\/a><span class="lineno">  342<\/span>&#160;    <a class="code" href="class_liquid_line.html#a58fa9ef1d59c5cf852aa0e5d834f2365">add_variable<\/a>(variableA);<\/div><div class="line"><a name="l00343"><\/a><span class="lineno">  343<\/span>&#160;  }<\/div><div class="line"><a name="l00344"><\/a><span class="lineno">  344<\/span>&#160;<\/div><div class="line"><a name="l00346"><\/a><span class="lineno">  346<\/span>&#160;<\/div><div class="line"><a name="l00352"><\/a><span class="lineno">  352<\/span>&#160;  <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> A, <span class="keyword">typename<\/span> B&gt;<\/div><div class="line"><a name="l00353"><\/a><span class="lineno"><a class="line" href="class_liquid_line.html#aa34f3721ddda4e1c50cfa52429ff438a">  353<\/a><\/span>&#160;  <a class="code" href="class_liquid_line.html#aa34f3721ddda4e1c50cfa52429ff438a">LiquidLine<\/a>(uint8_t column, uint8_t row,<\/div><div class="line"><a name="l00354"><\/a><span class="lineno">  354<\/span>&#160;             A &amp;variableA, B &amp;variableB)<\/div><div class="line"><a name="l00355"><\/a><span class="lineno">  355<\/span>&#160;    : <a class="code" href="class_liquid_line.html">LiquidLine<\/a>(column, row, variableA) {<\/div><div class="line"><a name="l00356"><\/a><span class="lineno">  356<\/span>&#160;    <a class="code" href="class_liquid_line.html#a58fa9ef1d59c5cf852aa0e5d834f2365">add_variable<\/a>(variableB);<\/div><div class="line"><a name="l00357"><\/a><span class="lineno">  357<\/span>&#160;  }<\/div><div class="line"><a name="l00358"><\/a><span class="lineno">  358<\/span>&#160;<\/div><div class="line"><a name="l00360"><\/a><span class="lineno">  360<\/span>&#160;<\/div><div class="line"><a name="l00367"><\/a><span class="lineno">  367<\/span>&#160;  <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> A, <span class="keyword">typename<\/span> B, <span class="keyword">typename<\/span> C&gt;<\/div><div class="line"><a name="l00368"><\/a><span class="lineno"><a class="line" href="class_liquid_line.html#ac1eb7ed72384c5f024ed12cdf7c85a95">  368<\/a><\/span>&#160;  <a class="code" href="class_liquid_line.html#ac1eb7ed72384c5f024ed12cdf7c85a95">LiquidLine<\/a>(uint8_t column, uint8_t row,<\/div><div class="line"><a name="l00369"><\/a><span class="lineno">  369<\/span>&#160;             A &amp;variableA, B &amp;variableB, C &amp;variableC)<\/div><div class="line"><a name="l00370"><\/a><span class="lineno">  370<\/span>&#160;    : <a class="code" href="class_liquid_line.html">LiquidLine<\/a>(column, row, variableA, variableB) {<\/div><div class="line"><a name="l00371"><\/a><span class="lineno">  371<\/span>&#160;    <a class="code" href="class_liquid_line.html#a58fa9ef1d59c5cf852aa0e5d834f2365">add_variable<\/a>(variableC);<\/div><div class="line"><a name="l00372"><\/a><span class="lineno">  372<\/span>&#160;  }<\/div><div class="line"><a name="l00373"><\/a><span class="lineno">  373<\/span>&#160;<\/div><div class="line"><a name="l00375"><\/a><span class="lineno">  375<\/span>&#160;<\/div><div class="line"><a name="l00383"><\/a><span class="lineno">  383<\/span>&#160;  <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> A, <span class="keyword">typename<\/span> B, <span class="keyword">typename<\/span> C, <span class="keyword">typename<\/span> D&gt;<\/div><div class="line"><a name="l00384"><\/a><span class="lineno"><a class="line" href="class_liquid_line.html#a29cd61001ecc4993979f8629bc037dd5">  384<\/a><\/span>&#160;  <a class="code" href="class_liquid_line.html#a29cd61001ecc4993979f8629bc037dd5">LiquidLine<\/a>(uint8_t column, uint8_t row,<\/div><div class="line"><a name="l00385"><\/a><span class="lineno">  385<\/span>&#160;             A &amp;variableA, B &amp;variableB, C &amp;variableC, D &amp;variableD)<\/div><div class="line"><a name="l00386"><\/a><span class="lineno">  386<\/span>&#160;    : <a class="code" href="class_liquid_line.html">LiquidLine<\/a>(column, row, variableA, variableB, variableC) {<\/div><div class="line"><a name="l00387"><\/a><span class="lineno">  387<\/span>&#160;    <a class="code" href="class_liquid_line.html#a58fa9ef1d59c5cf852aa0e5d834f2365">add_variable<\/a>(variableD);<\/div><div class="line"><a name="l00388"><\/a><span class="lineno">  388<\/span>&#160;  }<\/div><div class="line"><a name="l00389"><\/a><span class="lineno">  389<\/span>&#160;<\/div><div class="line"><a name="l00391"><\/a><span class="lineno">  391<\/span>&#160;<\/div><div class="line"><a name="l00392"><\/a><span class="lineno">  392<\/span>&#160;<\/div><div class="line"><a name="l00395"><\/a><span class="lineno">  395<\/span>&#160;<\/div><div class="line"><a name="l00397"><\/a><span class="lineno">  397<\/span>&#160;<\/div><div class="line"><a name="l00408"><\/a><span class="lineno">  408<\/span>&#160;  <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00409"><\/a><span class="lineno"><a class="line" href="class_liquid_line.html#a58fa9ef1d59c5cf852aa0e5d834f2365">  409<\/a><\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_line.html#a58fa9ef1d59c5cf852aa0e5d834f2365">add_variable<\/a>(T &amp;variable) {<\/div><div class="line"><a name="l00410"><\/a><span class="lineno">  410<\/span>&#160;    <a class="code" href="_liquid_menu_8h.html#afdff178c8b0daebe2b907aad7637ac8c">print_me<\/a>(reinterpret_cast&lt;uintptr_t&gt;(<span class="keyword">this<\/span>));<\/div><div class="line"><a name="l00411"><\/a><span class="lineno">  411<\/span>&#160;    <span class="keywordflow">if<\/span> (_variableCount &lt; <a class="code" href="_liquid_menu__config_8h.html#a391500ead9260b43f8cb31151c74d65e">MAX_VARIABLES<\/a>) {<\/div><div class="line"><a name="l00412"><\/a><span class="lineno">  412<\/span>&#160;      _variable[_variableCount] = (<span class="keywordtype">void<\/span>*)&amp;variable;<\/div><div class="line"><a name="l00413"><\/a><span class="lineno">  413<\/span>&#160;      _variableType[_variableCount] = <a class="code" href="_liquid_menu_8h.html#a43ce352b01d201ddd165bd97a4f5ad2b">recognizeType<\/a>(variable);<\/div><div class="line"><a name="l00414"><\/a><span class="lineno">  414<\/span>&#160;<span class="preprocessor">#     if LIQUIDMENU_DEBUG<\/span><\/div><div class="line"><a name="l00415"><\/a><span class="lineno">  415<\/span>&#160;        <a class="code" href="_liquid_menu__debug_8h.html#a3dfa58b1c5c2943dd49d8aa1981d377d">DEBUG<\/a>(F(<span class="stringliteral">&quot;Added variable &quot;<\/span>));<\/div><div class="line"><a name="l00416"><\/a><span class="lineno">  416<\/span>&#160;        <span class="comment">\/\/ Check if the variable is actually a getter functions<\/span><\/div><div class="line"><a name="l00417"><\/a><span class="lineno">  417<\/span>&#160;        <span class="comment">\/\/ and don&#39;t diplay it if so.<\/span><\/div><div class="line"><a name="l00418"><\/a><span class="lineno">  418<\/span>&#160;        <span class="keywordflow">if<\/span> ((uint8_t)_variableType[_variableCount] &lt; 200) { <span class="comment">\/\/ 200+ are getters<\/span><\/div><div class="line"><a name="l00419"><\/a><span class="lineno">  419<\/span>&#160;          <a class="code" href="_liquid_menu__debug_8h.html#a3dfa58b1c5c2943dd49d8aa1981d377d">DEBUG<\/a>(reinterpret_cast&lt;uintptr_t&gt;(variable)); <a class="code" href="_liquid_menu__debug_8h.html#a020aacec0582e285f02d31f24f2bb24d">DEBUGLN<\/a>(F(<span class="stringliteral">&quot;&quot;<\/span>));<\/div><div class="line"><a name="l00420"><\/a><span class="lineno">  420<\/span>&#160;        }<\/div><div class="line"><a name="l00421"><\/a><span class="lineno">  421<\/span>&#160;<span class="preprocessor">#     endif<\/span><\/div><div class="line"><a name="l00422"><\/a><span class="lineno">  422<\/span>&#160;      _variableCount++;<\/div><div class="line"><a name="l00423"><\/a><span class="lineno">  423<\/span>&#160;      <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>;<\/div><div class="line"><a name="l00424"><\/a><span class="lineno">  424<\/span>&#160;    }<\/div><div class="line"><a name="l00425"><\/a><span class="lineno">  425<\/span>&#160;<span class="preprocessor">#   if LIQUIDMENU_DEBUG<\/span><\/div><div class="line"><a name="l00426"><\/a><span class="lineno">  426<\/span>&#160;      <a class="code" href="_liquid_menu__debug_8h.html#a3dfa58b1c5c2943dd49d8aa1981d377d">DEBUG<\/a>(F(<span class="stringliteral">&quot;Adding variable &quot;<\/span>));<\/div><div class="line"><a name="l00427"><\/a><span class="lineno">  427<\/span>&#160;      <span class="comment">\/\/ Check if the variable is actually a getter functions<\/span><\/div><div class="line"><a name="l00428"><\/a><span class="lineno">  428<\/span>&#160;      <span class="comment">\/\/ and don&#39;t diplay it if so.<\/span><\/div><div class="line"><a name="l00429"><\/a><span class="lineno">  429<\/span>&#160;      <span class="keywordflow">if<\/span> ((uint8_t)_variableType[_variableCount] &lt; 200) { <span class="comment">\/\/ 200+ are getters<\/span><\/div><div class="line"><a name="l00430"><\/a><span class="lineno">  430<\/span>&#160;        <a class="code" href="_liquid_menu__debug_8h.html#a3dfa58b1c5c2943dd49d8aa1981d377d">DEBUG<\/a>(reinterpret_cast&lt;uintptr_t&gt;(variable));<\/div><div class="line"><a name="l00431"><\/a><span class="lineno">  431<\/span>&#160;      }<\/div><div class="line"><a name="l00432"><\/a><span class="lineno">  432<\/span>&#160;<span class="preprocessor">#   endif<\/span><\/div><div class="line"><a name="l00433"><\/a><span class="lineno">  433<\/span>&#160;    <a class="code" href="_liquid_menu__debug_8h.html#a020aacec0582e285f02d31f24f2bb24d">DEBUGLN<\/a>(F(<span class="stringliteral">&quot; failed, edit LiquidMenu_config.h to allow for more variables&quot;<\/span>));<\/div><div class="line"><a name="l00434"><\/a><span class="lineno">  434<\/span>&#160;    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00435"><\/a><span class="lineno">  435<\/span>&#160;  }<\/div><div class="line"><a name="l00436"><\/a><span class="lineno">  436<\/span>&#160;<\/div><div class="line"><a name="l00438"><\/a><span class="lineno">  438<\/span>&#160;<\/div><div class="line"><a name="l00456"><\/a><span class="lineno">  456<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_line.html#a0d517f28006aa523b8c8753199d0bdac">attach_function<\/a>(uint8_t number, <span class="keywordtype">void<\/span> (*<span class="keyword">function<\/span>)(<span class="keywordtype">void<\/span>));<\/div><div class="line"><a name="l00457"><\/a><span class="lineno">  457<\/span>&#160;<\/div><div class="line"><a name="l00459"><\/a><span class="lineno">  459<\/span>&#160;<\/div><div class="line"><a name="l00463"><\/a><span class="lineno">  463<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_line.html#ad840bc6254280cfb2a9155ae1f39104e">set_decimalPlaces<\/a>(uint8_t decimalPlaces);<\/div><div class="line"><a name="l00464"><\/a><span class="lineno">  464<\/span>&#160;<\/div><div class="line"><a name="l00466"><\/a><span class="lineno">  466<\/span>&#160;<\/div><div class="line"><a name="l00482"><\/a><span class="lineno">  482<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_line.html#a84f19c3724695929a6a6cc3ef6083865">set_focusPosition<\/a>(<a class="code" href="_liquid_menu_8h.html#a67752aed4021e5d9f292a38f9df18ab2">Position<\/a> position,<\/div><div class="line"><a name="l00483"><\/a><span class="lineno">  483<\/span>&#160;                         uint8_t column = 0, uint8_t row = 0);<\/div><div class="line"><a name="l00484"><\/a><span class="lineno">  484<\/span>&#160;<\/div><div class="line"><a name="l00486"><\/a><span class="lineno">  486<\/span>&#160;<\/div><div class="line"><a name="l00495"><\/a><span class="lineno">  495<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_line.html#afe542895a93ee3cbd85a4785b5274a9c">set_asGlyph<\/a>(uint8_t number);<\/div><div class="line"><a name="l00496"><\/a><span class="lineno">  496<\/span>&#160;<\/div><div class="line"><a name="l00498"><\/a><span class="lineno">  498<\/span>&#160;<\/div><div class="line"><a name="l00506"><\/a><span class="lineno">  506<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_line.html#a48e780de58fdd558d41952a377e812c4">set_asProgmem<\/a>(uint8_t number);<\/div><div class="line"><a name="l00508"><\/a><span class="lineno">  508<\/span>&#160;<\/div><div class="line"><a name="l00509"><\/a><span class="lineno">  509<\/span>&#160;<span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00511"><\/a><span class="lineno">  511<\/span>&#160;<\/div><div class="line"><a name="l00519"><\/a><span class="lineno">  519<\/span>&#160;  <span class="keywordtype">void<\/span> print(DisplayClass *p_liquidCrystal, <span class="keywordtype">bool<\/span> isFocused);<\/div><div class="line"><a name="l00520"><\/a><span class="lineno">  520<\/span>&#160;<\/div><div class="line"><a name="l00522"><\/a><span class="lineno">  522<\/span>&#160;<\/div><div class="line"><a name="l00529"><\/a><span class="lineno">  529<\/span>&#160;  <span class="keywordtype">void<\/span> print_variable(DisplayClass *p_liquidCrystal, uint8_t number);<\/div><div class="line"><a name="l00530"><\/a><span class="lineno">  530<\/span>&#160;<\/div><div class="line"><a name="l00532"><\/a><span class="lineno">  532<\/span>&#160;<\/div><div class="line"><a name="l00540"><\/a><span class="lineno">  540<\/span>&#160;  <span class="keywordtype">bool<\/span> is_callable(uint8_t number) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00541"><\/a><span class="lineno">  541<\/span>&#160;<\/div><div class="line"><a name="l00543"><\/a><span class="lineno">  543<\/span>&#160;<\/div><div class="line"><a name="l00551"><\/a><span class="lineno">  551<\/span>&#160;  <span class="keywordtype">bool<\/span> call_function(uint8_t number) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00552"><\/a><span class="lineno">  552<\/span>&#160;<\/div><div class="line"><a name="l00553"><\/a><span class="lineno">  553<\/span>&#160;  uint8_t _row, _column, _focusRow, _focusColumn;<\/div><div class="line"><a name="l00554"><\/a><span class="lineno">  554<\/span>&#160;  <a class="code" href="_liquid_menu_8h.html#a67752aed4021e5d9f292a38f9df18ab2">Position<\/a> _focusPosition;<\/div><div class="line"><a name="l00555"><\/a><span class="lineno">  555<\/span>&#160;  uint8_t _floatDecimalPlaces;<\/div><div class="line"><a name="l00556"><\/a><span class="lineno">  556<\/span>&#160;  uint8_t _variableCount; <\/div><div class="line"><a name="l00557"><\/a><span class="lineno">  557<\/span>&#160;  void (*_function[<a class="code" href="_liquid_menu__config_8h.html#aedd2637cf600dbab38e5164475ee8cd8">MAX_FUNCTIONS<\/a>])(void); <\/div><div class="line"><a name="l00558"><\/a><span class="lineno">  558<\/span>&#160;  <span class="keyword">const<\/span> <span class="keywordtype">void<\/span> *_variable[<a class="code" href="_liquid_menu__config_8h.html#a391500ead9260b43f8cb31151c74d65e">MAX_VARIABLES<\/a>]; <\/div><div class="line"><a name="l00559"><\/a><span class="lineno">  559<\/span>&#160;  <a class="code" href="_liquid_menu_8h.html#a75e7df7c4007df61cf3716ba2d3ed8e3">DataType<\/a> _variableType[<a class="code" href="_liquid_menu__config_8h.html#a391500ead9260b43f8cb31151c74d65e">MAX_VARIABLES<\/a>]; <\/div><div class="line"><a name="l00560"><\/a><span class="lineno">  560<\/span>&#160;  <span class="keywordtype">bool<\/span> _focusable; <\/div><div class="line"><a name="l00561"><\/a><span class="lineno">  561<\/span>&#160;};<\/div><div class="line"><a name="l00562"><\/a><span class="lineno">  562<\/span>&#160;<\/div><div class="line"><a name="l00563"><\/a><span class="lineno">  563<\/span>&#160;<\/div><div class="line"><a name="l00565"><\/a><span class="lineno">  565<\/span>&#160;<\/div><div class="line"><a name="l00573"><\/a><span class="lineno"><a class="line" href="class_liquid_screen.html">  573<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> {<\/div><div class="line"><a name="l00574"><\/a><span class="lineno">  574<\/span>&#160;  <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="class_liquid_menu.html">LiquidMenu<\/a>;<\/div><div class="line"><a name="l00575"><\/a><span class="lineno">  575<\/span>&#160;<\/div><div class="line"><a name="l00576"><\/a><span class="lineno">  576<\/span>&#160;<span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00577"><\/a><span class="lineno">  577<\/span>&#160;<\/div><div class="line"><a name="l00580"><\/a><span class="lineno">  580<\/span>&#160;<\/div><div class="line"><a name="l00582"><\/a><span class="lineno">  582<\/span>&#160;<\/div><div class="line"><a name="l00585"><\/a><span class="lineno">  585<\/span>&#160;  <a class="code" href="class_liquid_screen.html#a28adb701dcf9af8a1c66c66f5e393d97">LiquidScreen<\/a>();<\/div><div class="line"><a name="l00586"><\/a><span class="lineno">  586<\/span>&#160;<\/div><div class="line"><a name="l00588"><\/a><span class="lineno">  588<\/span>&#160;<\/div><div class="line"><a name="l00591"><\/a><span class="lineno">  591<\/span>&#160;  <span class="keyword">explicit<\/span> <a class="code" href="class_liquid_screen.html#a28adb701dcf9af8a1c66c66f5e393d97">LiquidScreen<\/a>(<a class="code" href="class_liquid_line.html">LiquidLine<\/a> &amp;liquidLine);<\/div><div class="line"><a name="l00592"><\/a><span class="lineno">  592<\/span>&#160;<\/div><div class="line"><a name="l00594"><\/a><span class="lineno">  594<\/span>&#160;<\/div><div class="line"><a name="l00598"><\/a><span class="lineno">  598<\/span>&#160;  <a class="code" href="class_liquid_screen.html#a28adb701dcf9af8a1c66c66f5e393d97">LiquidScreen<\/a>(<a class="code" href="class_liquid_line.html">LiquidLine<\/a> &amp;liquidLine1, <a class="code" href="class_liquid_line.html">LiquidLine<\/a> &amp;liquidLine2);<\/div><div class="line"><a name="l00599"><\/a><span class="lineno">  599<\/span>&#160;<\/div><div class="line"><a name="l00601"><\/a><span class="lineno">  601<\/span>&#160;<\/div><div class="line"><a name="l00606"><\/a><span class="lineno">  606<\/span>&#160;  <a class="code" href="class_liquid_screen.html#a28adb701dcf9af8a1c66c66f5e393d97">LiquidScreen<\/a>(<a class="code" href="class_liquid_line.html">LiquidLine<\/a> &amp;liquidLine1, <a class="code" href="class_liquid_line.html">LiquidLine<\/a> &amp;liquidLine2,<\/div><div class="line"><a name="l00607"><\/a><span class="lineno">  607<\/span>&#160;               <a class="code" href="class_liquid_line.html">LiquidLine<\/a> &amp;liquidLine3);<\/div><div class="line"><a name="l00608"><\/a><span class="lineno">  608<\/span>&#160;<\/div><div class="line"><a name="l00610"><\/a><span class="lineno">  610<\/span>&#160;<\/div><div class="line"><a name="l00616"><\/a><span class="lineno">  616<\/span>&#160;  <a class="code" href="class_liquid_screen.html#a28adb701dcf9af8a1c66c66f5e393d97">LiquidScreen<\/a>(<a class="code" href="class_liquid_line.html">LiquidLine<\/a> &amp;liquidLine1, <a class="code" href="class_liquid_line.html">LiquidLine<\/a> &amp;liquidLine2,<\/div><div class="line"><a name="l00617"><\/a><span class="lineno">  617<\/span>&#160;               <a class="code" href="class_liquid_line.html">LiquidLine<\/a> &amp;liquidLine3, <a class="code" href="class_liquid_line.html">LiquidLine<\/a> &amp;liquidLine4);<\/div><div class="line"><a name="l00618"><\/a><span class="lineno">  618<\/span>&#160;<\/div><div class="line"><a name="l00620"><\/a><span class="lineno">  620<\/span>&#160;<\/div><div class="line"><a name="l00623"><\/a><span class="lineno">  623<\/span>&#160;<\/div><div class="line"><a name="l00625"><\/a><span class="lineno">  625<\/span>&#160;<\/div><div class="line"><a name="l00636"><\/a><span class="lineno">  636<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_screen.html#acd5dc0309e7b66b42ca558015e586905">add_line<\/a>(<a class="code" href="class_liquid_line.html">LiquidLine<\/a> &amp;liquidLine);<\/div><div class="line"><a name="l00637"><\/a><span class="lineno">  637<\/span>&#160;<\/div><div class="line"><a name="l00639"><\/a><span class="lineno">  639<\/span>&#160;<\/div><div class="line"><a name="l00653"><\/a><span class="lineno">  653<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_screen.html#a6b025aaf4ba5d0749aa828a303e64415">set_focusPosition<\/a>(<a class="code" href="_liquid_menu_8h.html#a67752aed4021e5d9f292a38f9df18ab2">Position<\/a> position);<\/div><div class="line"><a name="l00654"><\/a><span class="lineno">  654<\/span>&#160;<\/div><div class="line"><a name="l00656"><\/a><span class="lineno">  656<\/span>&#160;<\/div><div class="line"><a name="l00666"><\/a><span class="lineno">  666<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_screen.html#a6a0b6ae610e7e4d30ceec10bb35442a6">set_displayLineCount<\/a>(uint8_t lineCount);<\/div><div class="line"><a name="l00667"><\/a><span class="lineno">  667<\/span>&#160;<\/div><div class="line"><a name="l00669"><\/a><span class="lineno">  669<\/span>&#160;<\/div><div class="line"><a name="l00680"><\/a><span class="lineno">  680<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_screen.html#a99ca6b93fc5af199f50ce86421adbd49">hide<\/a>(<span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_screen.html#a99ca6b93fc5af199f50ce86421adbd49">hide<\/a>);<\/div><div class="line"><a name="l00682"><\/a><span class="lineno">  682<\/span>&#160;<\/div><div class="line"><a name="l00683"><\/a><span class="lineno">  683<\/span>&#160;<span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00685"><\/a><span class="lineno">  685<\/span>&#160;<\/div><div class="line"><a name="l00691"><\/a><span class="lineno">  691<\/span>&#160;  <span class="keywordtype">void<\/span> print(DisplayClass *p_liquidCrystal) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00692"><\/a><span class="lineno">  692<\/span>&#160;<\/div><div class="line"><a name="l00694"><\/a><span class="lineno">  694<\/span>&#160;<\/div><div class="line"><a name="l00700"><\/a><span class="lineno">  700<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_menu.html#a558e3573fca7d6774ada70709c1dc2c3">switch_focus<\/a>(<span class="keywordtype">bool<\/span> forward = <span class="keyword">true<\/span>);<\/div><div class="line"><a name="l00701"><\/a><span class="lineno">  701<\/span>&#160;<\/div><div class="line"><a name="l00703"><\/a><span class="lineno">  703<\/span>&#160;<\/div><div class="line"><a name="l00707"><\/a><span class="lineno">  707<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_menu.html#a648df9d360ad442549e4e25f5f25d1f8">set_focusedLine<\/a>(uint8_t lineIndex);<\/div><div class="line"><a name="l00708"><\/a><span class="lineno">  708<\/span>&#160;<\/div><div class="line"><a name="l00710"><\/a><span class="lineno">  710<\/span>&#160;<\/div><div class="line"><a name="l00713"><\/a><span class="lineno">  713<\/span>&#160;  uint8_t <a class="code" href="class_liquid_menu.html#ae150b50e58e84b234d21425e4f04d2d5">get_focusedLine<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00714"><\/a><span class="lineno">  714<\/span>&#160;<\/div><div class="line"><a name="l00716"><\/a><span class="lineno">  716<\/span>&#160;<\/div><div class="line"><a name="l00724"><\/a><span class="lineno">  724<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_menu.html#a5474ecee1611687d7128644c2cf858a5">is_callable<\/a>(uint8_t number) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00725"><\/a><span class="lineno">  725<\/span>&#160;<\/div><div class="line"><a name="l00727"><\/a><span class="lineno">  727<\/span>&#160;<\/div><div class="line"><a name="l00737"><\/a><span class="lineno">  737<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_menu.html#adc48665ed45cc8b7a688547c2711bee1">call_function<\/a>(uint8_t number) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00738"><\/a><span class="lineno">  738<\/span>&#160;<\/div><div class="line"><a name="l00739"><\/a><span class="lineno">  739<\/span>&#160;  <a class="code" href="class_liquid_line.html">LiquidLine<\/a> *_p_liquidLine[<a class="code" href="_liquid_menu__config_8h.html#ae19922bb51de39e7ba005c83c75bc4f9">MAX_LINES<\/a>]; <\/div><div class="line"><a name="l00740"><\/a><span class="lineno">  740<\/span>&#160;  uint8_t _lineCount; <\/div><div class="line"><a name="l00741"><\/a><span class="lineno">  741<\/span>&#160;  uint8_t _focus; <\/div><div class="line"><a name="l00742"><\/a><span class="lineno">  742<\/span>&#160;  uint8_t _displayLineCount; <\/div><div class="line"><a name="l00743"><\/a><span class="lineno">  743<\/span>&#160;  <span class="keywordtype">bool<\/span> _hidden; <\/div><div class="line"><a name="l00744"><\/a><span class="lineno">  744<\/span>&#160;};<\/div><div class="line"><a name="l00745"><\/a><span class="lineno">  745<\/span>&#160;<\/div><div class="line"><a name="l00746"><\/a><span class="lineno">  746<\/span>&#160;<\/div><div class="line"><a name="l00748"><\/a><span class="lineno">  748<\/span>&#160;<\/div><div class="line"><a name="l00757"><\/a><span class="lineno"><a class="line" href="class_liquid_menu.html">  757<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> {<\/div><div class="line"><a name="l00758"><\/a><span class="lineno">  758<\/span>&#160;  <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="class_liquid_system.html">LiquidSystem<\/a>;<\/div><div class="line"><a name="l00759"><\/a><span class="lineno">  759<\/span>&#160;<\/div><div class="line"><a name="l00760"><\/a><span class="lineno">  760<\/span>&#160;<span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00761"><\/a><span class="lineno">  761<\/span>&#160;<\/div><div class="line"><a name="l00764"><\/a><span class="lineno">  764<\/span>&#160;<\/div><div class="line"><a name="l00766"><\/a><span class="lineno">  766<\/span>&#160;<\/div><div class="line"><a name="l00773"><\/a><span class="lineno">  773<\/span>&#160;  <a class="code" href="class_liquid_menu.html#a796944f628c9a3a426202bdad3d40481">LiquidMenu<\/a>(DisplayClass &amp;liquidCrystal, uint8_t startingScreen = 1);<\/div><div class="line"><a name="l00774"><\/a><span class="lineno">  774<\/span>&#160;<\/div><div class="line"><a name="l00776"><\/a><span class="lineno">  776<\/span>&#160;<\/div><div class="line"><a name="l00782"><\/a><span class="lineno">  782<\/span>&#160;  <a class="code" href="class_liquid_menu.html#a796944f628c9a3a426202bdad3d40481">LiquidMenu<\/a>(DisplayClass &amp;liquidCrystal, <a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> &amp;liquidScreen,<\/div><div class="line"><a name="l00783"><\/a><span class="lineno">  783<\/span>&#160;             uint8_t startingScreen = 1);<\/div><div class="line"><a name="l00784"><\/a><span class="lineno">  784<\/span>&#160;<\/div><div class="line"><a name="l00786"><\/a><span class="lineno">  786<\/span>&#160;<\/div><div class="line"><a name="l00793"><\/a><span class="lineno">  793<\/span>&#160;  <a class="code" href="class_liquid_menu.html#a796944f628c9a3a426202bdad3d40481">LiquidMenu<\/a>(DisplayClass &amp;liquidCrystal, <a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> &amp;liquidScreen1,<\/div><div class="line"><a name="l00794"><\/a><span class="lineno">  794<\/span>&#160;             <a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> &amp;liquidScreen2, uint8_t startingScreen = 1);<\/div><div class="line"><a name="l00795"><\/a><span class="lineno">  795<\/span>&#160;<\/div><div class="line"><a name="l00797"><\/a><span class="lineno">  797<\/span>&#160;<\/div><div class="line"><a name="l00805"><\/a><span class="lineno">  805<\/span>&#160;  <a class="code" href="class_liquid_menu.html#a796944f628c9a3a426202bdad3d40481">LiquidMenu<\/a>(DisplayClass &amp;liquidCrystal, <a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> &amp;liquidScreen1,<\/div><div class="line"><a name="l00806"><\/a><span class="lineno">  806<\/span>&#160;             <a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> &amp;liquidScreen2, <a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> &amp;liquidScreen3,<\/div><div class="line"><a name="l00807"><\/a><span class="lineno">  807<\/span>&#160;             uint8_t startingScreen = 1);<\/div><div class="line"><a name="l00808"><\/a><span class="lineno">  808<\/span>&#160;<\/div><div class="line"><a name="l00810"><\/a><span class="lineno">  810<\/span>&#160;<\/div><div class="line"><a name="l00819"><\/a><span class="lineno">  819<\/span>&#160;  <a class="code" href="class_liquid_menu.html#a796944f628c9a3a426202bdad3d40481">LiquidMenu<\/a>(DisplayClass &amp;liquidCrystal, <a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> &amp;liquidScreen1,<\/div><div class="line"><a name="l00820"><\/a><span class="lineno">  820<\/span>&#160;             <a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> &amp;liquidScreen2, <a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> &amp;liquidScreen3,<\/div><div class="line"><a name="l00821"><\/a><span class="lineno">  821<\/span>&#160;             <a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> &amp;liquidScreen4, uint8_t startingScreen = 1);<\/div><div class="line"><a name="l00822"><\/a><span class="lineno">  822<\/span>&#160;<\/div><div class="line"><a name="l00824"><\/a><span class="lineno">  824<\/span>&#160;<\/div><div class="line"><a name="l00827"><\/a><span class="lineno">  827<\/span>&#160;<\/div><div class="line"><a name="l00829"><\/a><span class="lineno">  829<\/span>&#160;<\/div><div class="line"><a name="l00840"><\/a><span class="lineno">  840<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_menu.html#a0f914fb4eb461b03d10fb3ce713512ec">add_screen<\/a>(<a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> &amp;liquidScreen);<\/div><div class="line"><a name="l00841"><\/a><span class="lineno">  841<\/span>&#160;<\/div><div class="line"><a name="l00843"><\/a><span class="lineno">  843<\/span>&#160;<\/div><div class="line"><a name="l00848"><\/a><span class="lineno">  848<\/span>&#160;  <a class="code" href="class_liquid_screen.html">LiquidScreen<\/a>* <a class="code" href="class_liquid_menu.html#a42e776202652464ed489f21120198a2a">get_currentScreen<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00849"><\/a><span class="lineno">  849<\/span>&#160;<\/div><div class="line"><a name="l00851"><\/a><span class="lineno">  851<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_menu.html#a6046bb5792ad188b25a5b0e2d7e27fc0">next_screen<\/a>();<\/div><div class="line"><a name="l00852"><\/a><span class="lineno">  852<\/span>&#160;<\/div><div class="line"><a name="l00854"><\/a><span class="lineno">  854<\/span>&#160;<\/div><div class="line"><a name="l00857"><\/a><span class="lineno">  857<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_menu.html#a12b1b75ac4d82d992213b7d66a73ba63">operator++<\/a>();<\/div><div class="line"><a name="l00858"><\/a><span class="lineno">  858<\/span>&#160;<\/div><div class="line"><a name="l00860"><\/a><span class="lineno">  860<\/span>&#160;<\/div><div class="line"><a name="l00863"><\/a><span class="lineno">  863<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_menu.html#a12b1b75ac4d82d992213b7d66a73ba63">operator++<\/a>(<span class="keywordtype">int<\/span>);<\/div><div class="line"><a name="l00864"><\/a><span class="lineno">  864<\/span>&#160;<\/div><div class="line"><a name="l00866"><\/a><span class="lineno">  866<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_menu.html#a3924794ce6e3e95bb7b94c3c18d6d9a9">previous_screen<\/a>();<\/div><div class="line"><a name="l00867"><\/a><span class="lineno">  867<\/span>&#160;<\/div><div class="line"><a name="l00869"><\/a><span class="lineno">  869<\/span>&#160;<\/div><div class="line"><a name="l00872"><\/a><span class="lineno">  872<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_menu.html#a16eb7e91ce25eca66d8b21574a53b50a">operator--<\/a>();<\/div><div class="line"><a name="l00873"><\/a><span class="lineno">  873<\/span>&#160;<\/div><div class="line"><a name="l00875"><\/a><span class="lineno">  875<\/span>&#160;<\/div><div class="line"><a name="l00878"><\/a><span class="lineno">  878<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_menu.html#a16eb7e91ce25eca66d8b21574a53b50a">operator--<\/a>(<span class="keywordtype">int<\/span>);<\/div><div class="line"><a name="l00879"><\/a><span class="lineno">  879<\/span>&#160;<\/div><div class="line"><a name="l00881"><\/a><span class="lineno">  881<\/span>&#160;<\/div><div class="line"><a name="l00885"><\/a><span class="lineno">  885<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_menu.html#aeaea2afb1cc9d8ac70ca96c31c1034df">change_screen<\/a>(<a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> *p_liquidScreen);<\/div><div class="line"><a name="l00886"><\/a><span class="lineno">  886<\/span>&#160;<\/div><div class="line"><a name="l00888"><\/a><span class="lineno">  888<\/span>&#160;<\/div><div class="line"><a name="l00893"><\/a><span class="lineno">  893<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_menu.html#aeaea2afb1cc9d8ac70ca96c31c1034df">change_screen<\/a>(uint8_t number);<\/div><div class="line"><a name="l00894"><\/a><span class="lineno">  894<\/span>&#160;<\/div><div class="line"><a name="l00896"><\/a><span class="lineno">  896<\/span>&#160;<\/div><div class="line"><a name="l00900"><\/a><span class="lineno">  900<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_menu.html#a914d7c7dcea22fa1c86fd908e03668f3">operator=<\/a>(<a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> *p_liquidScreen);<\/div><div class="line"><a name="l00901"><\/a><span class="lineno">  901<\/span>&#160;<\/div><div class="line"><a name="l00903"><\/a><span class="lineno">  903<\/span>&#160;<\/div><div class="line"><a name="l00908"><\/a><span class="lineno">  908<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_menu.html#a914d7c7dcea22fa1c86fd908e03668f3">operator=<\/a>(uint8_t number);<\/div><div class="line"><a name="l00909"><\/a><span class="lineno">  909<\/span>&#160;<\/div><div class="line"><a name="l00911"><\/a><span class="lineno">  911<\/span>&#160;<\/div><div class="line"><a name="l00917"><\/a><span class="lineno">  917<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_menu.html#a558e3573fca7d6774ada70709c1dc2c3">switch_focus<\/a>(<span class="keywordtype">bool<\/span> forward = <span class="keyword">true<\/span>);<\/div><div class="line"><a name="l00918"><\/a><span class="lineno">  918<\/span>&#160;  <\/div><div class="line"><a name="l00920"><\/a><span class="lineno">  920<\/span>&#160;<\/div><div class="line"><a name="l00924"><\/a><span class="lineno">  924<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_menu.html#a648df9d360ad442549e4e25f5f25d1f8">set_focusedLine<\/a>(uint8_t lineIndex);<\/div><div class="line"><a name="l00925"><\/a><span class="lineno">  925<\/span>&#160;<\/div><div class="line"><a name="l00927"><\/a><span class="lineno">  927<\/span>&#160;<\/div><div class="line"><a name="l00930"><\/a><span class="lineno">  930<\/span>&#160;  uint8_t <a class="code" href="class_liquid_menu.html#ae150b50e58e84b234d21425e4f04d2d5">get_focusedLine<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00931"><\/a><span class="lineno">  931<\/span>&#160;<\/div><div class="line"><a name="l00933"><\/a><span class="lineno">  933<\/span>&#160;<\/div><div class="line"><a name="l00947"><\/a><span class="lineno">  947<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_menu.html#acdce4caf01ad04fcbb8b7bbc91db98b2">set_focusPosition<\/a>(<a class="code" href="_liquid_menu_8h.html#a67752aed4021e5d9f292a38f9df18ab2">Position<\/a> position);<\/div><div class="line"><a name="l00948"><\/a><span class="lineno">  948<\/span>&#160;<\/div><div class="line"><a name="l00950"><\/a><span class="lineno">  950<\/span>&#160;<\/div><div class="line"><a name="l00963"><\/a><span class="lineno">  963<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_menu.html#aee55f6820e8e752e25775781e2a0de18">set_focusSymbol<\/a>(<a class="code" href="_liquid_menu_8h.html#a67752aed4021e5d9f292a38f9df18ab2">Position<\/a> position, uint8_t symbol[8]);<\/div><div class="line"><a name="l00964"><\/a><span class="lineno">  964<\/span>&#160;<\/div><div class="line"><a name="l00966"><\/a><span class="lineno">  966<\/span>&#160;<\/div><div class="line"><a name="l00974"><\/a><span class="lineno">  974<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_menu.html#a5474ecee1611687d7128644c2cf858a5">is_callable<\/a>(uint8_t number) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00975"><\/a><span class="lineno">  975<\/span>&#160;<\/div><div class="line"><a name="l00977"><\/a><span class="lineno">  977<\/span>&#160;<\/div><div class="line"><a name="l00988"><\/a><span class="lineno">  988<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_menu.html#adc48665ed45cc8b7a688547c2711bee1">call_function<\/a>(uint8_t number) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00989"><\/a><span class="lineno">  989<\/span>&#160;<\/div><div class="line"><a name="l00991"><\/a><span class="lineno">  991<\/span>&#160;<\/div><div class="line"><a name="l00994"><\/a><span class="lineno">  994<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_menu.html#af6935b3a7c65918abaf5594e7742af70">update<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00995"><\/a><span class="lineno">  995<\/span>&#160;<\/div><div class="line"><a name="l00997"><\/a><span class="lineno">  997<\/span>&#160;<\/div><div class="line"><a name="l01003"><\/a><span class="lineno"> 1003<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_menu.html#a506aa5f8822031096a881aed7c6e45e5">softUpdate<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l01004"><\/a><span class="lineno"> 1004<\/span>&#160;<\/div><div class="line"><a name="l01006"><\/a><span class="lineno"> 1006<\/span>&#160;<\/div><div class="line"><a name="l01011"><\/a><span class="lineno"> 1011<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_menu.html#ac1afbdecb999988469894a8afd14f100">init<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l01012"><\/a><span class="lineno"> 1012<\/span>&#160;<\/div><div class="line"><a name="l01014"><\/a><span class="lineno"> 1014<\/span>&#160;<\/div><div class="line"><a name="l01015"><\/a><span class="lineno"> 1015<\/span>&#160;<span class="keyword">private<\/span>:<\/div><div class="line"><a name="l01016"><\/a><span class="lineno"> 1016<\/span>&#160;  DisplayClass *_p_liquidCrystal; <\/div><div class="line"><a name="l01017"><\/a><span class="lineno"> 1017<\/span>&#160;  <a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> *_p_liquidScreen[<a class="code" href="_liquid_menu__config_8h.html#ada3126ed8819086bcaf2a574e20e6c7b">MAX_SCREENS<\/a>]; <\/div><div class="line"><a name="l01018"><\/a><span class="lineno"> 1018<\/span>&#160;  uint8_t _screenCount; <\/div><div class="line"><a name="l01019"><\/a><span class="lineno"> 1019<\/span>&#160;  uint8_t _currentScreen;<\/div><div class="line"><a name="l01020"><\/a><span class="lineno"> 1020<\/span>&#160;};<\/div><div class="line"><a name="l01021"><\/a><span class="lineno"> 1021<\/span>&#160;<\/div><div class="line"><a name="l01022"><\/a><span class="lineno"> 1022<\/span>&#160;<\/div><div class="line"><a name="l01024"><\/a><span class="lineno"> 1024<\/span>&#160;<\/div><div class="line"><a name="l01034"><\/a><span class="lineno"><a class="line" href="class_liquid_system.html"> 1034<\/a><\/span>&#160;<span class="keyword">class <\/span><a class="code" href="class_liquid_system.html">LiquidSystem<\/a> {<\/div><div class="line"><a name="l01035"><\/a><span class="lineno"> 1035<\/span>&#160;<span class="keyword">public<\/span>:<\/div><div class="line"><a name="l01036"><\/a><span class="lineno"> 1036<\/span>&#160;<\/div><div class="line"><a name="l01039"><\/a><span class="lineno"> 1039<\/span>&#160;<\/div><div class="line"><a name="l01041"><\/a><span class="lineno"> 1041<\/span>&#160;<\/div><div class="line"><a name="l01046"><\/a><span class="lineno"> 1046<\/span>&#160;  <span class="keyword">explicit<\/span> <a class="code" href="class_liquid_system.html#ad760efbb8dfa8bf3fa74c3ad55bcb8ce">LiquidSystem<\/a>(uint8_t startingMenu = 1);<\/div><div class="line"><a name="l01047"><\/a><span class="lineno"> 1047<\/span>&#160;<\/div><div class="line"><a name="l01049"><\/a><span class="lineno"> 1049<\/span>&#160;<\/div><div class="line"><a name="l01054"><\/a><span class="lineno"> 1054<\/span>&#160;  <a class="code" href="class_liquid_system.html#ad760efbb8dfa8bf3fa74c3ad55bcb8ce">LiquidSystem<\/a>(<a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> &amp;liquidMenu1, <a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> &amp;liquidMenu2,<\/div><div class="line"><a name="l01055"><\/a><span class="lineno"> 1055<\/span>&#160;               uint8_t startingMenu = 1);<\/div><div class="line"><a name="l01056"><\/a><span class="lineno"> 1056<\/span>&#160;<\/div><div class="line"><a name="l01058"><\/a><span class="lineno"> 1058<\/span>&#160;<\/div><div class="line"><a name="l01064"><\/a><span class="lineno"> 1064<\/span>&#160;  <a class="code" href="class_liquid_system.html#ad760efbb8dfa8bf3fa74c3ad55bcb8ce">LiquidSystem<\/a>(<a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> &amp;liquidMenu1, <a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> &amp;liquidMenu2,<\/div><div class="line"><a name="l01065"><\/a><span class="lineno"> 1065<\/span>&#160;               <a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> &amp;liquidMenu3, uint8_t startingMenu = 1);<\/div><div class="line"><a name="l01066"><\/a><span class="lineno"> 1066<\/span>&#160;<\/div><div class="line"><a name="l01068"><\/a><span class="lineno"> 1068<\/span>&#160;<\/div><div class="line"><a name="l01075"><\/a><span class="lineno"> 1075<\/span>&#160;  <a class="code" href="class_liquid_system.html#ad760efbb8dfa8bf3fa74c3ad55bcb8ce">LiquidSystem<\/a>(<a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> &amp;liquidMenu1, <a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> &amp;liquidMenu2,<\/div><div class="line"><a name="l01076"><\/a><span class="lineno"> 1076<\/span>&#160;               <a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> &amp;liquidMenu3, <a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> &amp;liquidMenu4,<\/div><div class="line"><a name="l01077"><\/a><span class="lineno"> 1077<\/span>&#160;               uint8_t startingMenu = 1);<\/div><div class="line"><a name="l01078"><\/a><span class="lineno"> 1078<\/span>&#160;<\/div><div class="line"><a name="l01080"><\/a><span class="lineno"> 1080<\/span>&#160;<\/div><div class="line"><a name="l01083"><\/a><span class="lineno"> 1083<\/span>&#160;<\/div><div class="line"><a name="l01085"><\/a><span class="lineno"> 1085<\/span>&#160;<\/div><div class="line"><a name="l01096"><\/a><span class="lineno"> 1096<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_system.html#ae43462b3beae352bdc4a3bf8032512e3">add_menu<\/a>(<a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> &amp;liquidMenu);<\/div><div class="line"><a name="l01097"><\/a><span class="lineno"> 1097<\/span>&#160;<\/div><div class="line"><a name="l01099"><\/a><span class="lineno"> 1099<\/span>&#160;<\/div><div class="line"><a name="l01103"><\/a><span class="lineno"> 1103<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_system.html#a88c0956003931a95180a4140ebce048d">change_menu<\/a>(<a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> &amp;p_liquidMenu);<\/div><div class="line"><a name="l01104"><\/a><span class="lineno"> 1104<\/span>&#160;<\/div><div class="line"><a name="l01106"><\/a><span class="lineno"> 1106<\/span>&#160;<\/div><div class="line"><a name="l01111"><\/a><span class="lineno"> 1111<\/span>&#160;  <a class="code" href="class_liquid_screen.html">LiquidScreen<\/a>* <a class="code" href="class_liquid_system.html#a3a9e2d16877a774dbda4586e090a4b9f">get_currentScreen<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l01112"><\/a><span class="lineno"> 1112<\/span>&#160;<\/div><div class="line"><a name="l01114"><\/a><span class="lineno"> 1114<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_system.html#ae48a34e80b56c097a16d90741ede20bd">next_screen<\/a>();<\/div><div class="line"><a name="l01115"><\/a><span class="lineno"> 1115<\/span>&#160;<\/div><div class="line"><a name="l01117"><\/a><span class="lineno"> 1117<\/span>&#160;<\/div><div class="line"><a name="l01120"><\/a><span class="lineno"> 1120<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_system.html#a139b86202d2eb109a63ba630464d658a">operator++<\/a>();<\/div><div class="line"><a name="l01121"><\/a><span class="lineno"> 1121<\/span>&#160;<\/div><div class="line"><a name="l01123"><\/a><span class="lineno"> 1123<\/span>&#160;<\/div><div class="line"><a name="l01126"><\/a><span class="lineno"> 1126<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_system.html#a139b86202d2eb109a63ba630464d658a">operator++<\/a>(<span class="keywordtype">int<\/span>);<\/div><div class="line"><a name="l01127"><\/a><span class="lineno"> 1127<\/span>&#160;<\/div><div class="line"><a name="l01129"><\/a><span class="lineno"> 1129<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_system.html#a41b7cf3ce3f9dff5c08a9f0b5db12c76">previous_screen<\/a>();<\/div><div class="line"><a name="l01130"><\/a><span class="lineno"> 1130<\/span>&#160;<\/div><div class="line"><a name="l01132"><\/a><span class="lineno"> 1132<\/span>&#160;<\/div><div class="line"><a name="l01135"><\/a><span class="lineno"> 1135<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_system.html#a9464b4f2306bd27ba21d48f86650f596">operator--<\/a>();<\/div><div class="line"><a name="l01136"><\/a><span class="lineno"> 1136<\/span>&#160;<\/div><div class="line"><a name="l01138"><\/a><span class="lineno"> 1138<\/span>&#160;<\/div><div class="line"><a name="l01141"><\/a><span class="lineno"> 1141<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_system.html#a9464b4f2306bd27ba21d48f86650f596">operator--<\/a>(<span class="keywordtype">int<\/span>);<\/div><div class="line"><a name="l01142"><\/a><span class="lineno"> 1142<\/span>&#160;<\/div><div class="line"><a name="l01144"><\/a><span class="lineno"> 1144<\/span>&#160;<\/div><div class="line"><a name="l01148"><\/a><span class="lineno"> 1148<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_system.html#ab674bdea07cd46dc656d92dc4717a189">change_screen<\/a>(<a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> *p_liquidScreen);<\/div><div class="line"><a name="l01149"><\/a><span class="lineno"> 1149<\/span>&#160;<\/div><div class="line"><a name="l01151"><\/a><span class="lineno"> 1151<\/span>&#160;<\/div><div class="line"><a name="l01156"><\/a><span class="lineno"> 1156<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_system.html#ab674bdea07cd46dc656d92dc4717a189">change_screen<\/a>(uint8_t number);<\/div><div class="line"><a name="l01157"><\/a><span class="lineno"> 1157<\/span>&#160;<\/div><div class="line"><a name="l01159"><\/a><span class="lineno"> 1159<\/span>&#160;<\/div><div class="line"><a name="l01163"><\/a><span class="lineno"> 1163<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_system.html#aa866de6a0b651a71f730d0660efff0d3">operator=<\/a>(<a class="code" href="class_liquid_screen.html">LiquidScreen<\/a> *p_liquidScreen);<\/div><div class="line"><a name="l01164"><\/a><span class="lineno"> 1164<\/span>&#160;<\/div><div class="line"><a name="l01166"><\/a><span class="lineno"> 1166<\/span>&#160;<\/div><div class="line"><a name="l01171"><\/a><span class="lineno"> 1171<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_system.html#aa866de6a0b651a71f730d0660efff0d3">operator=<\/a>(uint8_t number);<\/div><div class="line"><a name="l01172"><\/a><span class="lineno"> 1172<\/span>&#160;<\/div><div class="line"><a name="l01174"><\/a><span class="lineno"> 1174<\/span>&#160;<\/div><div class="line"><a name="l01180"><\/a><span class="lineno"> 1180<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_system.html#ae0a2fc3bbb7e15f0cc8011dab60030a3">switch_focus<\/a>(<span class="keywordtype">bool<\/span> forward = <span class="keyword">true<\/span>);<\/div><div class="line"><a name="l01181"><\/a><span class="lineno"> 1181<\/span>&#160;<\/div><div class="line"><a name="l01183"><\/a><span class="lineno"> 1183<\/span>&#160;<\/div><div class="line"><a name="l01187"><\/a><span class="lineno"> 1187<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_system.html#a506a20342062d61f1f8eca87b9365e4e">set_focusedLine<\/a>(uint8_t lineIndex);<\/div><div class="line"><a name="l01188"><\/a><span class="lineno"> 1188<\/span>&#160;<\/div><div class="line"><a name="l01190"><\/a><span class="lineno"> 1190<\/span>&#160;<\/div><div class="line"><a name="l01193"><\/a><span class="lineno"> 1193<\/span>&#160;  uint8_t <a class="code" href="class_liquid_system.html#aa0107d05025c34039262d7976eeaea65">get_focusedLine<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l01194"><\/a><span class="lineno"> 1194<\/span>&#160;  <\/div><div class="line"><a name="l01196"><\/a><span class="lineno"> 1196<\/span>&#160;<\/div><div class="line"><a name="l01210"><\/a><span class="lineno"> 1210<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_system.html#af261a981d86b320ba57c392bd1b65432">set_focusPosition<\/a>(<a class="code" href="_liquid_menu_8h.html#a67752aed4021e5d9f292a38f9df18ab2">Position<\/a> position);<\/div><div class="line"><a name="l01211"><\/a><span class="lineno"> 1211<\/span>&#160;<\/div><div class="line"><a name="l01213"><\/a><span class="lineno"> 1213<\/span>&#160;<\/div><div class="line"><a name="l01226"><\/a><span class="lineno"> 1226<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_system.html#adf9bc656e655c4deb098a334a09f53b8">set_focusSymbol<\/a>(<a class="code" href="_liquid_menu_8h.html#a67752aed4021e5d9f292a38f9df18ab2">Position<\/a> position, uint8_t symbol[8]);<\/div><div class="line"><a name="l01227"><\/a><span class="lineno"> 1227<\/span>&#160;<\/div><div class="line"><a name="l01229"><\/a><span class="lineno"> 1229<\/span>&#160;<\/div><div class="line"><a name="l01237"><\/a><span class="lineno"> 1237<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_system.html#a159dfb1127b8ad06e15ee309676f4e1e">is_callable<\/a>(uint8_t number) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l01238"><\/a><span class="lineno"> 1238<\/span>&#160;<\/div><div class="line"><a name="l01240"><\/a><span class="lineno"> 1240<\/span>&#160;<\/div><div class="line"><a name="l01251"><\/a><span class="lineno"> 1251<\/span>&#160;  <span class="keywordtype">bool<\/span> <a class="code" href="class_liquid_system.html#a2e7e880c6329b8dca59d019b6ea7d10a">call_function<\/a>(uint8_t number) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l01252"><\/a><span class="lineno"> 1252<\/span>&#160;<\/div><div class="line"><a name="l01254"><\/a><span class="lineno"> 1254<\/span>&#160;<\/div><div class="line"><a name="l01257"><\/a><span class="lineno"> 1257<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_system.html#a7731917ccc713c153cdcaf3af9894fd7">update<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l01258"><\/a><span class="lineno"> 1258<\/span>&#160;<\/div><div class="line"><a name="l01260"><\/a><span class="lineno"> 1260<\/span>&#160;<\/div><div class="line"><a name="l01266"><\/a><span class="lineno"> 1266<\/span>&#160;  <span class="keywordtype">void<\/span> <a class="code" href="class_liquid_system.html#a263abccb44122e37e72f2acac9befb14">softUpdate<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l01267"><\/a><span class="lineno"> 1267<\/span>&#160;<\/div><div class="line"><a name="l01269"><\/a><span class="lineno"> 1269<\/span>&#160;<\/div><div class="line"><a name="l01270"><\/a><span class="lineno"> 1270<\/span>&#160;<span class="keyword">private<\/span>:<\/div><div class="line"><a name="l01271"><\/a><span class="lineno"> 1271<\/span>&#160;  <a class="code" href="class_liquid_menu.html">LiquidMenu<\/a> *_p_liquidMenu[<a class="code" href="_liquid_menu__config_8h.html#aaaae1f275043c460c78e2c76026f7654">MAX_MENUS<\/a>]; <\/div><div class="line"><a name="l01272"><\/a><span class="lineno"> 1272<\/span>&#160;  uint8_t _menuCount; <\/div><div class="line"><a name="l01273"><\/a><span class="lineno"> 1273<\/span>&#160;  uint8_t _currentMenu;<\/div><div class="line"><a name="l01274"><\/a><span class="lineno"> 1274<\/span>&#160;};<\/div><div class="ttc" id="class_liquid_line_html_ac1eb7ed72384c5f024ed12cdf7c85a95"><div class="ttname"><a href="class_liquid_line.html#ac1eb7ed72384c5f024ed12cdf7c85a95">LiquidLine::LiquidLine<\/a><\/div><div class="ttdeci">LiquidLine(uint8_t column, uint8_t row, A &amp;variableA, B &amp;variableB, C &amp;variableC)<\/div><div class="ttdoc">Constructor for three variables\/constants. <\/div><div class="ttdef"><b>Definition:<\/b> LiquidMenu.h:368<\/div><\/div>$/;"	a
l00001	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_menu__config_8h_source.html	/^<a href="_liquid_menu__config_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#pragma once<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#define LiquidCrystal_LIBRARY (1)<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#define LiquidCrystal_I2C_LIBRARY (2)<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment">\/\/ Select a &quot;LiquidCrystal&quot; library:<\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="comment">\/\/ ---------------------------------<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="comment">\/\/ #define LIQUIDMENU_LIBRARY LiquidCrystal_LIBRARY<\/span><\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="comment">\/\/ #include &lt;LiquidCrystal.h&gt;<\/span><\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<span class="comment">\/\/ #define DisplayClass LiquidCrystal<\/span><\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<span class="preprocessor">#define LIQUIDMENU_LIBRARY LiquidCrystal_I2C_LIBRARY<\/span><\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<span class="preprocessor">#include &lt;LiquidCrystal_I2C.h&gt;<\/span><\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<span class="preprocessor">#define DisplayClass LiquidCrystal_I2C<\/span><\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<span class="comment">\/\/ #include &lt;LIBRARY_HEADER.h&gt;<\/span><\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<span class="comment">\/\/ #define DisplayClass LIBRARY_CONSTRUCTOR<\/span><\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<span class="comment"><\/span><\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<span class="comment">\/\/ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<\/span><\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno"><a class="line" href="_liquid_menu__config_8h.html#a391500ead9260b43f8cb31151c74d65e">   61<\/a><\/span>&#160;<span class="keyword">const<\/span> uint8_t <a class="code" href="_liquid_menu__config_8h.html#a391500ead9260b43f8cb31151c74d65e">MAX_VARIABLES<\/a> = 5; <\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno"><a class="line" href="_liquid_menu__config_8h.html#aedd2637cf600dbab38e5164475ee8cd8">   64<\/a><\/span>&#160;<span class="keyword">const<\/span> uint8_t <a class="code" href="_liquid_menu__config_8h.html#aedd2637cf600dbab38e5164475ee8cd8">MAX_FUNCTIONS<\/a> = 8; <\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno"><a class="line" href="_liquid_menu__config_8h.html#ae19922bb51de39e7ba005c83c75bc4f9">   67<\/a><\/span>&#160;<span class="keyword">const<\/span> uint8_t <a class="code" href="_liquid_menu__config_8h.html#ae19922bb51de39e7ba005c83c75bc4f9">MAX_LINES<\/a> = 12; <\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno"><a class="line" href="_liquid_menu__config_8h.html#ada3126ed8819086bcaf2a574e20e6c7b">   70<\/a><\/span>&#160;<span class="keyword">const<\/span> uint8_t <a class="code" href="_liquid_menu__config_8h.html#ada3126ed8819086bcaf2a574e20e6c7b">MAX_SCREENS<\/a> = 14; <\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno"><a class="line" href="_liquid_menu__config_8h.html#aaaae1f275043c460c78e2c76026f7654">   73<\/a><\/span>&#160;<span class="keyword">const<\/span> uint8_t <a class="code" href="_liquid_menu__config_8h.html#aaaae1f275043c460c78e2c76026f7654">MAX_MENUS<\/a> = 8; <\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<span class="comment">\/\/ Turns the debugging messages on or off.<\/span><\/div><div class="line"><a name="l00076"><\/a><span class="lineno"><a class="line" href="_liquid_menu__config_8h.html#a11edb92ef250fa78df3d6627cf3f1658">   76<\/a><\/span>&#160;<span class="preprocessor">#define LIQUIDMENU_DEBUG false <\/span><\/div><div class="ttc" id="_liquid_menu__config_8h_html_ada3126ed8819086bcaf2a574e20e6c7b"><div class="ttname"><a href="_liquid_menu__config_8h.html#ada3126ed8819086bcaf2a574e20e6c7b">MAX_SCREENS<\/a><\/div><div class="ttdeci">const uint8_t MAX_SCREENS<\/div><div class="ttdoc">Configures the number of available screens per menu. <\/div><div class="ttdef"><b>Definition:<\/b> LiquidMenu_config.h:70<\/div><\/div>$/;"	a
l00001	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_menu__debug_8h_source.html	/^<a href="_liquid_menu__debug_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#pragma once<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#if LIQUIDMENU_DEBUG<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">  #ifdef ARDUINO_ARCH_AVR<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">    #include &lt;Arduino.h&gt;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">    #define DEBUG(x) Serial.print(x);<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">    #define DEBUGLN(x) Serial.println(x);<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">    #define DEBUG2(x, y) Serial.print(x, y);<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">    #define DEBUGLN2(x, y) Serial.println(x, y);<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">  #else<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">    #define DEBUG(x) std::cout &lt;&lt; x;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">    #define DEBUGLN(x) std::cout &lt;&lt; x &lt;&lt; std::endl;<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">    #define DEBUG2(x, y) std::cout &lt;&lt; x &lt;&lt; y;<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">    #define DEBUGLN2(x, y) std::cout &lt;&lt; x &lt;&lt; y &lt;&lt; std::endl;<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">  #endif<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#else<\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="preprocessor">  #define DEBUG(x)<\/span><\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">  #define DEBUGLN(x)<\/span><\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">  #define DEBUG2(x, y)<\/span><\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">  #define DEBUGLN2(x, y)<\/span><\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><\/div><!-- fragment --><\/div><!-- contents -->$/;"	a
l00001	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\glyphs_8h_source.html	/^<a href="glyphs_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#pragma once<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespaceglyph.html">glyph<\/a> {<\/div><div class="line"><a name="l00010"><\/a><span class="lineno"><a class="line" href="glyphs_8h.html#a098afc4dbc1308c201b8958dd471edc3">   10<\/a><\/span>&#160;uint8_t <a class="code" href="glyphs_8h.html#a098afc4dbc1308c201b8958dd471edc3">rightFocus<\/a>[8] = {<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;  0b00000,<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;  0b00100,<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;  0b01000,<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;  0b11111,<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;  0b01000,<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;  0b00100,<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;  0b00000,<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;  0b00000<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;};<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno"><a class="line" href="glyphs_8h.html#a674cace4440dbfd62ce49b56bc7567b5">   22<\/a><\/span>&#160;uint8_t <a class="code" href="glyphs_8h.html#a674cace4440dbfd62ce49b56bc7567b5">leftFocus<\/a>[8] = {<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;  0b00000,<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;  0b00100,<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;  0b00010,<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;  0b11111,<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;  0b00010,<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;  0b00100,<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;  0b00000,<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;  0b00000<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;};<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno"><a class="line" href="glyphs_8h.html#a5e05ec5a67cf3c9a6c0b7268d99d8988">   34<\/a><\/span>&#160;uint8_t <a class="code" href="glyphs_8h.html#a5e05ec5a67cf3c9a6c0b7268d99d8988">customFocus<\/a>[8] = {<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;  0b00000,<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;  0b00000,<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;  0b01110,<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;  0b01110,<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;  0b01110,<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;  0b00000,<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;  0b00000,<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;  0b00000<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;};<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;} <span class="comment">\/\/namespace glyph<\/span><\/div><div class="ttc" id="glyphs_8h_html_a098afc4dbc1308c201b8958dd471edc3"><div class="ttname"><a href="glyphs_8h.html#a098afc4dbc1308c201b8958dd471edc3">glyph::rightFocus<\/a><\/div><div class="ttdeci">uint8_t rightFocus[8]<\/div><div class="ttdoc">The focus glyph shown on the right. <\/div><div class="ttdef"><b>Definition:<\/b> glyphs.h:10<\/div><\/div>$/;"	a
l00001	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\messages_8h_source.html	/^<a href="messages_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#pragma once<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#if ESSENTIAL_MESSAGES<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#define PRINT(x) Serial.print(x);<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#define PRINTLN(x) Serial.println(x);<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#else<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno"><a class="line" href="messages_8h.html#ad61844ab25ea35139950e67e9693bc9f">   17<\/a><\/span>&#160;<span class="preprocessor">#define PRINT(x)<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00020"><\/a><span class="lineno"><a class="line" href="messages_8h.html#af1066d64ca1f5b865b189616551600dc">   20<\/a><\/span>&#160;<span class="preprocessor">#define PRINTLN(x)<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">#if DEBUGGING_MESSAGES<\/span><\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">#define DEBUG(x) Serial.print(x);<\/span><\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">#define DEBUGLN(x) Serial.println(x);<\/span><\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="preprocessor">#define DEBUG2(x, y) Serial.print(x, y);<\/span><\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="preprocessor">#define DEBUGLN2(x, y) Serial.println(x, y);<\/span><\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<span class="preprocessor">#define START(x) Serial.print(x); uint32_t start = millis();<\/span><\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<span class="preprocessor">#define STOP() Serial.print(&quot; OK [&quot;); Serial.print((millis() - start) \/ 1000.0); Serial.println(&quot;s]&quot;);<\/span><\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<span class="preprocessor">#else<\/span><\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno"><a class="line" href="messages_8h.html#a3dfa58b1c5c2943dd49d8aa1981d377d">   44<\/a><\/span>&#160;<span class="preprocessor">#define DEBUG(x)<\/span><\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno"><a class="line" href="messages_8h.html#a020aacec0582e285f02d31f24f2bb24d">   47<\/a><\/span>&#160;<span class="preprocessor">#define DEBUGLN(x)<\/span><\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno"><a class="line" href="messages_8h.html#ae1f82d3960e54e6f2c2f6f17186bf6e6">   50<\/a><\/span>&#160;<span class="preprocessor">#define DEBUG2(x, y)<\/span><\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno"><a class="line" href="messages_8h.html#a6d45d536a859df5c32b99b48801d39a5">   53<\/a><\/span>&#160;<span class="preprocessor">#define DEBUGLN2(x, y)<\/span><\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno"><a class="line" href="messages_8h.html#aee14722dd5e918c757b31070a3fcd22b">   56<\/a><\/span>&#160;<span class="preprocessor">#define START(x)<\/span><\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno"><a class="line" href="messages_8h.html#ae20b3ad59ad4ebcd680252aafbbd8bdd">   59<\/a><\/span>&#160;<span class="preprocessor">#define STOP()<\/span><\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><\/div><!-- fragment --><\/div><!-- contents -->$/;"	a
l00001	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\serial__debugging_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="preprocessor">#pragma once<\/span><\/div><div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<\/div><div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="preprocessor">#include &lt;Arduino.h&gt;<\/span><\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#if DEBUGGING_MESSAGES<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#define DEBUG(x) Serial.print(x);<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#define DEBUGLN(x) Serial.println(x);<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#define DEBUG2(x, y) Serial.print(x, y);<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#define DEBUGLN2(x, y) Serial.println(x, y);<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#else<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#define DEBUG(x)<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#define DEBUGLN(x)<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#define DEBUG2(x, y)<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#define DEBUGLN2(x, y)<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><\/div><!-- fragment --><\/div><!-- contents -->$/;"	a
l00001	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\symbols_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<span class="preprocessor">#pragma once<\/span><\/div><div class="line"><a name="l00002"><\/a><span class="lineno">    2<\/span>&#160;<\/div><div class="line"><a name="l00003"><\/a><span class="lineno">    3<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacesymbol.html">symbol<\/a> {<\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;uint8_t rightFocus[8] = {<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;    0b00000,<\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;    0b00100,<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;    0b01000,<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;    0b11111,<\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;    0b01000,<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;    0b00100,<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;    0b00000,<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;    0b00000<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;};<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;uint8_t leftFocus[8] = {<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;    0b00000,<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;    0b00100,<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    0b00010,<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    0b11111,<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    0b00010,<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;    0b00100,<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;    0b00000,<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;    0b00000<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;};<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;uint8_t customFocus[8] = {<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;    0b00000,<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;    0b00000,<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;    0b01110,<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;    0b01110,<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;    0b01110,<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;    0b00000,<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;    0b00000,<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;    0b00000<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;};<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;} <span class="comment">\/\/namespace symbol<\/span><\/div><div class="ttc" id="namespacesymbol_html"><div class="ttname"><a href="namespacesymbol.html">symbol<\/a><\/div><div class="ttdef"><b>Definition:<\/b> symbols.h:3<\/div><\/div>$/;"	a
l00002	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00002"><\/a>00002 <span class="comment">\/\/<\/span><span class="comment"><\/span>$/;"	a
l00003	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00003"><\/a>00003 <span class="comment">\/\/\/ \\mainpage AccelStepper library for Arduino<\/span>$/;"	a
l00004	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00004"><\/a>00004 <span class="comment">\/\/\/<\/span>$/;"	a
l00005	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00005"><\/a>00005 <span class="comment">\/\/\/ This is the Arduino AccelStepper library.<\/span>$/;"	a
l00006	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00006"><\/a>00006 <span class="comment">\/\/\/ It provides an object-oriented interface for 2 or 4 pin stepper motors.<\/span>$/;"	a
l00007	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00007"><\/a>00007 <span class="comment">\/\/\/<\/span>$/;"	a
l00008	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00008"><\/a>00008 <span class="comment">\/\/\/ The standard Arduino IDE includes the Stepper library<\/span>$/;"	a
l00009	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00009"><\/a>00009 <span class="comment">\/\/\/ (http:\/\/arduino.cc\/en\/Reference\/Stepper) for stepper motors. It is<\/span>$/;"	a
l00010	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00010"><\/a>00010 <span class="comment">\/\/\/ perfectly adequate for simple, single motor applications.<\/span>$/;"	a
l00011	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00011"><\/a>00011 <span class="comment">\/\/\/<\/span>$/;"	a
l00012	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00012"><\/a>00012 <span class="comment">\/\/\/ AccelStepper significantly improves on the standard Arduino Stepper library in several ways:<\/span>$/;"	a
l00013	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00013"><\/a>00013 <span class="comment">\/\/\/ \\li Supports acceleration and deceleration<\/span>$/;"	a
l00014	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00014"><\/a>00014 <span class="comment">\/\/\/ \\li Supports multiple simultaneous steppers, with independent concurrent stepping on each stepper<\/span>$/;"	a
l00015	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00015"><\/a>00015 <span class="comment">\/\/\/ \\li API functions never delay() or block<\/span>$/;"	a
l00016	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00016"><\/a>00016 <span class="comment">\/\/\/ \\li Supports 2 and 4 wire steppers, plus 4 wire half steppers.<\/span>$/;"	a
l00017	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00017"><\/a>00017 <span class="comment">\/\/\/ \\li Supports alternate stepping functions to enable support of AFMotor (https:\/\/github.com\/adafruit\/Adafruit-Motor-Shield-library)<\/span>$/;"	a
l00018	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00018"><\/a>00018 <span class="comment">\/\/\/ \\li Supports stepper drivers such as the Sparkfun EasyDriver (based on 3967 driver chip)<\/span>$/;"	a
l00019	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00019"><\/a>00019 <span class="comment">\/\/\/ \\li Very slow speeds are supported<\/span>$/;"	a
l00020	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00020"><\/a>00020 <span class="comment">\/\/\/ \\li Extensive API<\/span>$/;"	a
l00021	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00021"><\/a>00021 <span class="comment">\/\/\/ \\li Subclass support<\/span>$/;"	a
l00022	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00022"><\/a>00022 <span class="comment">\/\/\/<\/span>$/;"	a
l00023	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00023"><\/a>00023 <span class="comment">\/\/\/ The latest version of this documentation can be downloaded from <\/span>$/;"	a
l00024	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00024"><\/a>00024 <span class="comment">\/\/\/ http:\/\/www.open.com.au\/mikem\/arduino\/AccelStepper<\/span>$/;"	a
l00025	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00025"><\/a>00025 <span class="comment">\/\/\/<\/span>$/;"	a
l00026	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00026"><\/a>00026 <span class="comment">\/\/\/ Example Arduino programs are included to show the main modes of use.<\/span>$/;"	a
l00027	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00027"><\/a>00027 <span class="comment">\/\/\/<\/span>$/;"	a
l00028	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00028"><\/a>00028 <span class="comment">\/\/\/ The version of the package that this documentation refers to can be downloaded <\/span>$/;"	a
l00029	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00029"><\/a>00029 <span class="comment">\/\/\/ from http:\/\/www.open.com.au\/mikem\/arduino\/AccelStepper\/AccelStepper-1.11.zip<\/span>$/;"	a
l00030	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00030"><\/a>00030 <span class="comment">\/\/\/ You can find the latest version at http:\/\/www.open.com.au\/mikem\/arduino\/AccelStepper<\/span>$/;"	a
l00031	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00031"><\/a>00031 <span class="comment">\/\/\/<\/span>$/;"	a
l00032	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00032"><\/a>00032 <span class="comment">\/\/\/ Tested on Arduino Diecimila and Mega with arduino-0018 &amp; arduino-0021 <\/span>$/;"	a
l00033	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00033"><\/a>00033 <span class="comment">\/\/\/ on OpenSuSE 11.1 and avr-libc-1.6.1-1.15,<\/span>$/;"	a
l00034	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00034"><\/a>00034 <span class="comment">\/\/\/ cross-avr-binutils-2.19-9.1, cross-avr-gcc-4.1.3_20080612-26.5.<\/span>$/;"	a
l00035	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00035"><\/a>00035 <span class="comment">\/\/\/<\/span>$/;"	a
l00036	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00036"><\/a>00036 <span class="comment">\/\/\/ \\par Installation<\/span>$/;"	a
l00037	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00037"><\/a>00037 <span class="comment">\/\/\/ Install in the usual way: unzip the distribution zip file to the libraries<\/span>$/;"	a
l00038	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00038"><\/a>00038 <span class="comment">\/\/\/ sub-folder of your sketchbook. <\/span>$/;"	a
l00039	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00039"><\/a>00039 <span class="comment">\/\/\/<\/span>$/;"	a
l00040	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00040"><\/a>00040 <span class="comment">\/\/\/ This software is Copyright (C) 2010 Mike McCauley. Use is subject to license<\/span>$/;"	a
l00041	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00041"><\/a>00041 <span class="comment">\/\/\/ conditions. The main licensing options available are GPL V2 or Commercial:<\/span>$/;"	a
l00042	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00042"><\/a>00042 <span class="comment">\/\/\/ <\/span>$/;"	a
l00043	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00043"><\/a>00043 <span class="comment">\/\/\/ \\par Open Source Licensing GPL V2<\/span>$/;"	a
l00044	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00044"><\/a>00044 <span class="comment">\/\/\/ This is the appropriate option if you want to share the source code of your<\/span>$/;"	a
l00045	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00045"><\/a>00045 <span class="comment">\/\/\/ application with everyone you distribute it to, and you also want to give them<\/span>$/;"	a
l00046	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00046"><\/a>00046 <span class="comment">\/\/\/ the right to share who uses it. If you wish to use this software under Open<\/span>$/;"	a
l00047	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00047"><\/a>00047 <span class="comment">\/\/\/ Source Licensing, you must contribute all your source code to the open source<\/span>$/;"	a
l00048	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00048"><\/a>00048 <span class="comment">\/\/\/ community in accordance with the GPL Version 2 when your application is<\/span>$/;"	a
l00049	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00049"><\/a>00049 <span class="comment">\/\/\/ distributed. See http:\/\/www.gnu.org\/copyleft\/gpl.html<\/span>$/;"	a
l00050	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00050"><\/a>00050 <span class="comment">\/\/\/ <\/span>$/;"	a
l00051	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00051"><\/a>00051 <span class="comment">\/\/\/ \\par Commercial Licensing<\/span>$/;"	a
l00052	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00052"><\/a>00052 <span class="comment">\/\/\/ This is the appropriate option if you are creating proprietary applications<\/span>$/;"	a
l00053	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00053"><\/a>00053 <span class="comment">\/\/\/ and you are not prepared to distribute and share the source code of your<\/span>$/;"	a
l00054	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00054"><\/a>00054 <span class="comment">\/\/\/ application. Contact info@open.com.au for details.<\/span>$/;"	a
l00055	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00055"><\/a>00055 <span class="comment">\/\/\/<\/span>$/;"	a
l00056	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00056"><\/a>00056 <span class="comment">\/\/\/ \\par Revision History<\/span>$/;"	a
l00057	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00057"><\/a>00057 <span class="comment">\/\/\/ \\version 1.0 Initial release<\/span>$/;"	a
l00058	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00058"><\/a>00058 <span class="comment">\/\/\/<\/span>$/;"	a
l00059	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00059"><\/a>00059 <span class="comment">\/\/\/ \\version 1.1 Added speed() function to get the current speed.<\/span>$/;"	a
l00060	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00060"><\/a>00060 <span class="comment">\/\/\/ \\version 1.2 Added runSpeedToPosition() submitted by Gunnar Arndt.<\/span>$/;"	a
l00061	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00061"><\/a>00061 <span class="comment">\/\/\/ \\version 1.3 Added support for stepper drivers (ie with Step and Direction inputs) with _pins == 1<\/span>$/;"	a
l00062	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00062"><\/a>00062 <span class="comment">\/\/\/ \\version 1.4 Added functional contructor to support AFMotor, contributed by Limor, with example sketches.<\/span>$/;"	a
l00063	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00063"><\/a>00063 <span class="comment">\/\/\/ \\version 1.5 Improvements contributed by Peter Mousley: Use of microsecond steps and other speed improvements<\/span>$/;"	a
l00064	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00064"><\/a>00064 <span class="comment">\/\/\/              to increase max stepping speed to about 4kHz. New option for user to set the min allowed pulse width.<\/span>$/;"	a
l00065	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00065"><\/a>00065 <span class="comment">\/\/\/              Added checks for already running at max speed and skip further calcs if so. <\/span>$/;"	a
l00066	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00066"><\/a>00066 <span class="comment">\/\/\/ \\version 1.6 Fixed a problem with wrapping of microsecond stepping that could cause stepping to hang. <\/span>$/;"	a
l00067	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00067"><\/a>00067 <span class="comment">\/\/\/              Reported by Sandy Noble.<\/span>$/;"	a
l00068	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00068"><\/a>00068 <span class="comment">\/\/\/              Removed redundant _lastRunTime member.<\/span>$/;"	a
l00069	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00069"><\/a>00069 <span class="comment">\/\/\/ \\version 1.7 Fixed a bug where setCurrentPosition() did always work as expected. Reported by Peter Linhart.<\/span>$/;"	a
l00070	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00070"><\/a>00070 <span class="comment">\/\/\/              Reported by Sandy Noble.<\/span>$/;"	a
l00071	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00071"><\/a>00071 <span class="comment">\/\/\/              Removed redundant _lastRunTime member.<\/span>$/;"	a
l00072	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00072"><\/a>00072 <span class="comment">\/\/\/ \\version 1.8 Added support for 4 pin half-steppers, requested by Harvey Moon<\/span>$/;"	a
l00073	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00073"><\/a>00073 <span class="comment">\/\/\/ \\version 1.9 setCurrentPosition() now also sets motor speed to 0.<\/span>$/;"	a
l00074	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00074"><\/a>00074 <span class="comment">\/\/\/ \\version 1.10 Builds on Arduino 1.0<\/span>$/;"	a
l00075	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00075"><\/a>00075 <span class="comment">\/\/\/ \\version 1.11 Improvments from Michael Ellison:<\/span>$/;"	a
l00076	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00076"><\/a>00076 <span class="comment">\/\/\/   Added optional enable line support for stepper drivers<\/span>$/;"	a
l00077	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00077"><\/a>00077 <span class="comment">\/\/\/   Added inversion for step\/direction\/enable lines for stepper drivers<\/span>$/;"	a
l00078	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00078"><\/a>00078 <span class="comment">\/\/\/<\/span>$/;"	a
l00079	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00079"><\/a>00079 <span class="comment">\/\/\/ \\author  Mike McCauley (mikem@open.com.au)<\/span>$/;"	a
l00080	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00080"><\/a>00080 <span class="comment"><\/span><span class="comment">\/\/ Copyright (C) 2009 Mike McCauley<\/span>$/;"	a
l00081	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00081"><\/a>00081 <span class="comment">\/\/ $Id: AccelStepper.h,v 1.5 2011\/03\/21 00:42:15 mikem Exp mikem $<\/span>$/;"	a
l00082	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00082"><\/a>00082 $/;"	a
l00083	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00083"><\/a>00083 <span class="preprocessor">#ifndef AccelStepper_h<\/span>$/;"	a
l00084	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00084"><\/a>00084 <span class="preprocessor"><\/span><span class="preprocessor">#define AccelStepper_h<\/span>$/;"	a
l00085	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00085"><\/a>00085 <span class="preprocessor"><\/span>$/;"	a
l00086	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00086"><\/a>00086 <span class="preprocessor">#include &lt;stdlib.h&gt;<\/span>$/;"	a
l00087	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00087"><\/a>00087 <span class="preprocessor">#if ARDUINO &gt;= 100<\/span>$/;"	a
l00088	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00088"><\/a>00088 <span class="preprocessor"><\/span><span class="preprocessor">#include &lt;Arduino.h&gt;<\/span>$/;"	a
l00089	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00089"><\/a>00089 <span class="preprocessor">#else<\/span>$/;"	a
l00090	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00090"><\/a>00090 <span class="preprocessor"><\/span><span class="preprocessor">#include &lt;wiring.h&gt;<\/span>$/;"	a
l00091	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00091"><\/a>00091 <span class="preprocessor">#endif<\/span>$/;"	a
l00092	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00092"><\/a>00092 <span class="preprocessor"><\/span>$/;"	a
l00093	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00093"><\/a>00093 <span class="comment">\/\/ These defs cause trouble on some versions of Arduino<\/span>$/;"	a
l00094	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00094"><\/a>00094 <span class="preprocessor">#undef round<\/span>$/;"	a
l00095	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00095"><\/a>00095 <span class="preprocessor"><\/span><span class="comment"><\/span>$/;"	a
l00096	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00096"><\/a>00096 <span class="comment">\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/<\/span>$/;"	a
l00097	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00097"><\/a>00097 <span class="comment">\/\/\/ \\class AccelStepper AccelStepper.h &lt;AccelStepper.h&gt;<\/span>$/;"	a
l00098	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00098"><\/a>00098 <span class="comment">\/\/\/ \\brief Support for stepper motors with acceleration etc.<\/span>$/;"	a
l00099	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00099"><\/a>00099 <span class="comment">\/\/\/<\/span>$/;"	a
l00100	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00100"><\/a>00100 <span class="comment">\/\/\/ This defines a single 2 or 4 pin stepper motor, or stepper moter with fdriver chip, with optional<\/span>$/;"	a
l00101	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00101"><\/a>00101 <span class="comment">\/\/\/ acceleration, deceleration, absolute positioning commands etc. Multiple<\/span>$/;"	a
l00102	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00102"><\/a>00102 <span class="comment">\/\/\/ simultaneous steppers are supported, all moving <\/span>$/;"	a
l00103	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00103"><\/a>00103 <span class="comment">\/\/\/ at different speeds and accelerations. <\/span>$/;"	a
l00104	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00104"><\/a>00104 <span class="comment">\/\/\/<\/span>$/;"	a
l00105	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00105"><\/a>00105 <span class="comment">\/\/\/ \\par Operation<\/span>$/;"	a
l00106	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00106"><\/a>00106 <span class="comment">\/\/\/ This module operates by computing a step time in microseconds. The step<\/span>$/;"	a
l00107	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00107"><\/a>00107 <span class="comment">\/\/\/ time is recomputed after each step and after speed and acceleration<\/span>$/;"	a
l00108	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00108"><\/a>00108 <span class="comment">\/\/\/ parameters are changed by the caller. The time of each step is recorded in<\/span>$/;"	a
l00109	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00109"><\/a>00109 <span class="comment">\/\/\/ microseconds. The run() function steps the motor if a new step is due.<\/span>$/;"	a
l00110	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00110"><\/a>00110 <span class="comment">\/\/\/ The run() function must be called frequently until the motor is in the<\/span>$/;"	a
l00111	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00111"><\/a>00111 <span class="comment">\/\/\/ desired position, after which time run() will do nothing.<\/span>$/;"	a
l00112	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00112"><\/a>00112 <span class="comment">\/\/\/<\/span>$/;"	a
l00113	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00113"><\/a>00113 <span class="comment">\/\/\/ \\par Positioning<\/span>$/;"	a
l00114	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00114"><\/a>00114 <span class="comment">\/\/\/ Positions are specified by a signed long integer. At<\/span>$/;"	a
l00115	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00115"><\/a>00115 <span class="comment">\/\/\/ construction time, the current position of the motor is consider to be 0. Positive<\/span>$/;"	a
l00116	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00116"><\/a>00116 <span class="comment">\/\/\/ positions are clockwise from the initial position; negative positions are<\/span>$/;"	a
l00117	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00117"><\/a>00117 <span class="comment">\/\/\/ anticlockwise. The curent position can be altered for instance after<\/span>$/;"	a
l00118	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00118"><\/a>00118 <span class="comment">\/\/\/ initialization positioning.<\/span>$/;"	a
l00119	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00119"><\/a>00119 <span class="comment">\/\/\/<\/span>$/;"	a
l00120	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00120"><\/a>00120 <span class="comment">\/\/\/ \\par Caveats<\/span>$/;"	a
l00121	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00121"><\/a>00121 <span class="comment">\/\/\/ This is an open loop controller: If the motor stalls or is oversped,<\/span>$/;"	a
l00122	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00122"><\/a>00122 <span class="comment">\/\/\/ AccelStepper will not have a correct <\/span>$/;"	a
l00123	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00123"><\/a>00123 <span class="comment">\/\/\/ idea of where the motor really is (since there is no feedback of the motor's<\/span>$/;"	a
l00124	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00124"><\/a>00124 <span class="comment">\/\/\/ real position. We only know where we _think_ it is, relative to the<\/span>$/;"	a
l00125	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00125"><\/a>00125 <span class="comment">\/\/\/ initial starting point).<\/span>$/;"	a
l00126	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00126"><\/a>00126 <span class="comment">\/\/\/<\/span>$/;"	a
l00127	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00127"><\/a>00127 <span class="comment">\/\/\/ The fastest motor speed that can be reliably supported is 4000 steps per<\/span>$/;"	a
l00128	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00128"><\/a>00128 <span class="comment">\/\/\/ second (4 kHz) at a clock frequency of 16 MHz. However, any speed less than that<\/span>$/;"	a
l00129	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00129"><\/a>00129 <span class="comment">\/\/\/ down to very slow speeds (much less than one per second) are also supported,<\/span>$/;"	a
l00130	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00130"><\/a>00130 <span class="comment">\/\/\/ provided the run() function is called frequently enough to step the motor<\/span>$/;"	a
l00131	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00131"><\/a>00131 <span class="comment">\/\/\/ whenever required for the speed set.<\/span>$/;"	a
l00132	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00132"><\/a><a class="code" href="classAccelStepper.html">00132<\/a> <span class="comment"><\/span><span class="keyword">class <\/span><a class="code" href="classAccelStepper.html" title="Support for stepper motors with acceleration etc.">AccelStepper<\/a>$/;"	a
l00133	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00133"><\/a>00133 {$/;"	a
l00134	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00134"><\/a>00134 <span class="keyword">public<\/span>:<span class="comment"><\/span>$/;"	a
l00135	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00135"><\/a>00135 <span class="comment">    \/\/\/ Constructor. You can have multiple simultaneous steppers, all moving<\/span>$/;"	a
l00136	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00136"><\/a>00136 <span class="comment">    \/\/\/ at different speeds and accelerations, provided you call their run()<\/span>$/;"	a
l00137	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00137"><\/a>00137 <span class="comment">    \/\/\/ functions at frequent enough intervals. Current Position is set to 0, target<\/span>$/;"	a
l00138	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00138"><\/a>00138 <span class="comment">    \/\/\/ position is set to 0. MaxSpeed and Acceleration default to 1.0.<\/span>$/;"	a
l00139	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00139"><\/a>00139 <span class="comment">    \/\/\/ The motor pins will be initialised to OUTPUT mode during the<\/span>$/;"	a
l00140	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00140"><\/a>00140 <span class="comment">    \/\/\/ constructor by a call to enableOutputs().<\/span>$/;"	a
l00141	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00141"><\/a>00141 <span class="comment">    \/\/\/ \\param[in] pins Number of pins to interface to. 1, 2 or 4 are<\/span>$/;"	a
l00142	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00142"><\/a>00142 <span class="comment">    \/\/\/ supported. 1 means a stepper driver (with Step and Direction pins).<\/span>$/;"	a
l00143	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00143"><\/a>00143 <span class="comment">    \/\/\/ If an enable line is also needed, call setEnablePin() after construction.<\/span>$/;"	a
l00144	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00144"><\/a>00144 <span class="comment">    \/\/\/ You may also invert the pins using setPinsInverted().<\/span>$/;"	a
l00145	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00145"><\/a>00145 <span class="comment">    \/\/\/ 2 means a 2 wire stepper. 4 means a 4 wire stepper. 8 means a 4 wire half stepper<\/span>$/;"	a
l00146	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00146"><\/a>00146 <span class="comment">    \/\/\/ Defaults to 4 pins.<\/span>$/;"	a
l00147	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00147"><\/a>00147 <span class="comment">    \/\/\/ \\param[in] pin1 Arduino digital pin number for motor pin 1. Defaults<\/span>$/;"	a
l00148	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00148"><\/a>00148 <span class="comment">    \/\/\/ to pin 2. For a driver (pins==1), this is the Step input to the driver. Low to high transition means to step)<\/span>$/;"	a
l00149	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00149"><\/a>00149 <span class="comment">    \/\/\/ \\param[in] pin2 Arduino digital pin number for motor pin 2. Defaults<\/span>$/;"	a
l00150	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00150"><\/a>00150 <span class="comment">    \/\/\/ to pin 3. For a driver (pins==1), this is the Direction input the driver. High means forward.<\/span>$/;"	a
l00151	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00151"><\/a>00151 <span class="comment">    \/\/\/ \\param[in] pin3 Arduino digital pin number for motor pin 3. Defaults<\/span>$/;"	a
l00152	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00152"><\/a>00152 <span class="comment">    \/\/\/ to pin 4.<\/span>$/;"	a
l00153	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00153"><\/a>00153 <span class="comment">    \/\/\/ \\param[in] pin4 Arduino digital pin number for motor pin 4. Defaults<\/span>$/;"	a
l00154	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00154"><\/a>00154 <span class="comment">    \/\/\/ to pin 5.<\/span>$/;"	a
l00155	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00155"><\/a>00155 <span class="comment"><\/span>    <a class="code" href="classAccelStepper.html#a1290897df35915069e5eca9d034038c">AccelStepper<\/a>(uint8_t pins = 4, uint8_t pin1 = 2, uint8_t pin2 = 3, uint8_t pin3 = 4, uint8_t pin4 = 5);$/;"	a
l00156	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00156"><\/a>00156 <span class="comment"><\/span>$/;"	a
l00157	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00157"><\/a>00157 <span class="comment">    \/\/\/ Alternate Constructor which will call your own functions for forward and backward steps. <\/span>$/;"	a
l00158	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00158"><\/a>00158 <span class="comment">    \/\/\/ You can have multiple simultaneous steppers, all moving<\/span>$/;"	a
l00159	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00159"><\/a>00159 <span class="comment">    \/\/\/ at different speeds and accelerations, provided you call their run()<\/span>$/;"	a
l00160	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00160"><\/a>00160 <span class="comment">    \/\/\/ functions at frequent enough intervals. Current Position is set to 0, target<\/span>$/;"	a
l00161	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00161"><\/a>00161 <span class="comment">    \/\/\/ position is set to 0. MaxSpeed and Acceleration default to 1.0.<\/span>$/;"	a
l00162	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00162"><\/a>00162 <span class="comment">    \/\/\/ Any motor initialization should happen before hand, no pins are used or initialized.<\/span>$/;"	a
l00163	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00163"><\/a>00163 <span class="comment">    \/\/\/ \\param[in] forward void-returning procedure that will make a forward step<\/span>$/;"	a
l00164	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00164"><\/a>00164 <span class="comment">    \/\/\/ \\param[in] backward void-returning procedure that will make a backward step<\/span>$/;"	a
l00165	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00165"><\/a>00165 <span class="comment"><\/span>    <a class="code" href="classAccelStepper.html#a1290897df35915069e5eca9d034038c">AccelStepper<\/a>(<span class="keywordtype">void<\/span> (*forward)(), <span class="keywordtype">void<\/span> (*backward)());$/;"	a
l00166	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00166"><\/a>00166     <span class="comment"><\/span>$/;"	a
l00167	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00167"><\/a>00167 <span class="comment">    \/\/\/ Set the target position. The run() function will try to move the motor<\/span>$/;"	a
l00168	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00168"><\/a>00168 <span class="comment">    \/\/\/ from the current position to the target position set by the most<\/span>$/;"	a
l00169	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00169"><\/a>00169 <span class="comment">    \/\/\/ recent call to this function.<\/span>$/;"	a
l00170	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00170"><\/a>00170 <span class="comment">    \/\/\/ \\param[in] absolute The desired absolute position. Negative is<\/span>$/;"	a
l00171	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00171"><\/a>00171 <span class="comment">    \/\/\/ anticlockwise from the 0 position.<\/span>$/;"	a
l00172	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00172"><\/a>00172 <span class="comment"><\/span>    <span class="keywordtype">void<\/span>    <a class="code" href="classAccelStepper.html#ce236ede35f87c63d18da25810ec9736">moveTo<\/a>(<span class="keywordtype">long<\/span> absolute); $/;"	a
l00173	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00173"><\/a>00173 <span class="comment"><\/span>$/;"	a
l00174	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00174"><\/a>00174 <span class="comment">    \/\/\/ Set the target position relative to the current position<\/span>$/;"	a
l00175	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00175"><\/a>00175 <span class="comment">    \/\/\/ \\param[in] relative The desired position relative to the current position. Negative is<\/span>$/;"	a
l00176	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00176"><\/a>00176 <span class="comment">    \/\/\/ anticlockwise from the current position.<\/span>$/;"	a
l00177	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00177"><\/a>00177 <span class="comment"><\/span>    <span class="keywordtype">void<\/span>    <a class="code" href="classAccelStepper.html#68942c66e78fb7f7b5f0cdade6eb7f06">move<\/a>(<span class="keywordtype">long<\/span> relative);$/;"	a
l00178	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00178"><\/a>00178 <span class="comment"><\/span>$/;"	a
l00179	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00179"><\/a>00179 <span class="comment">    \/\/\/ Poll the motor and step it if a step is due, implementing<\/span>$/;"	a
l00180	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00180"><\/a>00180 <span class="comment">    \/\/\/ accelerations and decelerations to achive the ratget position. You must call this as<\/span>$/;"	a
l00181	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00181"><\/a>00181 <span class="comment">    \/\/\/ fequently as possible, but at least once per minimum step interval,<\/span>$/;"	a
l00182	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00182"><\/a>00182 <span class="comment">    \/\/\/ preferably in your main loop.<\/span>$/;"	a
l00183	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00183"><\/a>00183 <span class="comment">    \/\/\/ \\return true if the motor is at the target position.<\/span>$/;"	a
l00184	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00184"><\/a>00184 <span class="comment"><\/span>    <span class="keywordtype">boolean<\/span> <a class="code" href="classAccelStepper.html#608b2395b64ac15451d16d0371fe13ce">run<\/a>();$/;"	a
l00185	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00185"><\/a>00185 <span class="comment"><\/span>$/;"	a
l00186	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00186"><\/a>00186 <span class="comment">    \/\/\/ Poll the motor and step it if a step is due, implmenting a constant<\/span>$/;"	a
l00187	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00187"><\/a>00187 <span class="comment">    \/\/\/ speed as set by the most recent call to setSpeed().<\/span>$/;"	a
l00188	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00188"><\/a>00188 <span class="comment">    \/\/\/ \\return true if the motor was stepped.<\/span>$/;"	a
l00189	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00189"><\/a>00189 <span class="comment"><\/span>    <span class="keywordtype">boolean<\/span> <a class="code" href="classAccelStepper.html#a4a6bdf99f698284faaeb5542b0b7514">runSpeed<\/a>();$/;"	a
l00190	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00190"><\/a>00190 <span class="comment"><\/span>$/;"	a
l00191	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00191"><\/a>00191 <span class="comment">    \/\/\/ Sets the maximum permitted speed. the run() function will accelerate<\/span>$/;"	a
l00192	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00192"><\/a>00192 <span class="comment">    \/\/\/ up to the speed set by this function.<\/span>$/;"	a
l00193	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00193"><\/a>00193 <span class="comment">    \/\/\/ \\param[in] speed The desired maximum speed in steps per second. Must<\/span>$/;"	a
l00194	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00194"><\/a>00194 <span class="comment">    \/\/\/ be &gt; 0. Speeds of more than 1000 steps per second are unreliable. <\/span>$/;"	a
l00195	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00195"><\/a>00195 <span class="comment"><\/span>    <span class="keywordtype">void<\/span>    <a class="code" href="classAccelStepper.html#bee8d466229b87accba33d6ec929c18f">setMaxSpeed<\/a>(<span class="keywordtype">float<\/span> <a class="code" href="classAccelStepper.html#4f0989d0ae264e7eadfe1fa720769fb6">speed<\/a>);$/;"	a
l00196	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00196"><\/a>00196 <span class="comment"><\/span>$/;"	a
l00197	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00197"><\/a>00197 <span class="comment">    \/\/\/ Sets the acceleration and deceleration parameter.<\/span>$/;"	a
l00198	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00198"><\/a>00198 <span class="comment">    \/\/\/ \\param[in] acceleration The desired acceleration in steps per second<\/span>$/;"	a
l00199	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00199"><\/a>00199 <span class="comment">    \/\/\/ per second. Must be &gt; 0.<\/span>$/;"	a
l00200	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00200"><\/a>00200 <span class="comment"><\/span>    <span class="keywordtype">void<\/span>    <a class="code" href="classAccelStepper.html#dfb19e3cd2a028a1fe78131787604fd1">setAcceleration<\/a>(<span class="keywordtype">float<\/span> acceleration);$/;"	a
l00201	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00201"><\/a>00201 <span class="comment"><\/span>$/;"	a
l00202	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00202"><\/a>00202 <span class="comment">    \/\/\/ Sets the desired constant speed for use with runSpeed().<\/span>$/;"	a
l00203	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00203"><\/a>00203 <span class="comment">    \/\/\/ \\param[in] speed The desired constant speed in steps per<\/span>$/;"	a
l00204	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00204"><\/a>00204 <span class="comment">    \/\/\/ second. Positive is clockwise. Speeds of more than 1000 steps per<\/span>$/;"	a
l00205	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00205"><\/a>00205 <span class="comment">    \/\/\/ second are unreliable. Very slow speeds may be set (eg 0.00027777 for<\/span>$/;"	a
l00206	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00206"><\/a>00206 <span class="comment">    \/\/\/ once per hour, approximately. Speed accuracy depends on the Arduino<\/span>$/;"	a
l00207	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00207"><\/a>00207 <span class="comment">    \/\/\/ crystal. Jitter depends on how frequently you call the runSpeed() function.<\/span>$/;"	a
l00208	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00208"><\/a>00208 <span class="comment"><\/span>    <span class="keywordtype">void<\/span>    <a class="code" href="classAccelStepper.html#e79c49ad69d5ccc9da0ee691fa4ca235">setSpeed<\/a>(<span class="keywordtype">float<\/span> speed);$/;"	a
l00209	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00209"><\/a>00209 <span class="comment"><\/span>$/;"	a
l00210	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00210"><\/a>00210 <span class="comment">    \/\/\/ The most recently set speed<\/span>$/;"	a
l00211	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00211"><\/a>00211 <span class="comment">    \/\/\/ \\return the most recent speed in steps per second<\/span>$/;"	a
l00212	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00212"><\/a>00212 <span class="comment"><\/span>    <span class="keywordtype">float<\/span>   <a class="code" href="classAccelStepper.html#4f0989d0ae264e7eadfe1fa720769fb6">speed<\/a>();$/;"	a
l00213	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00213"><\/a>00213 <span class="comment"><\/span>$/;"	a
l00214	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00214"><\/a>00214 <span class="comment">    \/\/\/ The distance from the current position to the target position.<\/span>$/;"	a
l00215	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00215"><\/a>00215 <span class="comment">    \/\/\/ \\return the distance from the current position to the target position<\/span>$/;"	a
l00216	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00216"><\/a>00216 <span class="comment">    \/\/\/ in steps. Positive is clockwise from the current position.<\/span>$/;"	a
l00217	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00217"><\/a>00217 <span class="comment"><\/span>    <span class="keywordtype">long<\/span>    <a class="code" href="classAccelStepper.html#748665c3962e66fbc0e9373eb14c69c1">distanceToGo<\/a>();$/;"	a
l00218	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00218"><\/a>00218 <span class="comment"><\/span>$/;"	a
l00219	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00219"><\/a>00219 <span class="comment">    \/\/\/ The most recently set target position.<\/span>$/;"	a
l00220	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00220"><\/a>00220 <span class="comment">    \/\/\/ \\return the target position<\/span>$/;"	a
l00221	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00221"><\/a>00221 <span class="comment">    \/\/\/ in steps. Positive is clockwise from the 0 position.<\/span>$/;"	a
l00222	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00222"><\/a>00222 <span class="comment"><\/span>    <span class="keywordtype">long<\/span>    <a class="code" href="classAccelStepper.html#96685e0945b7cf75d5959da679cd911e">targetPosition<\/a>();$/;"	a
l00223	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00223"><\/a>00223 $/;"	a
l00224	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00224"><\/a>00224 <span class="comment"><\/span>$/;"	a
l00225	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00225"><\/a>00225 <span class="comment">    \/\/\/ The currently motor position.<\/span>$/;"	a
l00226	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00226"><\/a>00226 <span class="comment">    \/\/\/ \\return the current motor position<\/span>$/;"	a
l00227	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00227"><\/a>00227 <span class="comment">    \/\/\/ in steps. Positive is clockwise from the 0 position.<\/span>$/;"	a
l00228	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00228"><\/a>00228 <span class="comment"><\/span>    <span class="keywordtype">long<\/span>    <a class="code" href="classAccelStepper.html#5dce13ab2a1b02b8f443318886bf6fc5">currentPosition<\/a>();  $/;"	a
l00229	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00229"><\/a>00229 <span class="comment"><\/span>$/;"	a
l00230	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00230"><\/a>00230 <span class="comment">    \/\/\/ Resets the current position of the motor, so that wherever the motor<\/span>$/;"	a
l00231	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00231"><\/a>00231 <span class="comment">    \/\/\/ happens to be right now is considered to be the new 0 position. Useful<\/span>$/;"	a
l00232	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00232"><\/a>00232 <span class="comment">    \/\/\/ for setting a zero position on a stepper after an initial hardware<\/span>$/;"	a
l00233	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00233"><\/a>00233 <span class="comment">    \/\/\/ positioning move.<\/span>$/;"	a
l00234	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00234"><\/a>00234 <span class="comment">    \/\/\/ Has the side effect of setting the current motor speed to 0.<\/span>$/;"	a
l00235	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00235"><\/a>00235 <span class="comment">    \/\/\/ \\param[in] position The position in steps of wherever the motor<\/span>$/;"	a
l00236	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00236"><\/a>00236 <span class="comment">    \/\/\/ happens to be right now.<\/span>$/;"	a
l00237	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00237"><\/a>00237 <span class="comment"><\/span>    <span class="keywordtype">void<\/span>    <a class="code" href="classAccelStepper.html#9d917f014317fb9d3b5dc14e66f6c689">setCurrentPosition<\/a>(<span class="keywordtype">long<\/span> position);  $/;"	a
l00238	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00238"><\/a>00238     <span class="comment"><\/span>$/;"	a
l00239	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00239"><\/a>00239 <span class="comment">    \/\/\/ Moves the motor to the target position and blocks until it is at<\/span>$/;"	a
l00240	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00240"><\/a>00240 <span class="comment">    \/\/\/ position. Dont use this in event loops, since it blocks.<\/span>$/;"	a
l00241	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00241"><\/a>00241 <span class="comment"><\/span>    <span class="keywordtype">void<\/span>    <a class="code" href="classAccelStepper.html#344f58fef8cc34ac5aa75ba4b665d21c">runToPosition<\/a>();$/;"	a
l00242	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00242"><\/a>00242 <span class="comment"><\/span>$/;"	a
l00243	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00243"><\/a>00243 <span class="comment">    \/\/\/ Runs at the currently selected speed until the target position is reached<\/span>$/;"	a
l00244	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00244"><\/a>00244 <span class="comment">    \/\/\/ Does not implement accelerations.<\/span>$/;"	a
l00245	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00245"><\/a>00245 <span class="comment"><\/span>    <span class="keywordtype">boolean<\/span> <a class="code" href="classAccelStepper.html#9270d20336e76ac1fd5bcd5b9c34f301">runSpeedToPosition<\/a>();$/;"	a
l00246	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00246"><\/a>00246 <span class="comment"><\/span>$/;"	a
l00247	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00247"><\/a>00247 <span class="comment">    \/\/\/ Moves the motor to the new target position and blocks until it is at<\/span>$/;"	a
l00248	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00248"><\/a>00248 <span class="comment">    \/\/\/ position. Dont use this in event loops, since it blocks.<\/span>$/;"	a
l00249	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00249"><\/a>00249 <span class="comment">    \/\/\/ \\param[in] position The new target position.<\/span>$/;"	a
l00250	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00250"><\/a>00250 <span class="comment"><\/span>    <span class="keywordtype">void<\/span>    <a class="code" href="classAccelStepper.html#176c5d2e4c2f21e9e92b12e39a6f0e67">runToNewPosition<\/a>(<span class="keywordtype">long<\/span> position);$/;"	a
l00251	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00251"><\/a>00251 <span class="comment"><\/span>$/;"	a
l00252	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00252"><\/a>00252 <span class="comment">    \/\/\/ Disable motor pin outputs by setting them all LOW<\/span>$/;"	a
l00253	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00253"><\/a>00253 <span class="comment">    \/\/\/ Depending on the design of your electronics this may turn off<\/span>$/;"	a
l00254	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00254"><\/a>00254 <span class="comment">    \/\/\/ the power to the motor coils, saving power.<\/span>$/;"	a
l00255	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00255"><\/a>00255 <span class="comment">    \/\/\/ This is useful to support Arduino low power modes: disable the outputs<\/span>$/;"	a
l00256	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00256"><\/a>00256 <span class="comment">    \/\/\/ during sleep and then reenable with enableOutputs() before stepping<\/span>$/;"	a
l00257	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00257"><\/a>00257 <span class="comment">    \/\/\/ again.<\/span>$/;"	a
l00258	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00258"><\/a>00258 <span class="comment"><\/span>    <span class="keywordtype">void<\/span>    <a class="code" href="classAccelStepper.html#3591e29a236e2935afd7f64ff6c22006">disableOutputs<\/a>();$/;"	a
l00259	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00259"><\/a>00259 <span class="comment"><\/span>$/;"	a
l00260	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00260"><\/a>00260 <span class="comment">    \/\/\/ Enable motor pin outputs by setting the motor pins to OUTPUT<\/span>$/;"	a
l00261	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00261"><\/a>00261 <span class="comment">    \/\/\/ mode. Called automatically by the constructor.<\/span>$/;"	a
l00262	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00262"><\/a>00262 <span class="comment"><\/span>    <span class="keywordtype">void<\/span>    <a class="code" href="classAccelStepper.html#a279a50d30d0413f570c692cff071643">enableOutputs<\/a>();$/;"	a
l00263	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00263"><\/a>00263 <span class="comment"><\/span>$/;"	a
l00264	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00264"><\/a>00264 <span class="comment">    \/\/\/ Sets the minimum pulse width allowed by the stepper driver.<\/span>$/;"	a
l00265	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00265"><\/a>00265 <span class="comment">    \/\/\/ \\param[in] minWidth The minimum pulse width in microseconds.<\/span>$/;"	a
l00266	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00266"><\/a>00266 <span class="comment"><\/span>    <span class="keywordtype">void<\/span>    <a class="code" href="classAccelStepper.html#f4d3818e691dad5dc518308796ccf154">setMinPulseWidth<\/a>(<span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span> minWidth);$/;"	a
l00267	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00267"><\/a>00267 <span class="comment"><\/span>$/;"	a
l00268	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00268"><\/a>00268 <span class="comment">    \/\/\/ Sets the enable pin number for stepper drivers.<\/span>$/;"	a
l00269	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00269"><\/a>00269 <span class="comment">        \/\/\/ 0xFF indicates unused (default).<\/span>$/;"	a
l00270	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00270"><\/a>00270 <span class="comment">    \/\/\/ Otherwise, if a pin is set, the pin will be turned on when <\/span>$/;"	a
l00271	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00271"><\/a>00271 <span class="comment">    \/\/\/ enableOutputs() is called and switched off when disableOutputs() <\/span>$/;"	a
l00272	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00272"><\/a>00272 <span class="comment">    \/\/\/ is called.<\/span>$/;"	a
l00273	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00273"><\/a>00273 <span class="comment">    \/\/\/ \\param[in] enablePin Arduino digital pin number for motor enable<\/span>$/;"	a
l00274	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00274"><\/a>00274 <span class="comment">    \/\/\/ \\sa setPinsInverted<\/span>$/;"	a
l00275	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00275"><\/a>00275 <span class="comment"><\/span>    <span class="keywordtype">void<\/span>    <a class="code" href="classAccelStepper.html#56a81c5f00d02ca19646718e88e974c0">setEnablePin<\/a>(uint8_t enablePin = 0xff);$/;"	a
l00276	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00276"><\/a>00276 <span class="comment"><\/span>$/;"	a
l00277	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00277"><\/a>00277 <span class="comment">    \/\/\/ Sets the inversion for stepper driver pins<\/span>$/;"	a
l00278	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00278"><\/a>00278 <span class="comment">    \/\/\/ \\param[in] direction True for inverted direction pin, false for non-inverted<\/span>$/;"	a
l00279	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00279"><\/a>00279 <span class="comment">    \/\/\/ \\param[in] step      True for inverted step pin, false for non-inverted<\/span>$/;"	a
l00280	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00280"><\/a>00280 <span class="comment">    \/\/\/ \\param[in] enable    True for inverted enable pin, false (default) for non-inverted<\/span>$/;"	a
l00281	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00281"><\/a>00281 <span class="comment"><\/span>    <span class="keywordtype">void<\/span>    <a class="code" href="classAccelStepper.html#797b4bdb580d4ca7a1cfeabe3df0de35">setPinsInverted<\/a>(<span class="keywordtype">bool<\/span> direction, <span class="keywordtype">bool<\/span> <a class="code" href="classAccelStepper.html#3c9a220819d2451f79ff8a0c0a395b9f">step<\/a>, <span class="keywordtype">bool<\/span> enable = <span class="keyword">false<\/span>);$/;"	a
l00282	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00282"><\/a>00282 $/;"	a
l00283	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00283"><\/a>00283 <span class="keyword">protected<\/span>:$/;"	a
l00284	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00284"><\/a>00284 <span class="comment"><\/span>$/;"	a
l00285	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00285"><\/a>00285 <span class="comment">    \/\/\/ Forces the library to compute a new instantaneous speed and set that as<\/span>$/;"	a
l00286	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00286"><\/a>00286 <span class="comment">    \/\/\/ the current speed. Calls<\/span>$/;"	a
l00287	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00287"><\/a>00287 <span class="comment">    \/\/\/ desiredSpeed(), which can be overridden by subclasses. It is called by<\/span>$/;"	a
l00288	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00288"><\/a>00288 <span class="comment">    \/\/\/ the library:<\/span>$/;"	a
l00289	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00289"><\/a>00289 <span class="comment">    \/\/\/ \\li  after each step<\/span>$/;"	a
l00290	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00290"><\/a>00290 <span class="comment">    \/\/\/ \\li  after change to maxSpeed through setMaxSpeed()<\/span>$/;"	a
l00291	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00291"><\/a>00291 <span class="comment">    \/\/\/ \\li  after change to acceleration through setAcceleration()<\/span>$/;"	a
l00292	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00292"><\/a>00292 <span class="comment">    \/\/\/ \\li  after change to target position (relative or absolute) through<\/span>$/;"	a
l00293	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00293"><\/a>00293 <span class="comment">    \/\/\/ move() or moveTo()<\/span>$/;"	a
l00294	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00294"><\/a>00294 <span class="comment"><\/span>    <span class="keywordtype">void<\/span>           <a class="code" href="classAccelStepper.html#ffbee789b5c19165846cf0409860ae79">computeNewSpeed<\/a>();$/;"	a
l00295	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00295"><\/a>00295 <span class="comment"><\/span>$/;"	a
l00296	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00296"><\/a>00296 <span class="comment">    \/\/\/ Called to execute a step. Only called when a new step is<\/span>$/;"	a
l00297	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00297"><\/a>00297 <span class="comment">    \/\/\/ required. Subclasses may override to implement new stepping<\/span>$/;"	a
l00298	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00298"><\/a>00298 <span class="comment">    \/\/\/ interfaces. The default calls step1(), step2(), step4() or step8() depending on the<\/span>$/;"	a
l00299	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00299"><\/a>00299 <span class="comment">    \/\/\/ number of pins defined for the stepper.<\/span>$/;"	a
l00300	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00300"><\/a>00300 <span class="comment">    \/\/\/ \\param[in] step The current step phase number (0 to 7)<\/span>$/;"	a
l00301	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00301"><\/a>00301 <span class="comment"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span>   <a class="code" href="classAccelStepper.html#3c9a220819d2451f79ff8a0c0a395b9f">step<\/a>(uint8_t step);$/;"	a
l00302	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00302"><\/a>00302 <span class="comment"><\/span>$/;"	a
l00303	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00303"><\/a>00303 <span class="comment">    \/\/\/ Called to execute a step using stepper functions (pins = 0) Only called when a new step is<\/span>$/;"	a
l00304	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00304"><\/a>00304 <span class="comment">    \/\/\/ required. Calls _forward() or _backward() to perform the step<\/span>$/;"	a
l00305	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00305"><\/a>00305 <span class="comment"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span>   <a class="code" href="classAccelStepper.html#889f109756aa4c0a2feefebd8081a337">step0<\/a>(<span class="keywordtype">void<\/span>);$/;"	a
l00306	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00306"><\/a>00306 <span class="comment"><\/span>$/;"	a
l00307	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00307"><\/a>00307 <span class="comment">    \/\/\/ Called to execute a step on a stepper drover (ie where pins == 1). Only called when a new step is<\/span>$/;"	a
l00308	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00308"><\/a>00308 <span class="comment">    \/\/\/ required. Subclasses may override to implement new stepping<\/span>$/;"	a
l00309	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00309"><\/a>00309 <span class="comment">    \/\/\/ interfaces. The default sets or clears the outputs of Step pin1 to step, <\/span>$/;"	a
l00310	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00310"><\/a>00310 <span class="comment">    \/\/\/ and sets the output of _pin2 to the desired direction. The Step pin (_pin1) is pulsed for 1 microsecond<\/span>$/;"	a
l00311	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00311"><\/a>00311 <span class="comment">    \/\/\/ which is the minimum STEP pulse width for the 3967 driver.<\/span>$/;"	a
l00312	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00312"><\/a>00312 <span class="comment">    \/\/\/ \\param[in] step The current step phase number (0 to 7)<\/span>$/;"	a
l00313	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00313"><\/a>00313 <span class="comment"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span>   <a class="code" href="classAccelStepper.html#cc64254ea242b53588e948335fd9305f">step1<\/a>(uint8_t step);$/;"	a
l00314	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00314"><\/a>00314 <span class="comment"><\/span>$/;"	a
l00315	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00315"><\/a>00315 <span class="comment">    \/\/\/ Called to execute a step on a 2 pin motor. Only called when a new step is<\/span>$/;"	a
l00316	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00316"><\/a>00316 <span class="comment">    \/\/\/ required. Subclasses may override to implement new stepping<\/span>$/;"	a
l00317	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00317"><\/a>00317 <span class="comment">    \/\/\/ interfaces. The default sets or clears the outputs of pin1 and pin2<\/span>$/;"	a
l00318	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00318"><\/a>00318 <span class="comment">    \/\/\/ \\param[in] step The current step phase number (0 to 7)<\/span>$/;"	a
l00319	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00319"><\/a>00319 <span class="comment"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span>   <a class="code" href="classAccelStepper.html#88f11bf6361fe002585f731d34fe2e8b">step2<\/a>(uint8_t step);$/;"	a
l00320	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00320"><\/a>00320 <span class="comment"><\/span>$/;"	a
l00321	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00321"><\/a>00321 <span class="comment">    \/\/\/ Called to execute a step on a 4 pin motor. Only called when a new step is<\/span>$/;"	a
l00322	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00322"><\/a>00322 <span class="comment">    \/\/\/ required. Subclasses may override to implement new stepping<\/span>$/;"	a
l00323	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00323"><\/a>00323 <span class="comment">    \/\/\/ interfaces. The default sets or clears the outputs of pin1, pin2,<\/span>$/;"	a
l00324	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00324"><\/a>00324 <span class="comment">    \/\/\/ pin3, pin4.<\/span>$/;"	a
l00325	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00325"><\/a>00325 <span class="comment">    \/\/\/ \\param[in] step The current step phase number (0 to 7)<\/span>$/;"	a
l00326	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00326"><\/a>00326 <span class="comment"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span>   <a class="code" href="classAccelStepper.html#49e448d179bbe4e0f8003a3f9993789d">step4<\/a>(uint8_t step);$/;"	a
l00327	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00327"><\/a>00327 <span class="comment"><\/span>$/;"	a
l00328	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00328"><\/a>00328 <span class="comment">    \/\/\/ Called to execute a step on a 4 pin half-steper motor. Only called when a new step is<\/span>$/;"	a
l00329	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00329"><\/a>00329 <span class="comment">    \/\/\/ required. Subclasses may override to implement new stepping<\/span>$/;"	a
l00330	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00330"><\/a>00330 <span class="comment">    \/\/\/ interfaces. The default sets or clears the outputs of pin1, pin2,<\/span>$/;"	a
l00331	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00331"><\/a>00331 <span class="comment">    \/\/\/ pin3, pin4.<\/span>$/;"	a
l00332	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00332"><\/a>00332 <span class="comment">    \/\/\/ \\param[in] step The current step phase number (0 to 7)<\/span>$/;"	a
l00333	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00333"><\/a>00333 <span class="comment"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span>   <a class="code" href="classAccelStepper.html#5b33d1088e2beaf2176c42b08fb675ea">step8<\/a>(uint8_t step);$/;"	a
l00334	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00334"><\/a>00334 <span class="comment"><\/span>$/;"	a
l00335	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00335"><\/a>00335 <span class="comment">    \/\/\/ Compute and return the desired speed. The default algorithm uses<\/span>$/;"	a
l00336	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00336"><\/a>00336 <span class="comment">    \/\/\/ maxSpeed, acceleration and the current speed to set a new speed to<\/span>$/;"	a
l00337	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00337"><\/a>00337 <span class="comment">    \/\/\/ move the motor from teh current position to the target<\/span>$/;"	a
l00338	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00338"><\/a>00338 <span class="comment">    \/\/\/ position. Subclasses may override this to provide an alternate<\/span>$/;"	a
l00339	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00339"><\/a>00339 <span class="comment">    \/\/\/ algorithm (but do not block). Called by computeNewSpeed whenever a new speed neds to be<\/span>$/;"	a
l00340	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00340"><\/a>00340 <span class="comment">    \/\/\/ computed. <\/span>$/;"	a
l00341	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00341"><\/a>00341 <span class="comment"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">float<\/span>  <a class="code" href="classAccelStepper.html#6e4bd79c395e69beee31d76d0d3287e4">desiredSpeed<\/a>();$/;"	a
l00342	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00342"><\/a>00342     $/;"	a
l00343	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00343"><\/a>00343 <span class="keyword">private<\/span>:<span class="comment"><\/span>$/;"	a
l00344	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00344"><\/a>00344 <span class="comment">    \/\/\/ Number of pins on the stepper motor. Permits 2 or 4. 2 pins is a<\/span>$/;"	a
l00345	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00345"><\/a>00345 <span class="comment">    \/\/\/ bipolar, and 4 pins is a unipolar.<\/span>$/;"	a
l00346	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00346"><\/a>00346 <span class="comment"><\/span>    uint8_t        _pins;          <span class="comment">\/\/ 2 or 4<\/span>$/;"	a
l00347	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00347"><\/a>00347 <span class="comment"><\/span>$/;"	a
l00348	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00348"><\/a>00348 <span class="comment">    \/\/\/ Arduino pin number for the 2 or 4 pins required to interface to the<\/span>$/;"	a
l00349	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00349"><\/a>00349 <span class="comment">    \/\/\/ stepper motor.<\/span>$/;"	a
l00350	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00350"><\/a>00350 <span class="comment"><\/span>    uint8_t        _pin1, _pin2, _pin3, _pin4;$/;"	a
l00351	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00351"><\/a>00351 <span class="comment"><\/span>$/;"	a
l00352	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00352"><\/a>00352 <span class="comment">    \/\/\/ The current absolution position in steps.<\/span>$/;"	a
l00353	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00353"><\/a>00353 <span class="comment"><\/span>    <span class="keywordtype">long<\/span>           _currentPos;    <span class="comment">\/\/ Steps<\/span>$/;"	a
l00354	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00354"><\/a>00354 <span class="comment"><\/span>$/;"	a
l00355	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00355"><\/a>00355 <span class="comment">    \/\/\/ The target position in steps. The AccelStepper library will move the<\/span>$/;"	a
l00356	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00356"><\/a>00356 <span class="comment">    \/\/\/ motor from the _currentPos to the _targetPos, taking into account the<\/span>$/;"	a
l00357	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00357"><\/a>00357 <span class="comment">    \/\/\/ max speed, acceleration and deceleration<\/span>$/;"	a
l00358	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00358"><\/a>00358 <span class="comment"><\/span>    <span class="keywordtype">long<\/span>           _targetPos;     <span class="comment">\/\/ Steps<\/span>$/;"	a
l00359	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00359"><\/a>00359 <span class="comment"><\/span>$/;"	a
l00360	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00360"><\/a>00360 <span class="comment">    \/\/\/ The current motos speed in steps per second<\/span>$/;"	a
l00361	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00361"><\/a>00361 <span class="comment">    \/\/\/ Positive is clockwise<\/span>$/;"	a
l00362	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00362"><\/a>00362 <span class="comment"><\/span>    <span class="keywordtype">float<\/span>          _speed;         <span class="comment">\/\/ Steps per second<\/span>$/;"	a
l00363	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00363"><\/a>00363 <span class="comment"><\/span>$/;"	a
l00364	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00364"><\/a>00364 <span class="comment">    \/\/\/ The maximum permitted speed in steps per second. Must be &gt; 0.<\/span>$/;"	a
l00365	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00365"><\/a>00365 <span class="comment"><\/span>    <span class="keywordtype">float<\/span>          _maxSpeed;$/;"	a
l00366	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00366"><\/a>00366 <span class="comment"><\/span>$/;"	a
l00367	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00367"><\/a>00367 <span class="comment">    \/\/\/ The acceleration to use to accelerate or decelerate the motor in steps<\/span>$/;"	a
l00368	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00368"><\/a>00368 <span class="comment">    \/\/\/ per second per second. Must be &gt; 0<\/span>$/;"	a
l00369	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00369"><\/a>00369 <span class="comment"><\/span>    <span class="keywordtype">float<\/span>          _acceleration;$/;"	a
l00370	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00370"><\/a>00370 <span class="comment"><\/span>$/;"	a
l00371	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00371"><\/a>00371 <span class="comment">    \/\/\/ The current interval between steps in microseconds<\/span>$/;"	a
l00372	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00372"><\/a>00372 <span class="comment"><\/span>    <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span>  _stepInterval;$/;"	a
l00373	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00373"><\/a>00373 <span class="comment"><\/span>$/;"	a
l00374	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00374"><\/a>00374 <span class="comment">    \/\/\/ The last step time in microseconds<\/span>$/;"	a
l00375	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00375"><\/a>00375 <span class="comment"><\/span>    <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span>  _lastStepTime;$/;"	a
l00376	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00376"><\/a>00376 <span class="comment"><\/span>$/;"	a
l00377	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00377"><\/a>00377 <span class="comment">    \/\/\/ The minimum allowed pulse width in microseconds<\/span>$/;"	a
l00378	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00378"><\/a>00378 <span class="comment"><\/span>    <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span>   _minPulseWidth;$/;"	a
l00379	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00379"><\/a>00379 <span class="comment"><\/span>$/;"	a
l00380	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00380"><\/a>00380 <span class="comment">    \/\/\/ Is the direction pin inverted?<\/span>$/;"	a
l00381	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00381"><\/a>00381 <span class="comment"><\/span>    <span class="keywordtype">bool<\/span>           _dirInverted;$/;"	a
l00382	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00382"><\/a>00382 <span class="comment"><\/span>$/;"	a
l00383	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00383"><\/a>00383 <span class="comment">    \/\/\/ Is the step pin inverted?<\/span>$/;"	a
l00384	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00384"><\/a>00384 <span class="comment"><\/span>    <span class="keywordtype">bool<\/span>           _stepInverted;$/;"	a
l00385	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00385"><\/a>00385 <span class="comment"><\/span>$/;"	a
l00386	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00386"><\/a>00386 <span class="comment">    \/\/\/ Is the enable pin inverted?<\/span>$/;"	a
l00387	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00387"><\/a>00387 <span class="comment"><\/span>    <span class="keywordtype">bool<\/span>           _enableInverted;$/;"	a
l00388	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00388"><\/a>00388 <span class="comment"><\/span>$/;"	a
l00389	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00389"><\/a>00389 <span class="comment">        \/\/\/ Enable pin for stepper driver, or 0xFF if unused.<\/span>$/;"	a
l00390	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00390"><\/a>00390 <span class="comment"><\/span>    uint8_t        _enablePin;$/;"	a
l00391	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00391"><\/a>00391 $/;"	a
l00392	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00392"><\/a>00392     <span class="comment">\/\/ The pointer to a forward-step procedure<\/span>$/;"	a
l00393	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00393"><\/a>00393     void (*_forward)();$/;"	a
l00394	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00394"><\/a>00394 $/;"	a
l00395	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00395"><\/a>00395     <span class="comment">\/\/ The pointer to a backward-step procedure<\/span>$/;"	a
l00396	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00396"><\/a>00396     void (*_backward)();$/;"	a
l00397	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00397"><\/a>00397 };$/;"	a
l00398	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00398"><\/a>00398 $/;"	a
l00399	.\Firmware\lib\AccelStepper\doc\AccelStepper_8h-source.html	/^<a name="l00399"><\/a>00399 <span class="preprocessor">#endif <\/span>$/;"	a
lastInput	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^	double outputSum, lastInput;$/;"	m	class:PID
lastInputs	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	double lastInputs[101];$/;"	m	class:PID_ATune
lastTime	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^	unsigned long lastTime;$/;"	m	class:PID
lastTime	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	unsigned long peak1, peak2, lastTime;$/;"	m	class:PID_ATune
leftFocus	.\Firmware\lib\LiquidMenu\src\glyphs.h	/^uint8_t leftFocus[8] = {$/;"	m	namespace:glyph
leftToRight	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::leftToRight(void) {$/;"	f	class:LiquidCrystal
letter_l	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_l"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;l&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
levelHomed	.\Firmware\src\main.cpp	/^bool levelHomed = false; \/\/ Set to true when level winder has been homed$/;"	v
levelMotorStatus	.\Firmware\src\main.cpp	/^short levelMotorStatus = 0;$/;"	v
loop	.\Firmware\src\main.cpp	/^void loop() {$/;"	f
maxSpeed	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^float   AccelStepper::maxSpeed()$/;"	f	class:AccelStepper
maxZoom	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^var maxZoom;$/;"	v
menudata.children	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\menudata.js	/^var menudata={children:[$/;"	p
minZoom	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^var minZoom;$/;"	v
move	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::move(long relative)$/;"	f	class:AccelStepper
moveTo	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::moveTo(long absolute)$/;"	f	class:AccelStepper
moveTo	.\Firmware\lib\AccelStepper\MultiStepper.cpp	/^void MultiStepper::moveTo(long absolute[])$/;"	f	class:MultiStepper
myInput	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^    double *myInput;              \/\/ * Pointers to the Input, Output, and Setpoint variables$/;"	m	class:PID
myOutput	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^    double *myOutput;             \/\/   This creates a hard link between the variables and the $/;"	m	class:PID
mySetpoint	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^    double *mySetpoint;           \/\/   PID, freeing the user from having to constantly tell us$/;"	m	class:PID
nLookBack	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	int nLookBack;$/;"	m	class:PID_ATune
name	.\Firmware\lib\Arduino-PID-Library\library.json	/^      "name": "Brett Beauregard"$/;"	f
name	.\Firmware\lib\Arduino-PID-Library\library.json	/^  "name": "PID",$/;"	f
name	.\Firmware\lib\Encoder\library.json	/^  "name": "Encoder",$/;"	f
nested-classes	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_menu_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
newTemp	.\Firmware\src\main.cpp	/^double newTemp = 0; \/\/ A temporary temperature storage place used when reading the thermocouple$/;"	v
next_screen	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^void LiquidMenu::next_screen() {$/;"	f	class:LiquidMenu
next_screen	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^void LiquidSystem::next_screen() {$/;"	f	class:LiquidSystem
noAutoscroll	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::noAutoscroll(void) {$/;"	f	class:LiquidCrystal
noBlink	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::noBlink() {$/;"	f	class:LiquidCrystal
noCursor	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::noCursor() {$/;"	f	class:LiquidCrystal
noDisplay	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::noDisplay() {$/;"	f	class:LiquidCrystal
noiseBand	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	double noiseBand;$/;"	m	class:PID_ATune
oStep	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	double oStep;$/;"	m	class:PID_ATune
operator ++	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^void LiquidMenu::operator++() {$/;"	f	class:LiquidMenu
operator ++	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^void LiquidMenu::operator++(int) {$/;"	f	class:LiquidMenu
operator ++	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^void LiquidSystem::operator++() {$/;"	f	class:LiquidSystem
operator ++	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^void LiquidSystem::operator++(int) {$/;"	f	class:LiquidSystem
operator --	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^void LiquidMenu::operator--() {$/;"	f	class:LiquidMenu
operator --	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^void LiquidMenu::operator--(int) {$/;"	f	class:LiquidMenu
operator --	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^void LiquidSystem::operator--() {$/;"	f	class:LiquidSystem
operator --	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^void LiquidSystem::operator--(int) {$/;"	f	class:LiquidSystem
operator =	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^bool LiquidMenu::operator=(LiquidScreen *p_liquidScreen) {$/;"	f	class:LiquidMenu
operator =	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^bool LiquidMenu::operator=(uint8_t number) {$/;"	f	class:LiquidMenu
operator =	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^bool LiquidSystem::operator=(LiquidScreen *p_liquidScreen) {$/;"	f	class:LiquidSystem
operator =	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^bool LiquidSystem::operator=(uint8_t number) {$/;"	f	class:LiquidSystem
origin	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.h	/^    Thermocouple* origin;$/;"	m	class:final
origin	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.h	/^    Thermocouple* origin;$/;"	m	class:final
outMax	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^	double outMin, outMax;$/;"	m	class:PID
outMin	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^	double outMin, outMax;$/;"	m	class:PID
output	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	double *input, *output;$/;"	m	class:PID_ATune
output	.\Firmware\src\main.cpp	/^double output;$/;"	v
outputStart	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	double outputStart;$/;"	m	class:PID_ATune
outputSum	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^	double outputSum, lastInput;$/;"	m	class:PID
override	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.h	/^    double readCelsius() override;$/;"	m	class:final
override	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.h	/^    double readFahrenheit() override;$/;"	m	class:final
override	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.h	/^    double readKelvin() override;$/;"	m	class:final
override	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.h	/^    double readCelsius() override;$/;"	m	class:final
override	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.h	/^    double readFahrenheit() override;$/;"	m	class:final
override	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.h	/^    double readKelvin() override;$/;"	m	class:final
pOn	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^	int pOn;$/;"	m	class:PID
pOnE	.\Firmware\lib\Arduino-PID-Library\PID_v1.h	/^	bool inAuto, pOnE;$/;"	m	class:PID
peak1	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	unsigned long peak1, peak2, lastTime;$/;"	m	class:PID_ATune
peak2	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	unsigned long peak1, peak2, lastTime;$/;"	m	class:PID_ATune
peakCount	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	int peakCount;$/;"	m	class:PID_ATune
peakType	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	int peakType;$/;"	m	class:PID_ATune
peaks	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^    double peaks[10];$/;"	m	class:PID_ATune
pid	.\Firmware\src\main.cpp	/^PID pid(&temperature, &output, &setTemp, Kp, Ki, Kd, DIRECT);$/;"	v
pidAuto	.\Firmware\src\main.cpp	/^PID_ATune pidAuto(&temperature, &output);$/;"	v
pidTimekeeper	.\Firmware\src\main.cpp	/^unsigned long pidTimekeeper = 0;$/;"	v
pin1_bitmask	.\Firmware\lib\Encoder\Encoder.h	/^	IO_REG_TYPE            pin1_bitmask;$/;"	m	struct:__anon3
pin1_register	.\Firmware\lib\Encoder\Encoder.h	/^	volatile IO_REG_TYPE * pin1_register;$/;"	m	struct:__anon3
pin2_bitmask	.\Firmware\lib\Encoder\Encoder.h	/^	IO_REG_TYPE            pin2_bitmask;$/;"	m	struct:__anon3
pin2_register	.\Firmware\lib\Encoder\Encoder.h	/^	volatile IO_REG_TYPE * pin2_register;$/;"	m	struct:__anon3
platforms	.\Firmware\lib\Encoder\library.json	/^  "platforms":$/;"	f
position	.\Firmware\lib\Encoder\Encoder.h	/^	int32_t                position;$/;"	m	struct:__anon3
previous_screen	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^void LiquidMenu::previous_screen() {$/;"	f	class:LiquidMenu
previous_screen	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^void LiquidSystem::previous_screen() {$/;"	f	class:LiquidSystem
print	.\Firmware\lib\LiquidMenu\src\LiquidLine.cpp	/^void LiquidLine::print(DisplayClass *p_liquidCrystal, bool isFocused) {$/;"	f	class:LiquidLine
print	.\Firmware\lib\LiquidMenu\src\LiquidScreen.cpp	/^void LiquidScreen::print(DisplayClass *p_liquidCrystal) const {$/;"	f	class:LiquidScreen
print_me	.\Firmware\lib\LiquidMenu\src\LiquidLine.cpp	/^void print_me(uintptr_t address) {$/;"	f
print_variable	.\Firmware\lib\LiquidMenu\src\LiquidLine.cpp	/^void LiquidLine::print_variable(DisplayClass *p_liquidCrystal, uint8_t number) {$/;"	f	class:LiquidLine
pro-attribs	.\Firmware\lib\AccelStepper\doc\classAccelStepper.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-methods	.\Firmware\lib\AccelStepper\doc\classAccelStepper.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"><\/a>$/;"	a
pro-types	.\Firmware\lib\AccelStepper\doc\classAccelStepper.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-types"><\/a>$/;"	a
pub-methods	.\Firmware\lib\AccelStepper\doc\classAccelStepper.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\class_liquid_line.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\class_liquid_menu.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\class_liquid_screen.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\class_liquid_system.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-types	.\Firmware\lib\AccelStepper\doc\classAccelStepper.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pulseEnable	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::pulseEnable(void) {$/;"	f	class:LiquidCrystal
read	.\Firmware\lib\Encoder\Encoder.h	/^	inline int32_t read() {$/;"	f	class:Encoder
readAndReset	.\Firmware\lib\Encoder\Encoder.h	/^	inline int32_t readAndReset() {$/;"	f	class:Encoder
readCelsius	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.cpp	/^double AverageThermocouple::readCelsius() {$/;"	f	class:AverageThermocouple
readCelsius	.\Firmware\lib\MAX6675_Thermocouple\src\MAX6675_Thermocouple.cpp	/^double MAX6675_Thermocouple::readCelsius() {$/;"	f	class:MAX6675_Thermocouple
readCelsius	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.cpp	/^double SmoothThermocouple::readCelsius() {$/;"	f	class:SmoothThermocouple
readFahrenheit	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.cpp	/^double AverageThermocouple::readFahrenheit() {$/;"	f	class:AverageThermocouple
readFahrenheit	.\Firmware\lib\MAX6675_Thermocouple\src\MAX6675_Thermocouple.cpp	/^double MAX6675_Thermocouple::readFahrenheit() {$/;"	f	class:MAX6675_Thermocouple
readFahrenheit	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.cpp	/^double SmoothThermocouple::readFahrenheit() {$/;"	f	class:SmoothThermocouple
readKelvin	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.cpp	/^double AverageThermocouple::readKelvin() {$/;"	f	class:AverageThermocouple
readKelvin	.\Firmware\lib\MAX6675_Thermocouple\src\MAX6675_Thermocouple.cpp	/^double MAX6675_Thermocouple::readKelvin() {$/;"	f	class:MAX6675_Thermocouple
readKelvin	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.cpp	/^double SmoothThermocouple::readKelvin() {$/;"	f	class:SmoothThermocouple
readingsNumber	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.h	/^    int readingsNumber;$/;"	m	class:final
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(bool variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(boolFnPtr variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(char variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(char* variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(charFnPtr variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(charPtrFnPtr variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(const char* variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(constcharPtrFnPtr variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(double variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(doubleFnPtr variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(float variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(floatFnPtr variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(int16_t variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(int16tFnPtr variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(int32_t variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(int32tFnPtr variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(int8_t variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(int8tFnPtr variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(uint16_t variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(uint16tFnPtr variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(uint32_t variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(uint32tFnPtr variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(uint8_t variable) {$/;"	f
recognizeType	.\Firmware\lib\LiquidMenu\src\recognizeType.cpp	/^DataType recognizeType(uint8tFnPtr variable) {$/;"	f
repository	.\Firmware\lib\Arduino-PID-Library\library.json	/^  "repository":$/;"	f
repository	.\Firmware\lib\Encoder\library.json	/^  "repository":$/;"	f
returnPIDConstants	.\Firmware\src\main.cpp	/^ void returnPIDConstants(){$/;"	f
rightFocus	.\Firmware\lib\LiquidMenu\src\glyphs.h	/^uint8_t rightFocus[8] = {$/;"	m	namespace:glyph
rightToLeft	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::rightToLeft(void) {$/;"	f	class:LiquidCrystal
rollerMotorStatus	.\Firmware\src\main.cpp	/^short rollerMotorStatus = 0;$/;"	v
root	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^var root = document.documentElement;$/;"	v
round	.\Firmware\lib\AccelStepper\AccelStepper.h	269;"	d
run	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^boolean AccelStepper::run()$/;"	f	class:AccelStepper
run	.\Firmware\lib\AccelStepper\MultiStepper.cpp	/^boolean MultiStepper::run()$/;"	f	class:MultiStepper
runSpeed	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^boolean AccelStepper::runSpeed()$/;"	f	class:AccelStepper
runSpeedToPosition	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^boolean AccelStepper::runSpeedToPosition()$/;"	f	class:AccelStepper
runSpeedToPosition	.\Firmware\lib\AccelStepper\MultiStepper.cpp	/^void    MultiStepper::runSpeedToPosition()$/;"	f	class:MultiStepper
runToNewPosition	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::runToNewPosition(long position)$/;"	f	class:AccelStepper
runToPosition	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::runToPosition()$/;"	f	class:AccelStepper
running	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	bool running;$/;"	m	class:PID_ATune
sampleTime	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	int sampleTime;$/;"	m	class:PID_ATune
scrollDisplayLeft	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::scrollDisplayLeft(void) {$/;"	f	class:LiquidCrystal
scrollDisplayRight	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::scrollDisplayRight(void) {$/;"	f	class:LiquidCrystal
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\all_0.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\all_1.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\all_2.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\all_3.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\all_4.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\all_5.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\all_6.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\all_7.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\all_8.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\all_9.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\all_a.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\all_b.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\all_c.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\all_d.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\all_e.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\classes_0.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\defines_0.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\defines_1.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\defines_2.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\defines_3.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\enums_0.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\enums_1.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\files_0.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\files_1.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\files_2.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\files_3.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\files_4.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\functions_0.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\functions_1.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\functions_2.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\functions_3.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\functions_4.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\functions_5.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\functions_6.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\functions_7.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\functions_8.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\functions_9.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\functions_a.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\functions_b.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\pages_0.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\pages_1.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\variables_0.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\variables_1.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\variables_2.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\variables_3.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\variables_4.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\variables_5.js	/^var searchData=$/;"	v
searchData	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\variables_6.js	/^var searchData=$/;"	v
send	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::send(uint8_t value, uint8_t mode) {$/;"	f	class:LiquidCrystal
serializeXmlNode	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^function serializeXmlNode(xmlNode)$/;"	f
setAcceleration	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::setAcceleration(float acceleration)$/;"	f	class:AccelStepper
setAttributes	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^function setAttributes(element, attributes)$/;"	f
setCTM	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^function setCTM(element, matrix)$/;"	f
setClassAttr	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^function setClassAttr(elem,attr)$/;"	f
setCurrentPosition	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::setCurrentPosition(long position)$/;"	f	class:AccelStepper
setCursor	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::setCursor(uint8_t col, uint8_t row)$/;"	f	class:LiquidCrystal
setEnablePin	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::setEnablePin(uint8_t enablePin)$/;"	f	class:AccelStepper
setKeyActions	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\search\search.js	/^function setKeyActions(elem,action)$/;"	f
setMaxSpeed	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::setMaxSpeed(float speed)$/;"	f	class:AccelStepper
setMinPulseWidth	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::setMinPulseWidth(unsigned int minWidth)$/;"	f	class:AccelStepper
setOutputPins	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::setOutputPins(uint8_t mask)$/;"	f	class:AccelStepper
setPinsInverted	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::setPinsInverted(bool directionInvert, bool stepInvert, bool enableInvert)$/;"	f	class:AccelStepper
setPinsInverted	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::setPinsInverted(bool pin1Invert, bool pin2Invert, bool pin3Invert, bool pin4Invert, bool enableInvert)$/;"	f	class:AccelStepper
setRowOffsets	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::setRowOffsets(int row0, int row1, int row2, int row3)$/;"	f	class:LiquidCrystal
setSmoothingFactor	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.cpp	/^inline void SmoothThermocouple::setSmoothingFactor(const int smoothingFactor) {$/;"	f	class:SmoothThermocouple
setSpeed	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::setSpeed(float speed)$/;"	f	class:AccelStepper
setTemp	.\Firmware\src\main.cpp	/^double setTemp = 0;$/;"	v
set_asGlyph	.\Firmware\lib\LiquidMenu\src\LiquidLine.cpp	/^bool LiquidLine::set_asGlyph(uint8_t number) {$/;"	f	class:LiquidLine
set_asProgmem	.\Firmware\lib\LiquidMenu\src\LiquidLine.cpp	/^bool LiquidLine::set_asProgmem(uint8_t number) {$/;"	f	class:LiquidLine
set_decimalPlaces	.\Firmware\lib\LiquidMenu\src\LiquidLine.cpp	/^void LiquidLine::set_decimalPlaces(uint8_t decimalPlaces)$/;"	f	class:LiquidLine
set_displayLineCount	.\Firmware\lib\LiquidMenu\src\LiquidScreen.cpp	/^void LiquidScreen::set_displayLineCount(uint8_t lines) {$/;"	f	class:LiquidScreen
set_focusPosition	.\Firmware\lib\LiquidMenu\src\LiquidLine.cpp	/^bool LiquidLine::set_focusPosition(Position position, uint8_t column, uint8_t row) {$/;"	f	class:LiquidLine
set_focusPosition	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^bool LiquidMenu::set_focusPosition(Position position) {$/;"	f	class:LiquidMenu
set_focusPosition	.\Firmware\lib\LiquidMenu\src\LiquidScreen.cpp	/^bool LiquidScreen::set_focusPosition(Position position) {$/;"	f	class:LiquidScreen
set_focusPosition	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^bool LiquidSystem::set_focusPosition(Position position) {$/;"	f	class:LiquidSystem
set_focusSymbol	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^bool LiquidMenu::set_focusSymbol(Position position, uint8_t symbol[8]) {$/;"	f	class:LiquidMenu
set_focusSymbol	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^bool LiquidSystem::set_focusSymbol(Position position, uint8_t symbol[8]) {$/;"	f	class:LiquidSystem
set_focusedLine	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^bool LiquidMenu::set_focusedLine(uint8_t lineIndex) {$/;"	f	class:LiquidMenu
set_focusedLine	.\Firmware\lib\LiquidMenu\src\LiquidScreen.cpp	/^bool LiquidScreen::set_focusedLine(uint8_t lineIndex) {$/;"	f	class:LiquidScreen
set_focusedLine	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^bool LiquidSystem::set_focusedLine(uint8_t lineIndex) {$/;"	f	class:LiquidSystem
setpoint	.\Firmware\lib\PID_AutoTune_v0\PID_AutoTune_v0.h	/^	double setpoint;$/;"	m	class:PID_ATune
setup	.\Firmware\src\main.cpp	/^void setup() {$/;"	f
sleep	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.cpp	/^inline void AverageThermocouple::sleep() {$/;"	f	class:AverageThermocouple
smoothe	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.cpp	/^double SmoothThermocouple::smoothe($/;"	f	class:SmoothThermocouple
smoothingFactor	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.h	/^    int smoothingFactor;$/;"	m	class:final
softUpdate	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^void LiquidMenu::softUpdate() const {$/;"	f	class:LiquidMenu
softUpdate	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^void LiquidSystem::softUpdate() const {$/;"	f	class:LiquidSystem
speed	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^float AccelStepper::speed()$/;"	f	class:AccelStepper
spiread	.\Firmware\lib\MAX6675_Thermocouple\src\MAX6675_Thermocouple.cpp	/^byte MAX6675_Thermocouple::spiread() {$/;"	f	class:MAX6675_Thermocouple
state	.\Firmware\lib\Encoder\Encoder.h	/^	uint8_t                state;$/;"	m	struct:__anon3
state	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^var state = 'none';$/;"	v
stateOrigin	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^var stateOrigin;$/;"	v
stateTf	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^var stateTf = root.createSVGMatrix();$/;"	v
step	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::step(long step)$/;"	f	class:AccelStepper
step0	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::step0(long step)$/;"	f	class:AccelStepper
step1	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::step1(long step)$/;"	f	class:AccelStepper
step2	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::step2(long step)$/;"	f	class:AccelStepper
step3	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::step3(long step)$/;"	f	class:AccelStepper
step4	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::step4(long step)$/;"	f	class:AccelStepper
step6	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::step6(long step)$/;"	f	class:AccelStepper
step8	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::step8(long step)$/;"	f	class:AccelStepper
stop	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^void AccelStepper::stop()$/;"	f	class:AccelStepper
stopPidAuto	.\Firmware\src\main.cpp	/^bool stopPidAuto = false; \/\/ Set to true when the autotuner finishes$/;"	v
stringLen	.\Firmware\src\HAL\macros.h	/^    constexpr unsigned stringLen(const char *str) {$/;"	f	namespace:CompileTimeString
svgDoc	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^var svgDoc;$/;"	v
switch_focus	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^void LiquidMenu::switch_focus(bool forward) {$/;"	f	class:LiquidMenu
switch_focus	.\Firmware\lib\LiquidMenu\src\LiquidScreen.cpp	/^void LiquidScreen::switch_focus(bool forward) {$/;"	f	class:LiquidScreen
switch_focus	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^void LiquidSystem::switch_focus(bool forward) {$/;"	f	class:LiquidSystem
targetPosition	.\Firmware\lib\AccelStepper\AccelStepper.cpp	/^long AccelStepper::targetPosition()$/;"	f	class:AccelStepper
temperature	.\Firmware\src\main.cpp	/^double temperature = -99; \/\/ Used to display the temperature on the LCD$/;"	v
thermocouple	.\Firmware\src\main.cpp	/^Thermocouple* thermocouple = new MAX6675_Thermocouple(THERMO_SCK, THERMO_CS, THERMO_SO);$/;"	v
toggleFolder	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\dynsections.js	/^function toggleFolder(id)$/;"	f
toggleInherit	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\dynsections.js	/^function toggleInherit(id)$/;"	f
toggleLevel	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\dynsections.js	/^function toggleLevel(level)$/;"	f
toggleVisibility	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\dynsections.js	/^function toggleVisibility(linkObj)$/;"	f
type	.\Firmware\lib\Arduino-PID-Library\library.json	/^    "type": "git",$/;"	f
type	.\Firmware\lib\Encoder\library.json	/^    "type": "git",$/;"	f
type	.\Firmware\src\HAL\macros.h	/^    template <typename T, typename ... Args> struct first_type_of { typedef T type; };$/;"	t	struct:Private::first_type_of
type	.\Firmware\src\HAL\macros.h	/^    template <typename T> struct first_type_of<T> { typedef T type; };$/;"	t	struct:Private::first_type_of
type	.\Firmware\src\HAL\macros.h	/^    template<typename _Tp>              struct enable_if<true, _Tp> { typedef _Tp type; };$/;"	t	struct:Private::enable_if
typedef-members	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_menu_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
uint16tFnPtr	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^typedef uint16_t (*uint16tFnPtr)();$/;"	t
uint32tFnPtr	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^typedef uint32_t (*uint32tFnPtr)();$/;"	t
uint8tFnPtr	.\Firmware\lib\LiquidMenu\src\LiquidMenu.h	/^typedef uint8_t (*uint8tFnPtr)();$/;"	t
update	.\Firmware\lib\Encoder\Encoder.h	/^	static void update(Encoder_internal_state_t *arg) {$/;"	f	class:Encoder
update	.\Firmware\lib\LiquidMenu\src\LiquidMenu.cpp	/^void LiquidMenu::update() const {$/;"	f	class:LiquidMenu
update	.\Firmware\lib\LiquidMenu\src\LiquidSystem.cpp	/^void LiquidSystem::update() const {$/;"	f	class:LiquidSystem
updateStripes	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\dynsections.js	/^function updateStripes()$/;"	f
url	.\Firmware\lib\Arduino-PID-Library\library.json	/^    "url": "https:\/\/github.com\/br3ttb\/Arduino-PID-Library.git"$/;"	f
url	.\Firmware\lib\Arduino-PID-Library\library.json	/^  "url": "http:\/\/playground.arduino.cc\/Code\/PIDLibrary",$/;"	f
url	.\Firmware\lib\Encoder\library.json	/^    "url": "https:\/\/github.com\/PaulStoffregen\/Encoder.git"$/;"	f
validate	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.cpp	/^inline A AverageThermocouple::validate(A data, B alternative) {$/;"	f	class:AverageThermocouple
value	.\Firmware\src\HAL\macros.h	/^    template<typename T, typename U> struct is_same { enum { value = false }; };$/;"	e	enum:Private::is_same::__anon4
value	.\Firmware\src\HAL\macros.h	/^    template<typename T> struct is_same<T, T> { enum { value = true }; };$/;"	e	enum:Private::is_same::__anon5
var-members	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_menu_8cpp.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
var-members	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_menu_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
var-members	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\_liquid_menu__config_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
var-members	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\glyphs_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
var-members	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\symbols_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
winderMotorStatus	.\Firmware\src\main.cpp	/^short winderMotorStatus = 0;$/;"	v
window.onresize	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^window.onresize=function()$/;"	f
windowHeight	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^var windowHeight;$/;"	v
windowWidth	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^var windowWidth;$/;"	v
write	.\Firmware\lib\Encoder\Encoder.h	/^	inline void write(int32_t p) {$/;"	f	class:Encoder
write	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^inline size_t LiquidCrystal::write(uint8_t value) {$/;"	f	class:LiquidCrystal
write4bits	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::write4bits(uint8_t value) {$/;"	f	class:LiquidCrystal
write8bits	.\Firmware\lib\LiquidCrystal\src\LiquidCrystal.cpp	/^void LiquidCrystal::write8bits(uint8_t value) {$/;"	f	class:LiquidCrystal
zoomInFactor	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^var zoomInFactor;$/;"	v
zoomOutFactor	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^var zoomOutFactor;$/;"	v
zoomSteps	.\Firmware\lib\LiquidMenu\doc\Doxygen\html\svgpan.js	/^var zoomSteps = 10;$/;"	v
~AverageThermocouple	.\Firmware\lib\MAX6675_Thermocouple\src\AverageThermocouple.cpp	/^AverageThermocouple::~AverageThermocouple() {$/;"	f	class:AverageThermocouple
~SmoothThermocouple	.\Firmware\lib\MAX6675_Thermocouple\src\SmoothThermocouple.cpp	/^SmoothThermocouple::~SmoothThermocouple() {$/;"	f	class:SmoothThermocouple
~Thermocouple	.\Firmware\lib\MAX6675_Thermocouple\src\Thermocouple.h	/^		virtual ~Thermocouple() {};$/;"	f	class:Thermocouple
